{
  "sources": [
    {
      "title": "Release notes from osmosfeed",
      "feedUrl": "https://github.com/osmoscraft/osmosfeed/releases.atom",
      "siteUrl": "https://github.com/osmoscraft/osmosfeed/releases",
      "articles": []
    },
    {
      "title": "Lainbo's Blog",
      "feedUrl": "https://lainbo.com/rss/feed.xml",
      "siteUrl": "https://lainbo.com/",
      "articles": [
        {
          "id": "https://lainbo.com/article/collection",
          "author": null,
          "description": "日常看见一些有特色的库会收集下来，持续收集中",
          "link": "https://lainbo.com/article/collection",
          "publishedOn": "2024-03-16T01:47:15.000Z",
          "wordCount": 343,
          "title": "⭐收集有特色的库",
          "imageUrl": "/bg_image.jpg"
        },
        {
          "id": "https://lainbo.com/article/clash-config",
          "author": null,
          "description": "Clash确实是开箱即用，但开箱时并不是一个优秀的状态。当我将所有服务迁移到国外服务商时，我意识到在短时间内离不开Clash了。为了防止出现问题，我研究了一些Clash相关的东西。现在是时候做一个总结了。",
          "link": "https://lainbo.com/article/clash-config",
          "publishedOn": "2024-03-02T04:39:02.000Z",
          "wordCount": 874,
          "title": "Clash Verge系列使用最佳实践",
          "imageUrl": "/bg_image.jpg"
        },
        {
          "id": "https://lainbo.com/article/high-quality-prompt",
          "author": null,
          "description": "如果你认为ChatGPT给出的官方教程太长了, 或无法看明白, 可以看看这个这个总结的版本, 除了指导如何编写高质量Prompt, 还在文末给出了适应大部分场景的模板",
          "link": "https://lainbo.com/article/high-quality-prompt",
          "publishedOn": "2024-02-21T14:01:00.000Z",
          "wordCount": 644,
          "title": "如何编写高质量AI Prompt",
          "imageUrl": "/bg_image.jpg"
        },
        {
          "id": "https://lainbo.com/article/use-nvm-desktop",
          "author": null,
          "description": "在用过一些Node版本管理工具后, 这似乎是一个最好的解决方案。",
          "link": "https://lainbo.com/article/use-nvm-desktop",
          "publishedOn": "2024-02-21T08:46:00.000Z",
          "wordCount": 446,
          "title": "nvm-desktop的使用",
          "imageUrl": "/bg_image.jpg"
        }
      ]
    },
    {
      "title": "张鑫旭-鑫空间-鑫生活",
      "feedUrl": "https://www.zhangxinxu.com/wordpress/feed/",
      "siteUrl": "https://www.zhangxinxu.com/wordpress",
      "articles": [
        {
          "id": "https://www.zhangxinxu.com/wordpress/?p=11135",
          "author": "张 鑫旭",
          "description": "全新的Screen Wake Lock API，可以让网页无论放置多久，都不要担心熄屏，或出现屏保，Web如今越来越强了。",
          "link": "https://www.zhangxinxu.com/wordpress/2024/03/js-screen-wake-lock-api/",
          "publishedOn": "2024-03-17T15:35:45.000Z",
          "wordCount": 1387,
          "title": "今天才知道，Web网页也能阻止息屏了",
          "imageUrl": null
        },
        {
          "id": "https://www.zhangxinxu.com/wordpress/?p=11124",
          "author": "张 鑫旭",
          "description": "音视频合成的时候，有倍速合成的需求，起初，我以为这只是个手到擒来的小需求，细究之下发现问题并不简单……",
          "link": "https://www.zhangxinxu.com/wordpress/2024/02/js-audioencoder-backplayrate-audiobuffer/",
          "publishedOn": "2024-02-29T14:22:22.000Z",
          "wordCount": 1742,
          "title": "不改变音调情况下Audio音频的倍速合成JS实现",
          "imageUrl": null
        }
      ]
    },
    {
      "title": "阮一峰的网络日志",
      "feedUrl": "https://feeds.feedburner.com/ruanyifeng",
      "siteUrl": "http://www.ruanyifeng.com/blog/",
      "articles": [
        {
          "id": "http://www.ruanyifeng.com/blog/2024/03/weekly-issue-293.html",
          "author": null,
          "description": "这里记录每周值得分享的科技内容，周五发布。\n本杂志开源，欢迎投稿。另有《谁在招人》服务，发布程序员招聘信息。合作请邮件联系（yifeng.ruan@gmail.com）。\n封面图\n\n安徽芜湖轻轨，为了穿越人行天桥和高架，有一段设计成了波峰波谷，乘坐时会有一点过山车的感觉。（via）\n一周是一年的2%\n纳特·弗里德曼（Nat Friedman）曾经是 GitHub 的 CEO，现在是一名风险投资家。\n\n他的个人网站首页，写着一些自己的信条。其中有一条，让我很震动。\n他写道：\"一周是一年的2%。\"\n我一直觉得，每周七天是很短的时间，尤其是发布周刊以后，更是过得飞快。\n但是，他的这句话让我意识到，每周其实是一年当中很重要的组成部分。虚度一周就是虚度一年的2%。\n你没有几周可以虚度的。只要多浪费几周，这一年很快过去。\n反过来，过好这一周，那么这一年的2%就有价值了。只要这样多过几周，一年就会变得很充实，有拿得出手的成果。\n我坚持写周刊，每周记录一点东西，整理一些思考，现在想起来，其实就是在督促自己过好这一年的2%。\n维苏威古卷\n公元79年10月24日，意大利的维苏威火山爆发，一天之内就毁灭了两万多人的庞贝古城。\n火山灰掩盖了整座城市，其中有一栋房子存放了各种书籍。直到18世纪，这栋房子才重新被发现，下面是考古学家的建筑复原图。\n\n房子里面的1800多卷纸莎草古书，都已经完全碳化。\n\n\n考古学家试图展开这些烧焦的古书，但是纸张一碰就碎。\n\n每一页的碎片就像下面这样。\n\n没有人能从这些烧焦的古书上，读出一个字。\n2019年，一位美国科学家提出了一种新方法，使用短红外高光谱成像技术，对这些古卷进行 3D 扫描，然后虚拟建模，在不接触古卷的情况下，就可以展开或压平每一页，从而复现上面的笔迹。\n\n\n下面是扫描后的页面结果。\n\n问题是上面的笔迹还是很模糊，无法确定是哪一个字母，更不要说读出句子…",
          "link": "http://www.ruanyifeng.com/blog/2024/03/weekly-issue-293.html",
          "publishedOn": "2024-03-15T00:13:02.000Z",
          "wordCount": null,
          "title": "科技爱好者周刊（第 293 期）：一周是一年的2%",
          "imageUrl": null
        },
        {
          "id": "http://www.ruanyifeng.com/blog/2024/03/weekly-issue-292.html",
          "author": null,
          "description": "这里记录每周值得分享的科技内容，周五发布。\n本杂志开源，欢迎投稿。另有《谁在招人》服务，发布程序员招聘信息。合作请邮件联系（yifeng.ruan@gmail.com）。\n封面图\n\n意大利佛罗伦萨新机场，宣布了设计方案。候机楼顶部将有一个7.7公顷的葡萄种植园，用来酿造当地著名的葡萄酒。（via）\n所有代码都是技术债\n代码是公司的资产，公司总是鼓励大家多写代码。但是，很多人（尤其是管理层）没有意识到，代码也是负债。\n代码越多，债越多，这就是程序员常说的\"技术债\"。\n\n今天我想谈谈，什么是\"技术债\"？为什么你拥有的代码太多，不是一件好事。\n\"技术债\"（technical debt）源自著名程序员沃德·坎宁安（Ward Cunningham）的一篇文章。他写了一句话：\"交付代码就像负债累累。\"\n\n你的代码一旦进入生产环境，就像背上一笔债务，将来需要不断支付利息，除非代码不再使用。\n这个比喻获得了共鸣，人们把代码带来的负担，称为\"技术债\"。\n为什么代码好比负债累累？这有两个原因。\n第一个原因是，由于各种限制，代码的实现有问题，包含了 Bug，或者选择了有问题的组件，后期需要修改或重写。\n第二个原因是，即使代码是完美的，但由于技术进步，它会逐渐腐化过时，后期需要不断维护和更新，这通常比原始开发成本更高。\n这意味着，无论多么小心，上线的代码总是有\"技术债\"。 可以这样说，所有的代码都是技术债。\n\n\"技术债\"的可怕之处，在于你必须按时偿还，如果拖着不还，它就会像雪球一样越滚越多，维护成本越来越高，直到再也无法维护，只能放弃这段代码。\n既然所有代码都是技术债，程序员写代码时，就必须考虑到它的长期成本，尽量减轻自己或别人日后的负担（利息）。\n一个基本的事实是 代码越少，技术债越小；没有代码，就没有技术债。从这个角度看，软件开发的正确做法是下面两点。\n（1）冗余的代码都要删除。\n（2）只实现…",
          "link": "http://www.ruanyifeng.com/blog/2024/03/weekly-issue-292.html",
          "publishedOn": "2024-03-08T00:24:48.000Z",
          "wordCount": null,
          "title": "科技爱好者周刊（第 292 期）：所有代码都是技术债",
          "imageUrl": null
        },
        {
          "id": "http://www.ruanyifeng.com/blog/2024/03/weekly-issue-291.html",
          "author": null,
          "description": "这里记录每周值得分享的科技内容，周五发布。\n本杂志开源，欢迎投稿。另有《谁在招人》服务，发布程序员招聘信息。合作请邮件联系（yifeng.ruan@gmail.com）。\n封面图\n\n2022年完工的宁波惠贞高级中学，将学校与公园融为一体，在体育场看台上方，设计了一个几层楼高的开放式空间。（via）\nAI 没有护城河\n上周，魅族手机突然宣布，停止传统的智能手机新项目，All in AI。\n\n魅族董事长沈子瑜公开说，\"给魅族的智能手机时代一个完美的句号\"，以后推出的将全部是 AI 设备。\n看上去，魅族觉得，AI 比手机更有前途，所以决定停止老本行，改做 AI 设备。\n\n（图片说明：最新的\"魅族 21 PRO\"手机，大概没有下一代了。）\n最近，AI 如日中天，动心的企业恐怕不在少数，大家都想趁早加入，分一杯羹。\n但是，我想泼一点冷水。AI 更有前途是不假，但是改做 AI 真的更容易活下去吗？\n去年上半年，一份谷歌内部报告泄漏，据说是某个研究员写给谷歌高管的，看上去可信度很高。\n当时，谷歌内部正在讨论，如何应对 OpenAI 公司的 ChatGPT。这个研究员提出自己的看法，题目就叫做《AI 没有护城河》（中文译文）。\n\n他的核心观点是，即使谷歌全力投入，可能也赢不了这场 AI 竞赛。不仅谷歌赢不了，OpenAI 也赢不了。\n原因倒不是谷歌的能力不行，而是 AI 行业有一些特点，导致这是一个完全竞争行业，\"没有护城河\"，想要获得领先优势和垄断利润，极其困难。\n（1）生成式 AI 的核心技术是开源的，任何人都可以获取。\n某些公司可能有独家技术，但不是关键部分。AI 的架构和原理都是公开的，不同的只是各家的实现。\n网上有 AI 的开源模型，功能越来越强。只要按照教程操作，即使是家用电脑，也能很快架设一个可用的 AI 服务。\n（2）AI 模型的替代性很强。\n各公司的模型有强有弱，但是核心…",
          "link": "http://www.ruanyifeng.com/blog/2024/03/weekly-issue-291.html",
          "publishedOn": "2024-03-01T00:25:43.000Z",
          "wordCount": null,
          "title": "科技爱好者周刊（第 291 期）：AI 没有护城河",
          "imageUrl": null
        },
        {
          "id": "http://www.ruanyifeng.com/blog/2024/02/weekly-issue-290.html",
          "author": null,
          "description": "这里记录每周值得分享的科技内容，周五发布。\n本杂志开源，欢迎投稿。另有《谁在招人》服务，发布程序员招聘信息。合作请邮件联系（yifeng.ruan@gmail.com）。\n封面图\n\n上图是国际野生动物摄影师比赛（2023年度）的第一名作品，一只小北极熊在挪威斯瓦尔巴群岛附近漂浮的冰块上，用爪子挖出了一张床，爬上去睡着了。（via）\n苹果头盔的最大问题\n春节前，苹果公司的 Apple Vision Pro 上架销售了。\n这是近几年最创新的硬件设备，首批20万台一抢而空。\n\n它只在美国销售，还没有官方的中文名。为了行文方便，我暂且就叫它\"苹果头盔\"吧。\n虽然这么叫，但是苹果对它的定位可不是 VR 头盔，而是\"空间计算机\"（spatial computer）。\n这个名称大有奥妙，表明了苹果公司对它的长远规划：这是一台通用计算机，跟笔记本和手机一样，属于消费级计算设备。\n在苹果眼中，这三者----Mac、iPhone、苹果头盔----能做的事情是一样的，只是使用场合不同。Mac 是桌面计算机，iPhone 是便携计算机，苹果头盔是穿戴计算机。\niFixit 网站拆解了苹果头盔，证实了 CPU 是 M2 芯片，跟 MacBook 笔记本相同。因此理论上，MacBook 可以运行的程序，苹果头盔都能运行。\n\n问题就来了，你觉得，苹果头盔能当作通用计算机使用吗？\n一些人非常看好，认为它的虚拟空间感前所未有，让实体屏幕变成了虚拟屏幕，将来完全可以戴着它办公。另一些人则觉得，它有内在的缺陷，无法用来办公。\n著名的 IT 分析师 Ben Thompson 写了自己的使用感受。我觉得，他分析得比较深入，分享给大家。\n他说，自己戴上头盔的第一反应是，这玩意太棒了，看视频无与伦比！他的妻子惊呼：\"有了它，谁还要去电影院？\"\n但是，当他打算戴着头盔写文章时，就发现存在一个最大问题，使其无法用于任何严肃…",
          "link": "http://www.ruanyifeng.com/blog/2024/02/weekly-issue-290.html",
          "publishedOn": "2024-02-23T00:11:44.000Z",
          "wordCount": null,
          "title": "科技爱好者周刊（第 290 期）：苹果头盔的最大问题",
          "imageUrl": null
        }
      ]
    },
    {
      "title": "Barret李靖的即刻动态",
      "feedUrl": "https://rsshub.app/jike/user/83F8C091-4C46-43B7-B7AC-B90CD72255E7",
      "siteUrl": "https://m.okjike.com/users/83F8C091-4C46-43B7-B7AC-B90CD72255E7",
      "articles": [
        {
          "id": "https://m.okjike.com/originalPosts/65f6c02bde5f287348606230",
          "author": null,
          "description": "最近几次出门都是社交驱动，上次在苏州，这次去黄山见了老朋友，聊得意犹未尽，下一站在深圳和北京😄",
          "link": "https://m.okjike.com/originalPosts/65f6c02bde5f287348606230",
          "publishedOn": "2024-03-17T10:04:27.000Z",
          "wordCount": 452,
          "title": "发布了: 最近几次出门都是社交驱动，上次在苏州，这次去黄山见了老朋友，聊得意犹未尽，下一站在深圳和北京😄",
          "imageUrl": "https://cdnv2.ruguoapp.com/Fo1lV-CfdUsEtUJY6PCZZGnoG8oiv3.jpeg?imageMogr2/auto-orient/thumbnail/300x2000%3E/quality/70/interlace/1"
        },
        {
          "id": "https://m.okjike.com/originalPosts/65f3e2d236246663248d3019",
          "author": null,
          "description": "两个多月前内推了一个简历，点进去一看，状态还是面试中，时长 77 天 22 小时，真替这家公司担忧。",
          "link": "https://m.okjike.com/originalPosts/65f3e2d236246663248d3019",
          "publishedOn": "2024-03-15T05:55:30.000Z",
          "wordCount": 450,
          "title": "发布了: 两个多月前内推了一个简历，点进去一看，状态还是面试中，时长 77 天 22 小时，真替这家公司担忧。",
          "imageUrl": "https://cdnv2.ruguoapp.com/Fs-eSdFZY-o3eJCp506HPIEBqkXe?imageMogr2/auto-orient/heic-exif/1/format/jpeg/thumbnail/!120x120r/gravity/Center/crop/!120x120a0a0"
        },
        {
          "id": "https://m.okjike.com/originalPosts/65f39d1537f7165b21dad411",
          "author": null,
          "description": "手机丢了，星巴克赊账成就达成",
          "link": "https://m.okjike.com/originalPosts/65f39d1537f7165b21dad411",
          "publishedOn": "2024-03-15T00:57:57.000Z",
          "wordCount": 451,
          "title": "发布了: 手机丢了，星巴克赊账成就达成",
          "imageUrl": "https://cdnv2.ruguoapp.com/Fs-eSdFZY-o3eJCp506HPIEBqkXe?imageMogr2/auto-orient/heic-exif/1/format/jpeg/thumbnail/!120x120r/gravity/Center/crop/!120x120a0a0"
        },
        {
          "id": "https://m.okjike.com/originalPosts/65ef8f9937f7165b218bcc08",
          "author": null,
          "description": "决策力需要在高密度的决策中训练出来，也需要有承担相应决策后果的勇气，害怕犯错永远做不好未来，就连当下都是唯唯诺诺的。",
          "link": "https://m.okjike.com/originalPosts/65ef8f9937f7165b218bcc08",
          "publishedOn": "2024-03-11T23:11:21.000Z",
          "wordCount": 442,
          "title": "发布了: 决策力需要在高密度的决策中训练出来，也需要有承担相应决策后果的勇气，害怕犯错永远做不好未来，就连当下都是唯唯诺诺的。",
          "imageUrl": "https://cdnv2.ruguoapp.com/Fs-eSdFZY-o3eJCp506HPIEBqkXe?imageMogr2/auto-orient/heic-exif/1/format/jpeg/thumbnail/!120x120r/gravity/Center/crop/!120x120a0a0"
        },
        {
          "id": "https://m.okjike.com/originalPosts/65edcef712ed2fda68f5e342",
          "author": null,
          "description": "三四年过去了，再回头去看自己写的这篇文章，多了几分淡定，想对那个时候的自己说：“凡事慢慢来，不用悲观，也无需亢奋，很高兴地告诉你，当初的那个决定今天没有后悔，继续保持，向前走，走自己的路”。https://www.yuque.com/barretlee/thinking/wiwvy8",
          "link": "https://m.okjike.com/originalPosts/65edcef712ed2fda68f5e342",
          "publishedOn": "2024-03-10T15:17:11.000Z",
          "wordCount": 442,
          "title": "发布了: 三四年过去了，再回头去看自己写的这篇文章，多了几分淡定，想对那个时候的自己说：“凡事慢慢来，不用悲观，也无需亢奋，很高兴地告诉你，当初的那个决...",
          "imageUrl": "https://cdnv2.ruguoapp.com/Fs-eSdFZY-o3eJCp506HPIEBqkXe?imageMogr2/auto-orient/heic-exif/1/format/jpeg/thumbnail/!120x120r/gravity/Center/crop/!120x120a0a0"
        },
        {
          "id": "https://m.okjike.com/originalPosts/65e9c6b6164d89e6014fe00a",
          "author": null,
          "description": "有段时间没用 GPT-4 了，尝试了好几种方法续费均失败：\n1）Dupay 虚拟 Visa 银行卡，之前购买就用的这张卡，不过现在不能用了，提示被拒，还有可用的虚拟卡商么？\n2）Wise 申请的银行卡，绑定到了手机钱包，使用 Apple Pay 时也失败了，姿势不对？\n3）直接使用 Wise 卡号和 cvc 支付，提示「您的银行卡被拒绝了」，所以其实是不支持 Wise 卡的卡段么？\n最后可行的是，直接在 APP 内购买，也有两种方式：\n1）在支付宝里头购买礼品卡，然后给 iCloud 账户充值，参考 https://twitter.com/Barret_China/status/1638223359375966208\n2）申请一张 OCBC 的新加坡银行卡，绑定到新加坡的 iCloud 账户，参考 https://twitter.com/Barret_China/status/1698338662088622167 和 https://twitter.com/Barret_China/status/1638215085788372993",
          "link": "https://m.okjike.com/originalPosts/65e9c6b6164d89e6014fe00a",
          "publishedOn": "2024-03-07T13:52:54.000Z",
          "wordCount": 581,
          "title": "发布了: 有段时间没用 GPT-4 了，尝试了好几种方法续费均失败： 1）Dupay 虚拟 Visa 银行卡，之前购买就用的这张卡，不过现在不能用了，提示被拒，还有可用的虚...",
          "imageUrl": "https://cdnv2.ruguoapp.com/Fs-eSdFZY-o3eJCp506HPIEBqkXe?imageMogr2/auto-orient/heic-exif/1/format/jpeg/thumbnail/!120x120r/gravity/Center/crop/!120x120a0a0"
        },
        {
          "id": "https://m.okjike.com/originalPosts/65e8022712ed2fda68861bb0",
          "author": null,
          "description": "最近才知道，原来想离开公司，也是可以考虑主动谈 N+1 的，谈判资本就是：躺平几个月，公司成本更高。",
          "link": "https://m.okjike.com/originalPosts/65e8022712ed2fda68861bb0",
          "publishedOn": "2024-03-06T05:41:59.000Z",
          "wordCount": 465,
          "title": "发布了: 最近才知道，原来想离开公司，也是可以考虑主动谈 N+1 的，谈判资本就是：躺平几个月，公司成本更高。",
          "imageUrl": "https://cdnv2.ruguoapp.com/Fs-eSdFZY-o3eJCp506HPIEBqkXe?imageMogr2/auto-orient/heic-exif/1/format/jpeg/thumbnail/!120x120r/gravity/Center/crop/!120x120a0a0"
        },
        {
          "id": "https://m.okjike.com/originalPosts/65e00bc412ed2fda68ec2c65",
          "author": null,
          "description": "广泛去了解各类信息很重要，但是在“无知”的情况下，知道下一步该怎么去做，则更为重要。\n正确且高效地向前摸索，比较依赖个人原则的确立，原则之下，决策会更加坚定。\n推荐阅读 Ray Dalio 的《Principles》，在极度求真、极度透明的两大基础原则之下，实现创意择优、可信决策，非常有启发。",
          "link": "https://m.okjike.com/originalPosts/65e00bc412ed2fda68ec2c65",
          "publishedOn": "2024-02-29T04:44:52.000Z",
          "wordCount": 448,
          "title": "发布了: 广泛去了解各类信息很重要，但是在“无知”的情况下，知道下一步该怎么去做，则更为重要。 正确且高效地向前摸索，比较依赖个人原则的确立，原则之下，...",
          "imageUrl": "https://cdnv2.ruguoapp.com/Fs-eSdFZY-o3eJCp506HPIEBqkXe?imageMogr2/auto-orient/heic-exif/1/format/jpeg/thumbnail/!120x120r/gravity/Center/crop/!120x120a0a0"
        },
        {
          "id": "https://m.okjike.com/originalPosts/65df3e4438849f879f72b210",
          "author": null,
          "description": "有的人是围绕生活来安排工作，有的人是围绕工作来安排生活。\n在一个倡导会议沟通和实时通讯的工作环境中，很难真正追求到效率和幸福感。\n切换到慢节奏，让时间的流动停滞下来，事情多在脑子里转几个圈，给自己、也给对方更多的思考空间。\n慢慢地，再把生活也纳入到考量，回归到人生命题中。或许，眼前的那些事儿并没有那么着急，甚至，工作也不再是最优先的事情。\nwork-life balance 的一个大前提，是把生活这个因子算进来，而不是当成默认的可牺牲项。",
          "link": "https://m.okjike.com/originalPosts/65df3e4438849f879f72b210",
          "publishedOn": "2024-02-28T14:08:04.000Z",
          "wordCount": 446,
          "title": "发布了: 有的人是围绕生活来安排工作，有的人是围绕工作来安排生活。 在一个倡导会议沟通和实时通讯的工作环境中，很难真正追求到效率和幸福感。 切换到慢节奏，...",
          "imageUrl": "https://cdnv2.ruguoapp.com/Fs-eSdFZY-o3eJCp506HPIEBqkXe?imageMogr2/auto-orient/heic-exif/1/format/jpeg/thumbnail/!120x120r/gravity/Center/crop/!120x120a0a0"
        },
        {
          "id": "https://m.okjike.com/originalPosts/65df3844de5f287348a109f7",
          "author": null,
          "description": "迷茫的时候和一帆风顺的时候，都需要切换到 3 万英尺高的视野，去看那大片的农田和城镇乡村布局，忽略掉密密麻麻的人，找到属于自己的方位。",
          "link": "https://m.okjike.com/originalPosts/65df3844de5f287348a109f7",
          "publishedOn": "2024-02-28T13:42:28.000Z",
          "wordCount": 448,
          "title": "发布了: 迷茫的时候和一帆风顺的时候，都需要切换到 3 万英尺高的视野，去看那大片的农田和城镇乡村布局，忽略掉密密麻麻的人，找到属于自己的方位。",
          "imageUrl": "https://cdnv2.ruguoapp.com/Fs-eSdFZY-o3eJCp506HPIEBqkXe?imageMogr2/auto-orient/heic-exif/1/format/jpeg/thumbnail/!120x120r/gravity/Center/crop/!120x120a0a0"
        }
      ]
    },
    {
      "title": "李继刚的即刻动态",
      "feedUrl": "https://rsshub.app/jike/user/752D3103-1107-43A0-BA49-20EC29D09E36",
      "siteUrl": "https://m.okjike.com/users/752D3103-1107-43A0-BA49-20EC29D09E36",
      "articles": [
        {
          "id": "https://m.okjike.com/originalPosts/65f80e5b3b9c66cae4fc36ca",
          "author": null,
          "description": "“你不会得到你应得的东西，你只会得到你通过谈判得到的东西。”\n━━\nChester Karrass",
          "link": "https://m.okjike.com/originalPosts/65f80e5b3b9c66cae4fc36ca",
          "publishedOn": "2024-03-18T09:50:19.000Z",
          "wordCount": 437,
          "title": "发布了: “你不会得到你应得的东西，你只会得到你通过谈判得到的东西。” ━━ Chester Karrass",
          "imageUrl": "https://cdnv2.ruguoapp.com/o_1aif987v84gp1jcb17p11p9714nni0j?imageMogr2/auto-orient/heic-exif/1/format/jpeg/thumbnail/120x120%3E"
        },
        {
          "id": "https://m.okjike.com/originalPosts/65f7e6c637f7165b21290ed2",
          "author": null,
          "description": "绘画和照片的区别是什么\n━━━━━━━━━━━━━━\n创作者： 现实 » 感觉 » 知觉 » 诠释(意义) » 作品\n观察者: 作品 » 感觉 » 知觉 » 诠释（意义）\n绘画, 完整走完了上述的创作者过程, 最终的作品包含了画师对他观察到的现实的理解和诠释。\n照片, 只是实现了 现实 » 作品, 缺少了人文的诠释。",
          "link": "https://m.okjike.com/originalPosts/65f7e6c637f7165b21290ed2",
          "publishedOn": "2024-03-18T07:01:26.000Z",
          "wordCount": 478,
          "title": "发布了: 绘画和照片的区别是什么 ━━━━━━━━━━━━━━ 创作者： 现实 » 感觉 » 知觉 » 诠释(意义) » 作品 观察者: 作品 » 感觉 » 知觉 » 诠释（...",
          "imageUrl": "https://cdnv2.ruguoapp.com/o_1aif987v84gp1jcb17p11p9714nni0j?imageMogr2/auto-orient/heic-exif/1/format/jpeg/thumbnail/120x120%3E"
        },
        {
          "id": "https://m.okjike.com/originalPosts/65f7a8a538849f879f404ffe",
          "author": null,
          "description": "广告变现效率正比于用户预期\n━━━━━━━━━━━━━\n最近在抖音上购物的频次远高于其它平台，反思了下原因: 刷短视频时看到广告更符合预期。\n- 展示广告（Banner Ads）： 明显不符合用户预期。用户预期是去网站看内容， 突兀的一个图片广告， 是种打扰，变现效率不高。\n- 搜索广告（Search Ads）： (部分）符合用户预期。用户预期是搜索关键词获得相关信息，广告相关性到位时，展示的广告可以是用户所需的信息（只是调整了展示顺序），变现效率较高。\n- 原生广告(Native Ads): 不符合用户预期。原生广告基于媒介信息形式进行设计，让广告长的和内容一模一样，比如朋友圈广告， 但在我看来，属于欺骗用户， 并没有针对用户预期来展示广告。\n- 短视频广告： 符合预期。刷短视频时，预期就是「看众生」，这个筐实在是太大， 很容易往里装广告。街头卖煎饼，是众生，也可以是广告。街边小店卖衣服，是众生，也可以是广告。",
          "link": "https://m.okjike.com/originalPosts/65f7a8a538849f879f404ffe",
          "publishedOn": "2024-03-18T02:36:21.000Z",
          "wordCount": 498,
          "title": "发布了: 广告变现效率正比于用户预期 ━━━━━━━━━━━━━ 最近在抖音上购物的频次远高于其它平台，反思了下原因: 刷短视频时看到广告更符合预期。 - 展...",
          "imageUrl": "https://cdnv2.ruguoapp.com/o_1aif987v84gp1jcb17p11p9714nni0j?imageMogr2/auto-orient/heic-exif/1/format/jpeg/thumbnail/120x120%3E"
        },
        {
          "id": "https://m.okjike.com/originalPosts/65f7a43c38849f879f3fe3ba",
          "author": null,
          "description": "大模型的对话每次都是独特的， 并不像互联网时代那样， 一个用户的搜索结果，可以在其它用户身上复用。\n那是不是意味着， 大模型的商业模式， 缺少了互联网产品的边际成本递减效应？",
          "link": "https://m.okjike.com/originalPosts/65f7a43c38849f879f3fe3ba",
          "publishedOn": "2024-03-18T02:17:32.000Z",
          "wordCount": 456,
          "title": "发布了: 大模型的对话每次都是独特的， 并不像互联网时代那样， 一个用户的搜索结果，可以在其它用户身上复用。 那是不是意味着， 大模型的商业模式， 缺少了互...",
          "imageUrl": "https://cdnv2.ruguoapp.com/o_1aif987v84gp1jcb17p11p9714nni0j?imageMogr2/auto-orient/heic-exif/1/format/jpeg/thumbnail/120x120%3E"
        },
        {
          "id": "https://m.okjike.com/originalPosts/65f64d263624666324b6a8bd",
          "author": null,
          "description": "六经注我读书法\n━━━━━━━━━━━━━━ \n受苏轼八面受敌读书法启发，总结了一个六经注我读书法，步骤如下：\n1/ 选定想要学习的主题。比如时间，哲学，prompt engineer等等，明确你当下最想学习的主题词。\n2/ 选定五六本书籍。选择标准：要么经典，要么前沿。经典书籍经历时间筛选，必有深意；前沿书籍经历科学探索，必有所破。\n3/ 写下疑惑。针对该主题，在翻开书籍之前，先把自己的疑惑明确写出来。比如：时间是什么？是固定的还是相对的？时间有方向吗？可以逆向吗？时间是一个维度吗？时空是一个维度吗？\n4/ 读书找答案。在读的过程中，始终盯着自己写下来的问题，看看这些书籍是否成功解答。\n5/ 总结收获。有些问题获得解答，记录下来。放入anki，写成博客，这是你的新知识块。有些问题没有答案，继续探索，可能突然某刻读到某句话，听到某句话就能受启发。\n作者有他的故事要讲，你有自己的疑惑要解决。\n六经注我读书法，在你心里打下栓马桩，读书时心定有获。",
          "link": "https://m.okjike.com/originalPosts/65f64d263624666324b6a8bd",
          "publishedOn": "2024-03-17T01:53:42.000Z",
          "wordCount": 480,
          "title": "发布了: 六经注我读书法 ━━━━━━━━━━━━━━ 受苏轼八面受敌读书法启发，总结了一个六经注我读书法，步骤如下： 1/ 选定想要学习的主题。比如时间，哲...",
          "imageUrl": "https://cdnv2.ruguoapp.com/o_1aif987v84gp1jcb17p11p9714nni0j?imageMogr2/auto-orient/heic-exif/1/format/jpeg/thumbnail/120x120%3E"
        },
        {
          "id": "https://m.okjike.com/originalPosts/65f3ebf512ed2fda686b3e6f",
          "author": null,
          "description": "如果将 Prompt 看作是编程语言\n━━━━━━━━━━━━━━━━━━\n编程语言的演进发展, 经历了 01 式打孔式编程, 汇编语言， C 语言, C++, Java, Go, Rust,  Python...\n这些语言的发展有一条比较清晰的脉络: 语言越来越\"简单\"。\n简单是指表达同样的一个想法， 使用的语言越来越接近自然语言（英文）。\n硬币的反面， 则是使用这些更高级的编程语言的程序员群体数目也在持续增长。\n那这个演进脉络发展到极致会是什么画面？ 自然语言即编程语言，人人皆是程序员。\n按这个推演再来看 ChatGPT： GPT 就像是编译器，Prompt 即为 AI 时代的编程语言。",
          "link": "https://m.okjike.com/originalPosts/65f3ebf512ed2fda686b3e6f",
          "publishedOn": "2024-03-15T06:34:29.000Z",
          "wordCount": 493,
          "title": "发布了: 如果将 Prompt 看作是编程语言 ━━━━━━━━━━━━━━━━━━ 编程语言的演进发展, 经历了 01 式打孔式编程, 汇编语言， C 语言, C++, Java, Go...",
          "imageUrl": "https://cdnv2.ruguoapp.com/o_1aif987v84gp1jcb17p11p9714nni0j?imageMogr2/auto-orient/heic-exif/1/format/jpeg/thumbnail/120x120%3E"
        },
        {
          "id": "https://m.okjike.com/originalPosts/65f3c737efd217879be75177",
          "author": null,
          "description": "启蒙运动: 抛弃上帝, 拥抱理性\n工业革命: 抛弃手工, 拥抱机械\nAI 时代: 抛弃思考，拥抱 Cyber?",
          "link": "https://m.okjike.com/originalPosts/65f3c737efd217879be75177",
          "publishedOn": "2024-03-15T03:57:43.000Z",
          "wordCount": 448,
          "title": "发布了: 启蒙运动: 抛弃上帝, 拥抱理性 工业革命: 抛弃手工, 拥抱机械 AI 时代: 抛弃思考，拥抱 Cyber?",
          "imageUrl": "https://cdnv2.ruguoapp.com/o_1aif987v84gp1jcb17p11p9714nni0j?imageMogr2/auto-orient/heic-exif/1/format/jpeg/thumbnail/120x120%3E"
        },
        {
          "id": "https://m.okjike.com/originalPosts/65f3c508164d89e6010c6346",
          "author": null,
          "description": "职场有些能力是底层通用能力, 和岗位无关, 和专业无关, 所有职场人士都需要具备这些能力, 且在这些能力项上有高中低段位区分.\n试总结如下四个职场通用能力: 听 vs 说, 想 vs 干.\n1. 听(的懂)\n    职场是个 *社交场合*, 与人沟通是必须操作. 如何能快速理解对方说的话, 是一个必备能力.\n2. 说(的清)\n    职场是个 *辩论场合*, 与人争辩交锋在所难免. 如何能清晰表达自己的观点, 说服对方接受你的观点, 也是一个必备能力.\n3. 想(的深)\n    职场是个 *思考场合*, 思考问题的深度, 是否有自己的方法论和逻辑分析, 是一个必备能力.\n4. 干(的快)\n    职场是个 *行动场合*, 事情最终都是干出来的. 行动力是职场必备能力.",
          "link": "https://m.okjike.com/originalPosts/65f3c508164d89e6010c6346",
          "publishedOn": "2024-03-15T03:48:24.000Z",
          "wordCount": 499,
          "title": "发布了: 职场有些能力是底层通用能力, 和岗位无关, 和专业无关, 所有职场人士都需要具备这些能力, 且在这些能力项上有高中低段位区分. 试总结如下四个职场通用能...",
          "imageUrl": "https://cdnv2.ruguoapp.com/o_1aif987v84gp1jcb17p11p9714nni0j?imageMogr2/auto-orient/heic-exif/1/format/jpeg/thumbnail/120x120%3E"
        },
        {
          "id": "https://m.okjike.com/originalPosts/65f3be6238849f879ffb0fc8",
          "author": null,
          "description": "PC 互联网产品迭代周期按年\n移动互联网产品迭代周期按月\nAI 产品迭代周期按周",
          "link": "https://m.okjike.com/originalPosts/65f3be6238849f879ffb0fc8",
          "publishedOn": "2024-03-15T03:20:02.000Z",
          "wordCount": 452,
          "title": "发布了: PC 互联网产品迭代周期按年 移动互联网产品迭代周期按月 AI 产品迭代周期按周",
          "imageUrl": "https://cdnv2.ruguoapp.com/o_1aif987v84gp1jcb17p11p9714nni0j?imageMogr2/auto-orient/heic-exif/1/format/jpeg/thumbnail/120x120%3E"
        },
        {
          "id": "https://m.okjike.com/originalPosts/65f2c1fe38849f879fe9ecdf",
          "author": null,
          "description": "以我有限的观察, 如果有人能做到「知之为知之，不知为不知」，此人可为友。\n对自己诚实的人, 对其它人, 差不到哪去。",
          "link": "https://m.okjike.com/originalPosts/65f2c1fe38849f879fe9ecdf",
          "publishedOn": "2024-03-14T09:23:10.000Z",
          "wordCount": 435,
          "title": "发布了: 以我有限的观察, 如果有人能做到「知之为知之，不知为不知」，此人可为友。 对自己诚实的人, 对其它人, 差不到哪去。",
          "imageUrl": "https://cdnv2.ruguoapp.com/o_1aif987v84gp1jcb17p11p9714nni0j?imageMogr2/auto-orient/heic-exif/1/format/jpeg/thumbnail/120x120%3E"
        },
        {
          "id": "https://m.okjike.com/originalPosts/65ddbb17de5f2873488309a3",
          "author": null,
          "description": "所谓工作，是为让自己对这个社会有所帮助而存在的。\n工作的本质就是帮助他人。\n--\n《100个工作基本》",
          "link": "https://m.okjike.com/originalPosts/65ddbb17de5f2873488309a3",
          "publishedOn": "2024-02-27T10:36:07.000Z",
          "wordCount": 435,
          "title": "发布了: 所谓工作，是为让自己对这个社会有所帮助而存在的。 工作的本质就是帮助他人。 -- 《100个工作基本》",
          "imageUrl": "https://cdnv2.ruguoapp.com/o_1aif987v84gp1jcb17p11p9714nni0j?imageMogr2/auto-orient/heic-exif/1/format/jpeg/thumbnail/120x120%3E"
        }
      ]
    },
    {
      "title": "国家应急广播 - 重庆预警信息",
      "feedUrl": "https://rsshub.app/cneb/yjxx/%E9%87%8D%E5%BA%86",
      "siteUrl": "http://www.cneb.gov.cn/yjxx",
      "articles": [
        {
          "id": "http://www.cneb.gov.cn/yjxx/huangsyj/20240317/t20240317_526630103.html",
          "author": "国家预警信息发布中心",
          "description": "万州区气象台2024年3月17日16时30分发布“大雾黄色预警信号”，预计3月17日20时至18日10时，陈家坝街道、周家坝街道、五桥街道、新田镇等镇乡街可能出现能见度小于500米的雾，局地能见度小于200米。请以上各地注意防范大雾天气可能造成的影响。车辆驾驶及户外活动注意安全。机场、高速公路、水上交通等单位加强交通管理。相关部门和乡镇街道按照职责，做好大雾防范应对工作。",
          "link": "http://www.cneb.gov.cn/yjxx/huangsyj/20240317/t20240317_526630103.html",
          "publishedOn": "2024-03-17T08:38:00.000Z",
          "wordCount": 523,
          "title": "重庆市万州区发布大雾黄色预警",
          "imageUrl": null
        },
        {
          "id": "http://www.cneb.gov.cn/yjxx/csyj/20240317/t20240317_526629764.html",
          "author": "国家预警信息发布中心",
          "description": "秀山县气象台2024年3月17日8时发布“大雾橙色预警信号”，预计17日8时至20时，岑溪乡、中平乡、涌洞镇、雅江镇、洪安镇、大溪乡、峨溶镇、石堤镇、里仁镇、膏田镇、中和街道、溶溪镇、官庄街道、溪口镇、龙池镇、妙泉镇、宋农镇、海洋乡、钟灵镇、梅江镇、清溪场街道、隘口镇、兰桥镇、平凯街道、龙凤坝镇、石耶镇、乌杨街道可能出现能见度小于200米的雾，局地能见度小于50米。请以上各地注意防范大雾天气可能造成的影响。",
          "link": "http://www.cneb.gov.cn/yjxx/csyj/20240317/t20240317_526629764.html",
          "publishedOn": "2024-03-17T00:42:00.000Z",
          "wordCount": 523,
          "title": "重庆市秀山土家族苗族自治县发布大雾橙色预警",
          "imageUrl": null
        },
        {
          "id": "http://www.cneb.gov.cn/yjxx/csyj/20240315/t20240315_526628690.html",
          "author": "国家预警信息发布中心",
          "description": "秀山县气象台2024年3月15日23时发布“大雾橙色预警信号”，预计3月15日23时至16日12时，平凯街道、膏田镇、龙凤坝镇、隘口镇、钟灵镇、清溪场街道、梅江镇、岑溪乡、官庄街道、涌洞镇、龙池镇、大溪乡、溶溪镇、溪口镇等乡镇街道的部分山区可能出现能见度小于200米的雾，局地能见度小于50米。请以上各地注意防范大雾天气可能造成的影响。",
          "link": "http://www.cneb.gov.cn/yjxx/csyj/20240315/t20240315_526628690.html",
          "publishedOn": "2024-03-15T15:17:00.000Z",
          "wordCount": 523,
          "title": "重庆市秀山土家族苗族自治县发布大雾橙色预警",
          "imageUrl": null
        },
        {
          "id": "http://www.cneb.gov.cn/yjxx/lanseyj/20240313/t20240313_526625002.html",
          "author": "国家预警信息发布中心",
          "description": "忠县气象台2024年3月13日0时发布“大风蓝色预警信号”，我县洋渡金台、磨子土家族乡已出现7级阵风，预计13日0时至8时，忠州街道、白公街道、新生街道、乌杨街道、洋渡镇、石子乡、磨子土家族乡、东溪镇、复兴镇、任家镇、善广乡、黄金镇、涂井乡12小时内可能受大风影响，阵风可达7级以上。",
          "link": "http://www.cneb.gov.cn/yjxx/lanseyj/20240313/t20240313_526625002.html",
          "publishedOn": "2024-03-12T16:18:00.000Z",
          "wordCount": 523,
          "title": "重庆市忠县发布大风蓝色预警",
          "imageUrl": null
        },
        {
          "id": "http://www.cneb.gov.cn/yjxx/lanseyj/20240312/t20240312_526624953.html",
          "author": "国家预警信息发布中心",
          "description": "石柱县气象台2024年3月12日22时发布“大风蓝色预警信号”，预计3月12日22时至13日8时，桥头镇、三星乡、黄水镇、三河镇、南宾街道、三益乡、六塘乡、万安街道、下路街道、大歇镇、龙沙镇、悦崃镇、石家乡、鱼池镇、枫木镇、中益乡、冷水镇、沙子镇可能受大风影响，阵风可达7级以上。",
          "link": "http://www.cneb.gov.cn/yjxx/lanseyj/20240312/t20240312_526624953.html",
          "publishedOn": "2024-03-12T14:36:00.000Z",
          "wordCount": 523,
          "title": "重庆市石柱土家族自治县发布大风蓝色预警",
          "imageUrl": null
        },
        {
          "id": "http://www.cneb.gov.cn/yjxx/lanseyj/20240312/t20240312_526624908.html",
          "author": "国家预警信息发布中心",
          "description": "酉阳县气象台2024年3月12日21时20分发布“大风蓝色预警信号”，预计3月12日21时至13日8时，桃花源街道、钟多街道、涂市镇、后坪乡、万木镇、花田乡、双泉乡、浪坪乡、毛坝乡、黑水镇、天馆乡等乡镇街道可能受大风影响，阵风可达7级以上。",
          "link": "http://www.cneb.gov.cn/yjxx/lanseyj/20240312/t20240312_526624908.html",
          "publishedOn": "2024-03-12T13:37:00.000Z",
          "wordCount": 523,
          "title": "重庆市酉阳土家族苗族自治县发布大风蓝色预警",
          "imageUrl": null
        },
        {
          "id": "http://www.cneb.gov.cn/yjxx/lanseyj/20240312/t20240312_526624251.html",
          "author": "国家预警信息发布中心",
          "description": "涪陵区气象台2024年3月12日11时40分发布“大风蓝色预警信号”，预计3月12日12时至13日05时武陵山乡、白涛街道、焦石镇、江东街道、荔枝街道、大木乡、青羊镇、马武镇可能受大风影响，阵风可达7级以上。",
          "link": "http://www.cneb.gov.cn/yjxx/lanseyj/20240312/t20240312_526624251.html",
          "publishedOn": "2024-03-12T03:50:00.000Z",
          "wordCount": 523,
          "title": "重庆市涪陵区发布大风蓝色预警",
          "imageUrl": null
        }
      ]
    },
    {
      "title": "Epic Games Store - Free Games",
      "feedUrl": "https://rsshub.app/epicgames/freegames/zh-CN",
      "siteUrl": "https://store.epicgames.com/zh-CN/free-games?lang=zh-CN",
      "articles": [
        {
          "id": "https://store.epicgames.com/zh-CN/p/the-bridge",
          "author": "The Quantum Astrophysicists Guild",
          "description": "《The Bridge》是一款挑战玩家对物理和观察视角的固有印象的逻辑解谜游戏。犹如埃舍尔邂逅艾萨克牛顿。控制重力，将地面化作天花板，穿过物理上不可能的建筑群。\n\nFree Now to 2024-03-21T15:00:00.000Z",
          "link": "https://store.epicgames.com/zh-CN/p/the-bridge",
          "publishedOn": "2024-03-14T15:00:00.000Z",
          "wordCount": null,
          "title": "《The Bridge》",
          "imageUrl": null
        },
        {
          "id": "https://store.epicgames.com/zh-CN/p/deus-ex-mankind-divided-4c6370",
          "author": "Eidos Interactive Corporation",
          "description": "Now an experienced covert operative, Adam Jensen is forced to operate in a world that has grown to despise his kind. Armed with new state-of-the-art weapons and augmentations, he must choose the right approach, along with who to trust, to unravel a vast worldwide conspiracy.\n\nFree Now to 2024-03-21T15:00:00.000Z",
          "link": "https://store.epicgames.com/zh-CN/p/deus-ex-mankind-divided-4c6370",
          "publishedOn": "2024-03-14T15:00:00.000Z",
          "wordCount": null,
          "title": "Deus Ex - Mankind Divided",
          "imageUrl": null
        }
      ]
    },
    {
      "title": "掘金前端本周最热",
      "feedUrl": "https://rsshub.app/juejin/trending/frontend/weekly",
      "siteUrl": "https://juejin.im/frontend?sort=weekly_hottest",
      "articles": [
        {
          "id": "https://juejin.cn/post/7346808829298753570",
          "author": "吴楷鹏",
          "description": "今天介绍一个大佬 Tristan，做过了一款惊艳的中国传统颜色\n\n👉 https://colors.ichuantong.cn\n最近发现他的另外一个应用，一个工具集合 Sinqi Tools\n\n工具集合应用，这种类型已经卷成麻花了\n有 Reycast、He3、uTools、Alfred、DevToys、IT-Tools 等等等\nSinqi.tools，又一个的工具集合应用，为什么能脱颖而出？\n看下官方示例的几个例子\n\n它有两个主要特点：\n一个是垂直，专门面向前端和设计人员\n另外一个是精致，颜值是第一生产力\n对比一下 IT-Tools\n\n山猪品不了细糠，Sinqi 更抓得住前端开发胃口。\n对于前端开发，好用的工具有：\n代码生成类：Code Converter（代码转换）、Code Beautifier、Tailwind Background（Tailwind 背景）、CSS Generator（CSS 生成器）、Sunburst Maker（日落效果生成器）、Wave Maker（波浪生成器）等\n\n网络类：URL Parser（URL 解析器）、Query IP（IP 查询）、HTTP Status Code（HTTP 状态吗）等\n\n图片处理类：Code Image（代码图片）、Image Editor（图片编辑）、QRCode Generator（二维码生成器）等\n\n除此之外，还有一些有趣的小工具，比如 Avatar（头像生成）\n\n玩数独\n\n目前 Sinqi 还处于 Beta 阶段，明显还有一些问题。\n一个是工具数量不多，另外是一些基本功能还有问题，比如有些工具缺少中文、没有返回等\n对于 Sinqi 之后的发展，开发者 Tristan 表示，继续保持「交互友好，界面简洁」\n\n如果觉得这个 Sinqi 有意思，不妨一试\n\nOne more thing 👋\n{\n  \"公众号\": \"程序员楷鹏\",\n  \"简介\": \"世界有 10 种人，一种是懂二进制的，另外一种是不懂的\",\n  \"还有\": \"你肯定会关注的对吧彦祖？\"\n}",
          "link": "https://juejin.cn/post/7346808829298753570",
          "publishedOn": "2024-03-17T15:28:12.000Z",
          "wordCount": 826,
          "title": "前端开发人员注意，这是一个【神奇】的网站",
          "imageUrl": null
        },
        {
          "id": "https://juejin.cn/post/7346524071183630355",
          "author": "疯犬丨哈士奇",
          "description": "先写总结，这次面试寄了，而且哈士奇没有坚持过二十分钟。。。\n说说自己整个面试的过程，首先哈士奇海投简历，本以为大厂会直接筛掉哈士奇的简历，没想到直接就给过了，还很快给哈士奇发邮件通知。\n\n所以先走到了测评这一关，简直一言难尽\n测评题\n腾讯的测评题目分为三个部分\n第一部分55题   逻辑题\n第二部分35题   情景题\n第三部分25题   IQ题\n逻辑题\n逻辑题主要是考察反驳能力，比如说应该如何对其他人说的话进行反驳\n比如：\n有人说“朋友的劝谏是行动的预防针”针对这段话你应该如何反驳\nA.\nB.\nC.\nD.\n具体的忘记了，大致是这个样子\n情景题\n考情商  个人认为还会对于自身行为考察\n假如你隔壁组的人碰到了一个你们组碰到的问题，这时候你们组的项目进行到了最后的阶段，这时候你会？\nA. 写一个文档，给他们学习\nB. 帮他们解决问题\nC. 派人帮他们解决问题\nD. 等项目解决了再帮他们解决\nIQ题\n纯考行测 比如几张图片选出最合适的  三个名词的规律找到最适合的名词  小学常考的两个管子放水，一个管子出水\n最后的计算量还挺大，建议大家提前准备准备刷刷\n总结\n测试题的占比不会太高，基本上正常写都可以进入下一步的初试\n初试\n电话面  给我感觉腾讯是一个非常高效的部门，不需要自我介绍，直接开始拷打项目，问东西。\n哈士奇大致经过了几个过程 计算机网络基础知识和项目阶段  因为项目难点少，直接在这块被毙了。\n计算机网络基础知识\n1.用户在浏览输入地址到页面渲染完成的过程\n当用户在浏览器中输入地址并按下回车键时，浏览器会执行以下步骤来加载并渲染页面：\n地址解析：浏览器解析输入的地址，如果输入的是一个 URL，浏览器会分解 URL，确定要访问的服务器和路径。\nDNS 解析：浏览器向 DNS 服务器发送请求，获取输入域名对应的 IP 地址。\n建立连接：浏览器使用 HTTP 协议向服务器发送请求，并…",
          "link": "https://juejin.cn/post/7346524071183630355",
          "publishedOn": "2024-03-16T05:24:08.000Z",
          "wordCount": 880,
          "title": "哈士奇的一周面经：腾讯某部门前端开发",
          "imageUrl": null
        },
        {
          "id": "https://juejin.cn/post/7346481513541484579",
          "author": "程序员大澈",
          "description": "大家好，我是大澈！\n本文约700+字，整篇阅读大约需要1分钟。\n关注微信公众号：“程序员大澈”，免费加入问答群，一起交流技术难题与未来！\n现在关注公众号，免费送你 ”前后端入行大礼包“ ，包含了：前后端面试题、面试技巧、简历模版、前后端学习路线图、前后端全技术栈学习笔记。\n1. 资讯速览\n因为个人开发使用 IDEA 比较多，而 VSCode 相对用的少点了。\n但就在前两天，我打开 VSCode 后，系统给我弹出来这么一个消息。\n\n关闭消息之后，紧接着又给我自动打开一个叫 Vue-Official 的插件主页。当时我看到还有点懵，想着这是个啥玩意，我也没记得自己安装过呀。\n\n于是，我打开所有插件一瞧，才发现我们Vue3旧语言工具 Volar 退了，一个更加强大的Volar升级版，Vue-Official 来了！\nVolar 正式升级更名为 Vue-Official ！\n\n2. 资讯详细\n不多说废话，先简单列一下我们用得到的 Vue-Official 新特性，最后做小结。\n2.1 Vue-Official新特性\n支持通过鼠标拖拽来导入组件，告别手动引入！\n操作步骤：按住鼠标左键，把组件拖拽到想要引入的地方，VSCode 会提示按住 shift 放入编辑器中，此时我们按 shift 并放开鼠标左键，即可自动导入组件。\n\n然后就是，全面支持 Vue 3.4 新语法特性。\n例如：Vue3.4 中增加了属性同名简写的的写法，之前这么用的话，Volar 会报错，现在在 Vue-Official 中得到支持。\n<!-- 原写法 -->\n<List :data=\"data\" />\n<!-- 新写法 -->\n<List :data />\n\n2.2 小结\nVue3旧语言工具 Volar 退了，一个更加强大的Volar升级版，Vue-Official 来了！\nVolar 正式升级更名为 Vue-Official ！\n看到这里的朋友们，赶快去把其它Volar伴生插件卸载掉，把新版用起来吧！\n结语\n我是大澈，一个喜欢交朋友、喜欢分享、喜欢搞钱的90后小伙。\n文章主分享前后端功能问题实现、次分享技术资讯、实用干货。\n遇到技术难题，在问答群里与众多同行朋友一起讨论成长。\n关注微信公众号：“程序员大澈”，免费加入问答群，一起交流技术难题与未来！\n现在关注公众号，免费送你 ”前后端入行大礼包“ ，包含了：前后端面试题、面试技巧、简历模版、前后端学习路线图、前后端全技术栈学习笔记。",
          "link": "https://juejin.cn/post/7346481513541484579",
          "publishedOn": "2024-03-15T14:42:01.000Z",
          "wordCount": 783,
          "title": "技术资讯：Volar正式更名为Vue-Official",
          "imageUrl": null
        },
        {
          "id": "https://juejin.cn/post/7346148341385642023",
          "author": "IT咖啡馆",
          "description": "近几年越来越多的企业开始尝试低代码，希望可以让非专业的用户不写代码或少量代码的情况下，也能构建自己的应用。\n今天我们来推荐一个开源低代码平台，帮助工程师节省上百小时的时间去构建工作流类的应用， 目前在GitHub已超过20K Star，他就是：budibase 。\n\nbudibase 是什么?\nBudibase 是一个一体化的低代码平台，用于构建、设计和自动化业务应用程序，例如；管理面板、表单、内部工具、客户门户等。在 Budibase 出现之前，开发人员可能需要数周时间才能构建简单的 CRUD 应用程序；借助 Budibase，构建 CRUD 应用程序只需几分钟。\n\nBudibase简化整个实现的流程，你不需要有必要的编程技巧，但它也提供了一些灵活性，让你在一定程度上定制应用。\n它支持一系列的数据源：MySQL、Rest API、OracleDB、MongoDB、Google 表格等。\n\n还可以选择自托管并在你的服务器上部署应用，或者利用 Budibase 的云托管服务。\n部署 budibase\n可以选使用Docker自己部署或者使用budibase cloud的SAAS服务。\nDocker部署\n尝试 Budibase 映像的最简单方法是使用 docker run 命令，最基本的版本是：\ndocker run -d -t \\\n  --name=budibase \\\n  -p 10000:80 \\\n  -v /local/path/data:/data \\\n  --restart unless-stopped \\\n  budibase/budibase:latest\n\n此命令将在您的系统上启动一个 Budibase 容器，然后您可以在 http://localhost:10000 上连接到该容器。这里需要注意一点，就是命令里包含了一个外挂存储，需要提前准备好。就是把 /lo…",
          "link": "https://juejin.cn/post/7346148341385642023",
          "publishedOn": "2024-03-15T04:59:23.000Z",
          "wordCount": 1018,
          "title": "2万星！开源低代码平台，帮你节省数百小时的工作",
          "imageUrl": null
        },
        {
          "id": "https://juejin.cn/post/7346121373112811583",
          "author": "石小石Orz",
          "description": "theme: smartblue\n需求简介\n最近接了一个需求，需要实现不同登录人员可以自定义首页模块卡片。简单来说，就是实现首页看板模块的增添与拖拉拽，效果如下：\n\n技术选型\n原生js是支持拖拉拽的，只需要将拖拽的元素的 draggable 属性设置成 \"true\"即可，然后就是调用相应的函数即可。\n拖拽操作 - Web API 接口参考 | MDN\n但是，原生js功能不够完善，使用起来需要改造的地方很多，因此，选用成熟的第三方插件比较好。\n我们的主项目采用的是vue3，,经过一系列对比，最终选择了 vue-draggable-next这个插件。\nvue-draggable-next\nvue-draggable-next的周下载量月3万左右，可以看出是一个比较靠谱的插件。\n\n它的使用方式npmj上也介绍的很详细：\nvue-draggable-next\n如果英文的使用Api看起来比较难受，网上还有中文的使用文档：\nvue.draggable.next 中文文档 - itxst.com\n这个插件也有vue2版本和纯js版本，其他框架也是也是可以完美使用的。\n实现思路\n需求与技术简析\n根据我们的需求，我们应该实现的是分组拖拽，假设我们有三列，那我们要实现的就是这A、B、C三列数据相互拖拽。\n\n我们看看中文官网给的示例：\nvue.draggable.next group 例子\n看起来很容易，我们只需要写多个draggable标签，每个draggable标签写入相同的组名即可。\n实现方案\n框架实现\n回到代码中，要想实现一个三列可拖拉拽的模块列表，我们首先需要引入组件\n<script lang=\"ts\" setup>\nimport { VueDraggableNext } from 'vue-draggable-next'\n// ....\n</script>\n\n然后定义一个数组储存数据…",
          "link": "https://juejin.cn/post/7346121373112811583",
          "publishedOn": "2024-03-15T03:30:59.000Z",
          "wordCount": 1659,
          "title": "如何丝滑的实现首页看板拖拉拽功能？",
          "imageUrl": null
        },
        {
          "id": "https://juejin.cn/post/7345828305490935843",
          "author": "一纸忘忧",
          "description": "Shiki 是一个使用 TextMate 语法和主题的语法高亮器，与 VS Code 使用相同的引擎。它为您的代码片段提供了最准确、最美观的语法高亮。Pine Wu 于 2018 年在 VS Code 团队期间创建了它，最初是为了使用 Oniguruma 进行语法高亮。\n与在浏览器中运行的 Prism 和 Highlight.js 等现有语法高亮器不同，Shiki 采用了预高亮的方式。它将高亮后的 HTML 发送到客户端，无需 JavaScript 即可产生准确、美观的语法高亮。很快，它便成为了一个非常受欢迎的选择，尤其是用于静态网站生成器和文档网站。\n尽管 Shiki 很出色，但它仍然是一个设计在 Node.js 上运行的库。这意味着它仅限于高亮静态代码，对于动态代码则会有问题，因为 Shiki 不能在浏览器中运行。此外，Shiki 依赖于 Oniguruma 的 WASM 二进制文件以及 JSON 格式的多个重型语法和主题文件。它使用 Node.js 的文件系统和路径解析来加载这些文件，这在浏览器中是无法访问的。\n为了改善这种情况，Anthony Fu 开始了这项 RFC，后来以 PR 的形式发布并应用于 Shiki v0.9。虽然它将文件加载层抽象为根据环境使用 fetch 或文件系统，但使用起来仍相当复杂，因为需要在包或 CDN 中手动提供语法和主题文件，然后调用 setCDN 方法告诉 Shiki 从哪里加载这些文件。\n虽然这个解决方案并不完美，但至少使 Shiki 能够在浏览器中运行以高亮动态内容。从那时起，大家一直在使用这种方法，直到本文故事的开始。\n\nShiki 的开始\nNuxt 正在积极推动 Web 发展，以降低延迟、提高性能，使 Web 更加便捷。与 CDN 服务器类似，Cloudflare Workers 等边缘托管服务遍布全球。用户可以从最近的边缘服…",
          "link": "https://juejin.cn/post/7345828305490935843",
          "publishedOn": "2024-03-14T06:44:11.000Z",
          "wordCount": 1497,
          "title": "前端大神 Anthony Fu 新作：Shiki v1.0 重磅发布！",
          "imageUrl": null
        },
        {
          "id": "https://juejin.cn/post/7345836282066960435",
          "author": "sAnL1ng",
          "description": "theme: smartblue\n前言\n目前大三，这是诸多面试中的第二个面试，也是拿到的第一个offer，不过确实小厂中薪资算给的最高的一个，而且这次的面试官给我的不是压迫感而是一位大佬正在耐心指导。聊到我不了解的地方，我就会虚心请教一下面试官可否讲解一下，比如一些之前没接触过的公司业务类知识，面试官就会很用心地结合八股给我科普讲解，这一次面试其实我收获了还是蛮多东西的。\n面试了这么多天，觉得一个人的力量还是太过薄弱，如果你和我一样有向前冲的勇气，欢迎掘友们私聊我交流面经（wechat: sAnL1ng）\n自我介绍\n一上来，依旧是亘古不变的定律，就像校园时期甜甜的恋爱，彼此都从相互了解开始，然后再决定是否选择对方。\n这里可以参考我的上一篇文章，按照这个模板来介绍自己，因人而异。\n【面试官：这26分钟感觉身体被掏空】\n一、聊聊vue2和vue3中响应式处理数据的不同\n面试官听到我自我介绍说到熟悉vue全家桶，于是上来先探探底，看似问vue2和vue3的区别，其实是想看看你对这两者的底层了解多深 ，依旧是面经，结合我学习源码时的总结，一套高输出爆发给到面试官：\nvue2中采用的是Object.defineProperty和原生的getter和setter方法，当我们初始化一个数据data的时候，会实例化一个Observe类，首先它会迭代遍历data中的每一个属性，并通过Object.defineProperty给遍历到的每一个属性添加上getter和setter方法,当属性被读取的时候就会触发getter方法进行依赖(Wather)收集,当属性被修改的时候就会触发setter方法进行依赖(Wather)触发。（但是，光靠这些方法并不能建立完全的响应式数据与依赖之间的关系，这种办法效率低、功能弱。当我们使用Object.defineProperty()来进行数据劫持，只有当数据被…",
          "link": "https://juejin.cn/post/7345836282066960435",
          "publishedOn": "2024-03-14T05:56:31.000Z",
          "wordCount": 1168,
          "title": "小厂一面：30分钟速通，拿下一血！",
          "imageUrl": null
        },
        {
          "id": "https://juejin.cn/post/7345821800880324671",
          "author": "何遇er",
          "description": "面试的业务是字节-千川，职级是 2-2，技术面一共 3 轮，每一面都要手写算法。我在 2023 年 7 月下旬被裁员，于 2024 年 2 月初面试字节-千川，没有通过第 3 轮面试，在这里记录下当时的面试问题，希望帮到大家\n第一轮面试\n首先是自我介绍，主要介绍在任职的公司落地了低代码平台和用户操作记录回溯，还向开源项目 rrweb 提交了两个PR，最后是公司的插件化架构。\n自我介绍完毕，面试官的第一个问题是，为什么离职？我因为被裁而离职，如实回答了，之后每一轮面试官都会询问什么被裁，另，由于我从离职到面试字节中间隔了7个月左右，面试官还重点关注了，离职之后在做什么。离职之后，我首先回家休息了近 1 个月，旅游了近 2 个月，然后写书花了 1 个多月，到 11 底开始找工作，这没什么好隐瞒的，如实告知了面试官。\n第一轮主要面试 JS 和 React基础知识，问题如下：\n在 js 中有浮点数运算不正确的时候，比如 0.1 + 0.2 不等于 0.3 这是什么原因，要怎么解决\n对 webpack 有了解吗，我看你在做低代码\nwebpack中 loader 与 plugin 有什么区别\n有没有写过 plugin\n我们写代码的时候是 es6，浏览器运行的时候是 es5，在做代码转化的时候，webpack 帮我们做了什么事情\n在 React 类组件中，为什么修改状态要使用 setState 而不是用 this.state.xxx = xxx\nsetState 函数做了哪些事情\nReact 生命周期 commpoentWillUnMount() 对应的 hooks 要怎么写\nuseState 的原理是什么，背后怎么执行的，它怎么保证一个组件中写多个 useState 不会串\n函数组件重新渲染的时候怎么拿到useState之前的状态，而不是得到初始化的状态\nReact为什么要自定义合成事…",
          "link": "https://juejin.cn/post/7345821800880324671",
          "publishedOn": "2024-03-14T04:11:19.000Z",
          "wordCount": 1169,
          "title": "字节跳动面试记录",
          "imageUrl": null
        },
        {
          "id": "https://juejin.cn/post/7345725753018236947",
          "author": "某时橙",
          "description": "theme: vuepress\n写在前面\n大家好，我是时橙～\n本文为新式响应式系统的解析，该pr已被正式合并入minor分支，如果解析有不到位的地方，望各位提表建议。\n阅读有一定门槛，需要对响应式系统依赖追踪有一定了解\n本次重构来源于尤雨溪的本次pr ⬇️\nhttps://github.com/vuejs/core/pull/10397\n新·响应式系统带来的收益\n解决了几个bugs #10290 #10069\n更高效的内存使用，基准测试提升56%\n更合理的computed行为\n....\n正文\n现在的订阅者(Subscriber)和依赖（dep）的抽象关系长什么样？\n\n现在看不懂这个图谱没有关系，后续我们再解释这个表式什么意思\nLink是什么东西?\n3.4版本内部的Link接口定义如下：\ninterface Link {\n  dep: Dep\n  sub: Subscriber\n\n  /**\n   * - Before each effect run, all previous dep links' version are reset to -1\n   * - During the run, a link's version is synced with the source dep on access\n   * - After the run, links with version -1 (that were never used) are cleaned\n   *   up\n   */\n  version: number //依赖每次被触发时+1\n\n  /**\n   * Pointers for doubly-linked lists\n   */\n  nextDep?: Link  //左右链接的箭头相关\n  prevDep?: Link  //左右链接的箭头相关\n\n  …",
          "link": "https://juejin.cn/post/7345725753018236947",
          "publishedOn": "2024-03-13T17:21:20.000Z",
          "wordCount": 1575,
          "title": "连yyx都要借鉴的二维双链表到底怎样？！揭秘vue3.4神秘黑魔法",
          "imageUrl": null
        },
        {
          "id": "https://juejin.cn/post/7345687862530686986",
          "author": "芝士加",
          "description": "只需一句指令，它可端到端地处理整个开发项目。\n一觉醒来，程序员怕是真要失业了，👀一项革命性的技术震撼了科技界。\n全球首个 AI 软件工程师一亮相，直接引爆整个科技圈。只需一句指令，它可端到端地处理整个开发项目，预示着软件开发领域的未来可能不再需要人类参与。\n\n欢迎关注公众号《前端界》，文章会同步更新，也可快速加入前端交流群！\n能力令人惊叹，只需简单的指令，它便能独立完成整个开发项目，从零开始构建网站，自动检测和修复代码错误，甚至能够自我学习和调整其AI模型， 更可怕的是，也可为一些成熟的代码库做贡献（🙉大部分多年开发经验的程序员都做不到！）。\n在最近的SWE-bench编码基准测试中，它展现了其卓越的性能。它无需人类帮助，可解决13.86% 的问题。\n而相比之下，GPT-4在同一测试中只能处理 1.74% 的问题，且都需要人类提示告知处理哪些文件。\n\n可以这样说，它远远超过了此前所有AI大模型。\nDevin被介绍为世界首个完全自主的AI软件工程师。\n它在长程推理和规划上面下了很大功夫，可以规划和执行需要数千个决策才能完成的复杂软件工程任务。\n在这之中，进行到任何一步它都可以回调所有相关的上下文信息，保证整体逻辑性，并方便随时校正错误。\n既然是一个端到端AI，软件开发人员常用的工具，比如shell、代码编辑器和浏览器等等，Devin也都配备（沙盒计算环境中），主打一个全方位服务。\n最终的Devin，让人类只需要发号施令，其他什么也不用做。\n比如Devin 通过阅读博客文章学习，用ControlNet，生成带有隐藏文字的图像，学习能力真的是一点就通～\n\n另外，Devin 可以自主查找并修复代码库中的错误。\n\n原视频地址：https://www.youtube.com/watch?v=TiXAzn2_Xck&t=4s\n目前Devin尚未公测，不过已经有少部分人拿到了资格，开始实测了一波……\n比如这位叫Akshat Bubna的网友分享：\n\n所以，程序员们做好和 AI Devin PK的准备了吗？🐶\n欢迎关注公众号《前端界》，文章会同步更新，也可快速加入前端交流群！",
          "link": "https://juejin.cn/post/7345687862530686986",
          "publishedOn": "2024-03-13T11:02:03.000Z",
          "wordCount": 720,
          "title": "💥程序员警惕！首个AI软件工程师Devin问世！他们铁了心砸掉程序员饭碗",
          "imageUrl": null
        },
        {
          "id": "https://juejin.cn/post/7345672631323394098",
          "author": "前端小蜗",
          "description": "背景\n\n家里有一条狗🐶，很喜欢乘人不备睡沙发🛋️，恰好最近刚搬家 + 狗迎来了掉毛期 不想让沙发上很多毛。所以希望能识别到狗，然后播放“gun 下去”的音频📣。\n需求分析\n需要一个摄像头📷\n\n利用 chrome 浏览器可以调用手机摄像头，获取权限，然后利用 video 将摄像头的内容绘制到 video 上。\n通过摄像头实时识别画面中的狗🐶\n\n利用 tensorflow 和预训练的 COCO-SSD MobileNet V2 模型进行对象检测。\n将摄像头的视频流转化成视频帧图像传给模型进行识别\n录制一个音频\n\n识别到目标（狗）后播放音频📣\n需要部署在一个设备上\n\n找一个不用的旧手机📱，Android 系统\n安装 termux 来实现开启本地 http 服务🌐\n技术要点\n利用浏览器 API 调用手机摄像头，将视频流推给 video\nconst stream = await navigator.mediaDevices.getUserMedia({\n  // video: { facingMode: \"environment\" },  // 摄像头后置\n  video: { facingMode: \"user\" },\n});\n\nconst videoElement = document.getElementById(\"camera-stream\");\nvideoElement.srcObject = stream;\n\n加载模型，实现识别\nlet dogDetector;\n\nasync function loadDogDetector() {\n  // 加载预训练的SSD MobileNet V2模型\n  const model = await cocoSsd.load();\n  dogDetector = model; // 将加载好的模型赋值给dogDetect…",
          "link": "https://juejin.cn/post/7345672631323394098",
          "publishedOn": "2024-03-13T09:53:27.000Z",
          "wordCount": 2023,
          "title": "🚫为了防止狗上沙发，写了一个浏览器实时识别目标功能📷",
          "imageUrl": null
        },
        {
          "id": "https://juejin.cn/post/7345423755948785718",
          "author": "柚子816",
          "description": "theme: channing-cyan\n首先声明这篇文章不是讲如何逆向 wasm 文件，获取其内部逻辑，这个标题真的就是一个问题，想要问问是否可以逆向\n编写一个 wasm\n下面先演示用 rust 编写构建一个 wasm 的过程。rust 环境的安装，cargo 是什么命令就不解释了，官方网站有安装使用说明\n首先需要创建一个工程\n$ cargo new --lib greet-wasm \n\n进入工程目录添加依赖项\n[lib] \ncrate-type = [\"cdylib\"]\n\n[dependencies] \nwasm-bindgen = \"0.2\" \njs-sys = \"0.3.61\"  \n\n清空 src/lib.rs 文件中的内容，输入以下代码\nextern crate wasm_bindgen;  \nuse wasm_bindgen::prelude::*;  \n\n#[wasm_bindgen] \npub fn hello(input: &str) -> JsValue {\n  JsValue::from_str(&format!(\"Hello {}!\", input)) \n} \n\n执行打包命令\n$ wasm-pack build  --target web \n\n经过打包后，将生成 pkg 目录, 此时已经可以将目录发布到 npm 仓库，供项目使用了，此处本地引用，就不发布了\n在网页中引用wasm\n新建 html 文件，并引用 hello 方法\n<!DOCTYPE html>\n<html lang=\"en\"> \n  <head>   \n    <meta charset=\"UTF-8\">   \n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">   \n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> \n    <title>Document</title> \n  </head> \n  <body>   \n    <script type=\"module\">     \n      import init, {hello} from './greet-wasm/pkg/greet_wasm.js';\n      async function run() {       \n        await init();       \n        console.log(hello('world'));     \n      }     \n      run(); \n    </script> \n  </body> \n</html> \n\n使用任何静态资源服务器打开 html 文件，控制台将会成功打印 Hello world!， 到此已成功调用 wasm 内方法并获取到返回值\n逆向 wasm\n如果你尝试去打印一个 wasm 暴露出来的方法，将会看到 [native code] ，wasm 直接暴露的方法被认为是原生的方法，不会打印原始代码。毕竟原始代码也不是 js 写的。如果尝试在控制直接查看 wasm 文件的内容，看到是下面的内容，一般人肯定是看不懂的\n\n生成函数签名\n所以我在想如果把项目的参数签名逻辑放在 wasm 中去实现，生成签名的过程中使用的 salt 也放在 wasm 中，这样是不是可以避免别人写脚本刷接口的尴尬了。请参考这个站点中的 demo，类似于在浏览器网络面板中看到的每个接口的入参及生成好签名。\n那下面的问题就是，这样的网站发布上线后，能否获取网站的验签逻辑，然后修改参数生成签名然后调用接口，以达到一些不可告人的小心思呢。如果你曾经干成过这事，能不能留下你的方法呢。如果你需要上面站点中的 wasm，也请从 demo 站点的控制面板中获取链接并下载",
          "link": "https://juejin.cn/post/7345423755948785718",
          "publishedOn": "2024-03-13T05:56:31.000Z",
          "wordCount": 1136,
          "title": "wasm可以被逆向么",
          "imageUrl": null
        },
        {
          "id": "https://juejin.cn/post/7345423793210802186",
          "author": "颜海镜",
          "description": "本文为稀土掘金技术社区首发签约文章，30 天内禁止转载，30 天后未获授权禁止转载，侵权必究！\n本文讲解Promise，callback，RxJS多种方式实现并发限制，通过示例循序渐进讲解，如何实现带数量限制的并发请求，这来源于笔者业务中的真实场景，同时也是一道前端面试题，作为面试题的话，一般是考察对Promise的理解。\n问题\n笔者的业务中，经常存在通过一堆ids，批量获取的场景，其中最复杂的一个场景是获取数千个手机号的数据，对于这种场景，发送请求并不容易。\n这里先交代下背景，笔者的系统是运行在 http2 上的，由于 http2 支持并发处理，所以在笔者的系统里，后端接口设计是基于这个假设的，后端不会提供批量获取的接口，需要前端通过 id 来逐个获取。\n当同时发送上千个请求时，浏览器会变的明显卡顿，虽然这样发送可以更快的获取数据，但会带来不好的用户体验，笔者的解决方案是，给并发添加最大数量限制。\n这里我们将问题定义为，给你ids和并发限制max，一般作为面试题，会让你直接实现如下的函数：\nfunction gets(ids, max) {\n}\n\n补充一点，如果是 http1.1，浏览器会有默认的并发限制，并不需要我们处理这个问题，比如Chrome 中并发数量是6个，所以这个问题的成立，建立在 http2 的基础上，如果是在面试中，不要忘了提这个知识点。\nPromise\n目前来说，Promise是最通用的方案，一般我们最先想到Promise.all，当然最好是使用新出的Promise.allsettled。\n下面简单介绍下二者的区别，假如存在某个请求失败时，all会整体失败，而allsettled只会让单个请求失败，对于大部分情况来说，allsettled的是更好的选择，因为allsettled更为灵活，一般来说面对这种情况，总共有三种处理方式，如下所示，all只能支持第…",
          "link": "https://juejin.cn/post/7345423793210802186",
          "publishedOn": "2024-03-13T04:03:41.000Z",
          "wordCount": 1906,
          "title": "异步难题：前端并发控制全解析",
          "imageUrl": null
        },
        {
          "id": "https://juejin.cn/post/7345379924168196137",
          "author": "杨成功",
          "description": "大家好，我是杨成功。\n在桌面应用开发中，常常需要获取设备唯一 ID 来表示当前客户端的唯一性。一般的设备 ID 需要满足两个条件：\n基于硬件和系统配置生成，确保设备的唯一性。\n只要不重装系统，设备 ID 多次获取都是唯一的。\nnode-machine-id 是一个常用的 Node.js 模块，它能够在 Electron 中获取机器的唯一标识。\n我们的产品就是使用该模块，用法也很简单：\nimport { machineIdSync } from 'node-machine-id';\nlet id = machineIdSync();\n\n但是昨天出现了问题，排查结果是多台设备获取的 ID 竟然是一样的，造成了一些设备的数据被篡改，我从 issues 中找到了一些端倪。\n\n也就是在 Window Ghost 系统中会出现问题（啥是 Window Ghost ？）。\nWindow 中还经常遇到权限问题，而且这个 ID 总归不可控，所以还是用自定义的方式实现吧。\n自定义设置设备 ID\n自定义的设备 ID 首先需要唯一，其次在安装和卸载应用时设备 ID 不变。\n满足这两个要求，最佳的方案就是将自己生成的设备 ID 存储在用户目录下。\n假设当前用户叫张三，他的用户目录：\nWindow：C:\\Users\\张三\\\nMacOS：/Users/张三/\n很多应用程序都把配置写到用户目录下，且该目录一般不会遇到权限问题。\n（1）使用 uuid 生成设备 ID：\nimport { v4 as uuidv4 } from 'uuid';\nconst device_id = uuidv4();\n\n（2）在主进程中获取到用户目录，非常简单：\nimport { app } from 'electron';\nconst user_path = app.getPath('home'); // 自动获取 Win 或 Mac 的用户目录\n\n（3）在用户目录下创建 .elappid 文件，存放生成的设备 ID：\nimport { join } from 'node:path';\nimport fs from 'node:fs';\n// 获取配置文件地址\nlet appid_path = join(user_path, '.elappid');\n// 判断文件是否存在，不存在就先创建，并写入设备ID\nif (!fs.existsSync(appid_path)) {\n  fs.writeFileSync(appid_path, device_id, 'utf8');\n}\n\n（4）读取设备 ID，并发送给渲染进程：\nlet appid = fs.readFileSync(appid_path, 'utf8');\nwin.webContents.send('susr-config', { appid });\n\n写一个进程间交互的方法，就能拿到设备 ID 了。\n什么时候获取设备 ID\n正常情况下，我们希望用户打开应用的时候，主动获取设备 ID 并发给渲染进程。\n然而经过测试，在创建浏览器窗口的同时立即获取设备 ID 并通知渲染进程，在正式环境中，渲染进程往往接受不到消息。\n这是因为创建窗口时，页面还没有初始化完成，自然接收不到消息。\n保险的方法就是在页面加载完成后再获取设备 ID，方法如下：\nwin = new BrowserWindow({...})\n\n// 页面加载完成后触发：\nwin.webContents.on(\"did-finish-load\", () => {\n  console.log('在这里获取设备ID吧')\n})\n\n大功告成，你也试试吧！\n本文来自公众号 程序员成功，关注查看更多",
          "link": "https://juejin.cn/post/7345379924168196137",
          "publishedOn": "2024-03-13T03:07:11.000Z",
          "wordCount": 1069,
          "title": "注意！Electron无法获取设备ID了！",
          "imageUrl": null
        },
        {
          "id": "https://juejin.cn/post/7345297230201258024",
          "author": "ice_dk",
          "description": "theme: fancy\n本篇文章主要以理解Vue3动态组件，及其相关应用与问题解析。\n什么是 Vue3 动态组件？\n简单来说，这里的动态，即：能够根据组件的呈现条件，来调整好自己需要呈现的组件，以此来满足对需求的实现。\n注：和动态样式一样，通过用户的操作来确定是什么类型的组件。\n基本使用\n在 Vue3 中，使用动态组件非常简单，我们只需要在模板中使用<component>标签，并通过设置组件的is属性来指定要渲染的组件。例如：\n<component :is=\"currentComponent\"></component>\n\n其中，currentComponent是一个变量，它的值可以是以下 2 种：\n已注册的组件名，或 HTML 标签名称\n导入的组件对象\n以下是示例：\n<script>\nimport { Transition, TransitionGroup } from 'vue'\n\nexport default {\n  components: {\n    Transition,\n    TransitionGroup\n  }\n}\n</script>\n\n<template>\n  <component :is=\"isGroup ? 'TransitionGroup' : 'Transition'\">\n    ...\n  </component>\n</template>\n\n在这个例子中，我们可以看到，component 所呈现的组件，是由isGroup来决定的。\n注意：\n如果将组件本身传递给 is 而不是其名称，则不需要注册，例如在 <script setup> 中。\n如果在 <component> 标签上使用 v-model，模板编译器会将其扩展为 modelValue prop 和 update:modelValue 事件监听器，就像对任何其他组件一样。但是，这与原生 H…",
          "link": "https://juejin.cn/post/7345297230201258024",
          "publishedOn": "2024-03-12T17:18:12.000Z",
          "wordCount": 1361,
          "title": "Vue3 动态组件？！原来是这样啊！",
          "imageUrl": null
        },
        {
          "id": "https://juejin.cn/post/7345379926147252236",
          "author": "黄景圣",
          "description": "传统实现方式\n当前文章的gif文件较大，加载的时长可能较久\n这里我拿小红书的首页作为分析演示\n\n可以看到他们的实现方式是传统做法，把每个元素通过获取尺寸，然后算出left、top的排版位置，最后在每个元素上设置偏移值，思路没什么好说的，就是算元素坐标。那么这种做法有什么缺点？请看下面这张图的操作\n\n容器尺寸每发生一次变化，容器内部所有节点都需要更新一次样式设置，当页面元素过多时，窗口的尺寸变动卡到不得了；\n实现起来过于复杂，需要对每个元素获取尺寸然后进行计算，不利于后面修改布局样式；\n每一次的容器尺寸发生变动，图片元素都会闪烁一下（电脑好的可能不会）；\n最佳实现方式\n吐槽：早在2019年我就将下面的这种实现方式应用在小程序项目上了，但是目前还没见到有人会用这种方式去实现，为什么会没有人想到呢？表示不理解。\n代码仓库\n预览地址\n先看一下效果\n\n在上面的预览地址中，打开控制台查看节点元素，可以看到是没有任何的js控制样式操作，而是全部交给css的自适应来渲染，我在代码层中只需要把数据排列好就行。\n实现思路\n这里我将把容器里面分为4列，如下图\n\n然后再在每列的数组里面按顺序添加数据即可，这样去布局的好处既方便、兼容性好、浏览器渲染性能开销最低化，而且还不会破坏文档流，将操作做到极致简单。剩下的只需要怎样去处理每一列的数组即可。\n处理数组逻辑\n由于是要做成动态列，所以不能固定4个数组列表，那就做成动态对容器输出N列，最后再对每一列添加数据即可。这里我用ResizeObserver去代替window.onresize，理由是在实际应用中，容器会受到其他布局而影响，而非窗口变动，所以前者更精确一些，不过思路做法都是一样的。\n设置一个变量column，代表显示页面有多少列；\n声明一个变量cacheList，用来缓存接口请求回来的数据，也就是总数据；\n然后监听容器的宽度去设置column的…",
          "link": "https://juejin.cn/post/7345379926147252236",
          "publishedOn": "2024-03-12T13:53:18.000Z",
          "wordCount": 1864,
          "title": "瀑布流最佳实现方案",
          "imageUrl": null
        },
        {
          "id": "https://juejin.cn/post/7345105895930331147",
          "author": "Chokcoco",
          "description": "本文为稀土掘金技术社区首发签约文章，30天内禁止转载，30天后未获授权禁止转载，侵权必究！\n最近，群里在讨论一个很有意思的线条动画效果，效果大致如下：\n\n简单而言，就是线条沿着不规则路径的行进动画，其中的线条动画可以理解为是特殊的光效。\n本文，我们将一起探索，看看在不使用 JavaScript/Canvas 的基础上，使用纯 CSS/SVG 的方式，我们可以如何大致的还原上述的线条动画效果。\n基于 SVG 的线条动画效果\n谈到线条动画，尤其是不规则路径或者是复杂路径，我们第一时间应该想到的就是 SVG 中的 stroke-dasharray 和 stroke-dashoffset。\n这两个属性，我们在多篇文章中都有提及，也是非常有意思的线条动画效果，感兴趣的可以一并拓展阅读：\nCSS 奇技淫巧 | 妙用 drop-shadow 实现线条光影效果\n巧用 CSS 实现动态线条 Loading 动画\n首先，也是最为重要的，上面的路径动画的路径，本质上是多段线段。而使用 SVG 可以非常轻松多端线段效果，像是这样：\n<svg height=\"100%\" width=\"100%\"> xmlns=\"http://www.w3.org/2000/svg\">\n    <polyline points=\"240 10 140 10 140 90 0 90\" stroke=\"#ddd\" fill=\"transparent\" stroke-width=\"2\" />\n</svg>\n\n这样，我们就能得到这样一个多段线段：\n\n接下来，我们就可以利用 stroke-dasharray 来实现多种不同的虚线样式。\n利用与上面同样路径的 polyline，我们来实现一个虚线版本：\n<svg height=\"100%\" width=\"100%\"> xmlns=\"http://www.w3.org/2000/s…",
          "link": "https://juejin.cn/post/7345105895930331147",
          "publishedOn": "2024-03-12T02:34:49.000Z",
          "wordCount": 2422,
          "title": "【动画进阶】巧用 CSS/SVG 实现复杂线条光效动画",
          "imageUrl": null
        },
        {
          "id": "https://juejin.cn/post/7344941254236389403",
          "author": "前端小付",
          "description": "theme: cyanosis\nhighlight: atom-one-dark\n背景\n低代码一直以来争议不断，很多人认为低代码平台不好用，坑很多，很多功能实现不了，还不如自己用代码开发。关于这个我说一下我的个人观点，我觉得低代码平台不应该给开发者使用，应该是产品或者业务人员去使用，开发人员去维护低代码平台就好了。\n低代码平台还有一个比较难平衡的点，如果想追求简单，难免拓展性和灵活性变差，如果追求灵活性，难免要写一些代码，这样上手难度就变高了。\nLowCodeEngine低代码引擎为了追求灵活性，所以对非前端技术人员不太友好，因为很多时候一个很简单的功能都还要去写代码才能实现。\n不过LowCodeEngine插件系统很强大，能够快速实现自己想要的功能。下面就和大家分享一下我自己写的一个插件，可以让非技术人员也能快速开发页面。\n不使用插件实现一个小功能\n下面先给大家演示一下，不使用我写的插件的情况下，实现点击一个按钮，弹出一个弹框整个配置流程。\n我这里用的是基于antd物料的官方demo平台，官方还有一些基于其他物料的demo平台，可以到这里查看。\n先从左侧的组件库中拖一个按钮到画布中\n\n再拖一个弹框组件到画布\n\n再拖一个文本组件到弹框里\n\n在js源码中添加一个变量\n\n给弹框是否可见属性绑定变量\n\n绑定我们刚才在state里添加的变量，这里不知道是bug，还是特性，这里选不到刚才定义的变量，需要自己手写。\n\n变量绑定完成后，可以点击这个给弹框隐藏掉，因为它会干扰我们给按钮绑定事件。\n\n选中按钮，然后给按钮onClick事件绑定方法\n\n这里选择新建一个方法，把visible设置为true。\n\n\n点击上面的预览按钮，可以看到效果\n\n弹出来之后，发现点击取消和确认不会关闭弹框，需要我们给取消和确认事件绑定方法，这里可以给弹框重新显示出来\n\n\n\nonOk事件也绑定onCancel方法…",
          "link": "https://juejin.cn/post/7344941254236389403",
          "publishedOn": "2024-03-11T14:12:20.000Z",
          "wordCount": 4361,
          "title": "我为LowCodeEngine低代码引擎写了个插件，让不懂代码的产品人员也能自己开发页面了。",
          "imageUrl": null
        },
        {
          "id": "https://juejin.cn/post/7345008477695229986",
          "author": "进击的松鼠",
          "description": "theme: smartblue\n概述\n基于 Rust 的 JavaScrip 打包工具 Rolldown 正式开源，此前尤雨溪曾在 ViteConf 2023 会议上指出，Rolldown 是目前正在进行的一个新的项目，一个范围更大的 Rust 版本的 Rollup，并且最终将会其整合到 Vite 中。而 Rolldown 的重点则是性能，将会尽力与 Rollup API 兼容，目标是在对用户影响最小的情况下，在 Vite 上切换到 Rolldown。\nRolldown 是什么？\nRolldown 项目最初由 Yian Long（又名Brooooooklyn，NAPI-RS的作者）创建，现在由 Vite 和 Vue 的作者尤雨溪（Evan You）领导。\nRolldown 是基于字节跳动的 Oxc 工具集合构建的，它提供与 Rollup 兼容的应用程序接口和插件接口，但在范围内更类似于 esbuild，其内部架构也更接近于 esbuild 而不是 Rollup，代码块拆分逻辑最终可能会与 Rollup 的不同。\nRolldown 将作为 Vite 未来使用的打包工具，号称能够提供原生级性能，并能够避免解析/序列化开销的内置转换。Rolldown 将会与 Rspack 团队展开合作，在一些共享的底层工具和功能上，还会研究如何使用模块联邦在 Rspack 和 Vite 之间工作等。\nRolldown 与 Vite 的整合需要分阶段进行：\n第一阶段专注于打包，目标是能够替代ES构建进行依赖预打包。\n第二阶段是 Rollup 功能的对等性，最重要的是与 Rollup 插件生态系统的兼容性，还需要实现 Tree-shaking 和高级块分割控制，这一阶段的目标是在 Vite 的生产构建中能够使用 Rolldown 代替 Rollup。\n第三阶段是针对一些内置的转换，例如，TypeScript、JSX、代码压缩和基于目标浏览器的语法降级等，其中 TypeScript 只会进行转译，它不会处理类型检查，仍需使用 TSC 进行类型检查。\n第四阶段则是 Rustify Vite。从长远来看，如何更多的受益于本地级别的速度，实现这一目标的一种可能方式是通过 Rust API 让 Rolldown 公开插件容器。Vite 还将以 Rolldown 作为依赖项引入自己的 Rust 核心，这样才能实现 Rustify。\nVite 最终将会用 Rolldown 替换掉 esbuild 和 Rollup，其实并不是要替代它们而成为更好的替代品，主要目的是更好的满足我们在 Vite 中面临的独特的需求，最终使所有构建在 Vite 之上的用户受益。\n值得注意的是，Rolldown 目前正在积极开发中，处于早期阶段，还不能用于生产。\n为什么要开发 Rolldown？\n由于 Vite 在开发环境是依赖于 esbuild 的，虽然 esbuild 速度极快且功能丰富，但其输出，在构建资源优化方面有非常有限的控制能力，没有太多方法来控制代码如何拆分。与 Rollup 相比，它的插件 API 也不够灵活，特别是在将多个插件链接在一起来处理相同的文件类型时，因此并不适合作为生产环境打包器。\n而 Vite 在生产环境是依赖于 Rollup 的，采用了 Rollup 灵活的插件 API 和基础建设，这对 Vite 在生态中的成功起到了重要作用，虽然 Rollup 已经开始着手改进性能，在 v4 中将其解析器切换到 SWC，但是在生产环境下还是存在一定的构建性能问题，与原生的打包工具相比仍然较慢。\n这两者在输出之间的细微差异可能会导致开发和生产构建之间的行为差异，例如，对 CommonJS 的处理和对模块转换的方式有时可能会有轻微的不一致性，这对于最终用户来说很难调试。而且用户源在整个生产构建过程中由不同的工具反复解析、转换和序列化，这导致了很多可以避免的开销。\n正是因为 Vite 目前存在的问题，才导致 Vue 团队试图能够开发一款能够取代 Rollup 和 esbuild 的打包工具，既能够有原生的速度，又具有 Rollup 的灵活性和成熟性。\n总结\n基于 Rust 的打包工具 Rspack，基于 Rust 的 TypeScript/JavaScript 编译器 SWC，基于 Rust 的 JavaScript 语言的高性能工具集合 Oxc 等基于 Rust 开发的前端技术，它们在 Rust 领域探索前端工程化中都取得显著成就。这意味着以 Rust 为前端基建被证实，意味着传统的打包工具本身所带来的问题已经成为过去式， 前端工程化在性能方面将迎来出色的表现。我相信 RollDown 借助开源社区的力量，将会有着丰富的生态系统，丰富的应用场景和丰富的用户基数。\n参考\nRolldown 官网\nViteConf 2023 会议",
          "link": "https://juejin.cn/post/7345008477695229986",
          "publishedOn": "2024-03-11T10:43:09.000Z",
          "wordCount": 1025,
          "title": "Rolldown 正式开源！未来将作为 Vite 的打包工具",
          "imageUrl": null
        },
        {
          "id": "https://juejin.cn/post/7344536653463076901",
          "author": "CharlieWang",
          "description": "highlight: arduino-light\ntheme: nico\n\n前言\n我之前写过一篇 推荐一款基于Vue3的移动H5模板，加速你的移动应用开发，那篇文章介绍了我为什么做这个模板，简单讲当时 Vite 作为一款新的构建工具刚刚出来，还有Vue3也刚刚发布不久，社区里面关于中后台模板非常丰富，但是移动端的还很少，或者说做的不够好，所以那样一个契机下我从2022年一直开源到现在，也快两年时间了。\n这个过程中，vue3-vant-mobile 也发布了 2.0 版本。新增了很多功能和示例，这是这篇文章的目的之一，讲讲新增了什么。第二个目的，2024年的时候，移动端模板也有很多了，不过我自认为我做的还算是可以的，所以我想推荐你用这一款。\n需要强调的是移动端该有的东西，本文没有太多描述，它本该如此。介绍的是相对于其它模板的优势。希望的是收获更多关注，让模板有更多人使用。为了不让文章那么乏味，会有对比、会有思考，我们开始吧！\n1. vue3生态 - 最好用的 DX 体验都有\n在模板早期的时候，它支持的事情不是很多，就是一个很普通的移动端模板，应该有的特性比如：移动端适配、Mock 数据模拟、VConsole 调试、Less 预处理器，默认内置的组件库，以及 vue3 全家桶里面的状态管理 Pinia、Router、setup、TS 支持等等。不过在 2.0 的时候，我增加了基于文件路由、组件自动引入、基于文件路由的布局系统、API自动导入、PWA（渐进式Web）、Unocss、PC 版心等等。这些新特性在使用 VS Code 编辑器进行业务开发，就会发现效率飞起。对了，Eslint 采用了antfu 的最新 eslint flat 插件配置，DX 体验更上一层楼。在同类项目当中，我发现这些特性要么就是没有集成、或者不全、甚至依赖版本滞后，但是这个模板一直在更新，使用最新最稳定…",
          "link": "https://juejin.cn/post/7344536653463076901",
          "publishedOn": "2024-03-10T23:49:29.000Z",
          "wordCount": 1310,
          "title": "🔥 2024 推荐一款 Vue3 移动端模板 （⚠十个理由）",
          "imageUrl": null
        }
      ]
    },
    {
      "title": "沸点 - 开发工具推荐",
      "feedUrl": "https://rsshub.app/juejin/pins/6824710202000932877",
      "siteUrl": "https://juejin.cn/pins/recommended",
      "articles": [
        {
          "id": "7347517295356887080",
          "author": "挂羊头卖羊肉",
          "description": "[7073670907851440160#新人报道#] 来学习",
          "link": "https://juejin.cn/pin/7347517295356887080",
          "publishedOn": "2024-03-18T11:38:03.000Z",
          "wordCount": 456,
          "title": "[7073670907851440160#新人报道#] 来学习",
          "imageUrl": null
        },
        {
          "id": "7347147911149436943",
          "author": "吴楷鹏",
          "description": "#开源工具 ✨ MulSearch v0.2\nMulSearch，一个快速指定搜索源的入口页，方便使用多个搜索引擎和平台的开发者\n新版本做了一些调整，用 divider 做了分类，并引入了一些垂直平台的搜索源\n👉 体验地址：https://search.wukaipeng.com/",
          "link": "https://juejin.cn/pin/7347147911149436943",
          "publishedOn": "2024-03-18T05:52:06.000Z",
          "wordCount": 484,
          "title": "#开源工具 ✨ MulSearch v0.2 MulSearch，一个快速指定搜索源的入口页，方便使用多个搜索引擎和平台的开发者 新版本做了一些调整，用 divider 做了分类，并引入...",
          "imageUrl": null
        },
        {
          "id": "7345757062107922484",
          "author": "似懂非懂I",
          "description": "idea 哪些好用得插件",
          "link": "https://juejin.cn/pin/7345757062107922484",
          "publishedOn": "2024-03-14T01:00:11.000Z",
          "wordCount": 457,
          "title": "idea 哪些好用得插件",
          "imageUrl": null
        },
        {
          "id": "7345726691510861860",
          "author": "吴楷鹏",
          "description": "#开源工具 如果平时有使用多个搜索引擎的习惯，比如 Google、Bing、百度等，切换起来比较麻烦，可以使用这个轻量网站，功能专一，输入搜索关键词，选择想要的搜索引擎去搜索即可\n👉 search.wukaipeng.com",
          "link": "https://juejin.cn/pin/7345726691510861860",
          "publishedOn": "2024-03-13T13:20:34.000Z",
          "wordCount": 466,
          "title": "#开源工具 如果平时有使用多个搜索引擎的习惯，比如 Google、Bing、百度等，切换起来比较麻烦，可以使用这个轻量网站，功能专一，输入搜索关键词，选择想要的搜...",
          "imageUrl": null
        },
        {
          "id": "7345634485780545562",
          "author": "F西",
          "description": "xdm，在线找一款vscode插件，能在呼出代码提示后，能在每一个后面标明是property或者函数function的，如下图所示，以前不知道在哪个视频里别人的vscode有见过这种效果，救救孩子",
          "link": "https://juejin.cn/pin/7345634485780545562",
          "publishedOn": "2024-03-13T07:22:02.000Z",
          "wordCount": 457,
          "title": "xdm，在线找一款vscode插件，能在呼出代码提示后，能在每一个后面标明是property或者函数function的，如下图所示，以前不知道在哪个视频里别人的vscode有见过这...",
          "imageUrl": null
        },
        {
          "id": "7345645720042962959",
          "author": "Zakary",
          "description": "https://developer.aliyun.com/topic/lingma/activities/202403?taskCode=14508&recordId=f024db3e41b11bd3fd40ebd113787850#/?utm_content=m_fission_1  「通义灵码 · 体验 AI 编码，开 AI 盲盒」",
          "link": "https://juejin.cn/pin/7345645720042962959",
          "publishedOn": "2024-03-13T03:26:53.000Z",
          "wordCount": 466,
          "title": "https://developer.aliyun.com/topic/lingma/activities/202403?taskCode=14508&recordId=f024db3e41b11bd3fd40ebd113787850#/?utm_content=m_fission_1 「通义...",
          "imageUrl": null
        },
        {
          "id": "7345027924972929074",
          "author": "TommyWhite",
          "description": "[7210228048107896891#每日快讯#] 📱 首个零代码快准稳 UI 录制回放平台、也是腾讯 APIJSON 生态项目 UIGO 开发 3 年多终于开源啦 🚀\n像素级自动兼容任意宽高比分辨率屏幕，毫秒级自动精准等待网络请求，录制回放快、准、稳！\n 适用于 替代重复界面操作、一次录制到处回放、App UI/功能 自动化测试、\n帮助开发快速复现和排查 bug、方便判断 bug 原因出在前端还是后端 等，\n大量减少耗时费力又无聊的重复手工操作，大幅提高手工和自动化测试效率，\n强力杜绝 测试和开发、前端和后端 关于缺陷单踢皮球等各种低效扯皮内耗！\n用户包含腾讯，应微信团队邀请分享了 零代码测试工具与实践(API•单元•UI) \n  \nhttps://juejin.cn/post/7345105895929856011",
          "link": "https://juejin.cn/pin/7345027924972929074",
          "publishedOn": "2024-03-12T03:15:27.000Z",
          "wordCount": 598,
          "title": "[7210228048107896891#每日快讯#] 📱 首个零代码快准稳 UI 录制回放平台、也是腾讯 APIJSON 生态项目 UIGO 开发 3 年多终于开源啦 🚀 像素级自动兼容任意宽...",
          "imageUrl": null
        },
        {
          "id": "7345105899151687692",
          "author": "一只小芒果",
          "description": "jym，有没有好用的AI代码提示工具推荐",
          "link": "https://juejin.cn/pin/7345105899151687692",
          "publishedOn": "2024-03-12T01:42:01.000Z",
          "wordCount": 451,
          "title": "jym，有没有好用的AI代码提示工具推荐",
          "imageUrl": null
        },
        {
          "id": "7345071662028881935",
          "author": "小麦加油呀",
          "description": "[7243698841848348730#每天一个知识点#] 国产、开源、高颜值、支持单机模式、支持集群模式、支持哨兵模式的一款Redis客户端管理工具。",
          "link": "https://juejin.cn/pin/7345071662028881935",
          "publishedOn": "2024-03-12T00:35:50.000Z",
          "wordCount": 474,
          "title": "[7243698841848348730#每天一个知识点#] 国产、开源、高颜值、支持单机模式、支持集群模式、支持哨兵模式的一款Redis客户端管理工具。",
          "imageUrl": null
        },
        {
          "id": "7344571968175177780",
          "author": "用户2405397104273",
          "description": "有没有需要🪜的",
          "link": "https://juejin.cn/pin/7344571968175177780",
          "publishedOn": "2024-03-11T03:42:23.000Z",
          "wordCount": 443,
          "title": "有没有需要🪜的",
          "imageUrl": null
        },
        {
          "id": "7344571269554323519",
          "author": "弗雷free",
          "description": "对标 Github Copilot 的百度 Baidu Comate 服务，有用过的朋友吗？\n根据官网描述，智能代码助手 Baidu Comate 是基于文心大模型，结合百度积累多年的编程现场大数据和外部优秀开源数据，打造的新一代编码辅助工具，可以释放十倍软件生产力。\n虽然可以免费试用，但是看到每年500的价格，着实捏一把冷汗，嗯，我还是去看看您对标的产品吧。\n感觉很多产品在宣传时都喜欢说可以对标openai、看齐微软、超越谷歌，后面还可能要对标sora哈哈，但是真正言行一致的有几个呢？反而像是逆向给对标的公司打了一波免费广告。\n[7338596022676881445#Sora 技术探索#]",
          "link": "https://juejin.cn/pin/7344571269554323519",
          "publishedOn": "2024-03-10T05:12:17.000Z",
          "wordCount": 576,
          "title": "对标 Github Copilot 的百度 Baidu Comate 服务，有用过的朋友吗？ 根据官网描述，智能代码助手 Baidu Comate 是基于文心大模型，结合百度积累多年的编程现场大...",
          "imageUrl": null
        },
        {
          "id": "7343548913034346515",
          "author": "Simon_He",
          "description": "fast-create-varibale支持空内容直接创建变量，检测到无内容，再选择要创建的选项后，会让你输入变量名，另外这个b站上传的视频是react组件，我可以当vue来写[呲牙]",
          "link": "https://juejin.cn/pin/7343548913034346515",
          "publishedOn": "2024-03-08T06:01:47.000Z",
          "wordCount": 454,
          "title": "fast-create-varibale支持空内容直接创建变量，检测到无内容，再选择要创建的选项后，会让你输入变量名，另外这个b站上传的视频是react组件，我可以当vue来写[呲...",
          "imageUrl": null
        },
        {
          "id": "7343429147815034930",
          "author": "奶牛没有奶",
          "description": "百度ai辅助写代码竟然开始给程序员撒钱了[发][发]\n最新vscode辅助代码插件免费用还给钱，我上来直接提了三十，代码生成效果还可以，https://comate.baidu.com/?inviteCode=atyt07gu[7201008222164451331#前端开发现状#]\n点这个链接，登录账号，根据页面提示跳转到vscode百度的代码辅助插件安装后登录一下，最低可以免费领30京东e卡，通过邀请链接进的多给10块，当天奖励售罄可以第二天在看",
          "link": "https://juejin.cn/pin/7343429147815034930",
          "publishedOn": "2024-03-07T06:58:30.000Z",
          "wordCount": 539,
          "title": "百度ai辅助写代码竟然开始给程序员撒钱了[发][发] 最新vscode辅助代码插件免费用还给钱，我上来直接提了三十，代码生成效果还可以，https://comate.baidu.com/?i...",
          "imageUrl": null
        },
        {
          "id": "7343138429939580947",
          "author": "前端之虎陈随易",
          "description": "[7243698841848348730#每天一个知识点#] VSCode扩展fnMap（函数地图）v4.4.0版本发布啦！本次增加了标记行功能的稳定性。\n什么是标记行呢？请看下方动图。\n这只是fnMap的冰山一角，更多功能，可以点击下方链接，安装使用。\nhttps://marketplace.visualstudio.com/items?itemName=chensuiyi.fn-map",
          "link": "https://juejin.cn/pin/7343138429939580947",
          "publishedOn": "2024-03-06T16:02:16.000Z",
          "wordCount": 478,
          "title": "[7243698841848348730#每天一个知识点#] VSCode扩展fnMap（函数地图）v4.4.0版本发布啦！本次增加了标记行功能的稳定性。 什么是标记行呢？请看下方动图。 这只...",
          "imageUrl": null
        },
        {
          "id": "7343131959826350090",
          "author": "emo大王",
          "description": "jym  有没有mac对比jar的工具",
          "link": "https://juejin.cn/pin/7343131959826350090",
          "publishedOn": "2024-03-06T06:56:55.000Z",
          "wordCount": 451,
          "title": "jym 有没有mac对比jar的工具",
          "imageUrl": null
        },
        {
          "id": "7342406486910517274",
          "author": "ServBay",
          "description": "[西瓜]ServBay 1.2.3版本正式发布！\nServBay是一个集成式、图形化的本地化Web开发环境。开发者通过ServBay几分钟内就能部署一个本地化的开发环境。主要解决Web开发者（比如PHP、Nodejs）、测试工程师、小型团队安装和维护开发测试环境的问题，后期还可以快速的进行环境的升级以及维护。\n本次更新了：\n[礼物]全新架构及软件包\n[礼物]增强的错误日志\n[礼物]phpMyAdmin支持MariaDB 11.3\n[礼物]ServBay Helper运行状况的判断\n期待您在ServBay 1.2.3版本中享受到更加优化和流畅的体验[庆祝]",
          "link": "https://juejin.cn/pin/7342406486910517274",
          "publishedOn": "2024-03-04T16:16:14.000Z",
          "wordCount": 463,
          "title": "[西瓜]ServBay 1.2.3版本正式发布！ ServBay是一个集成式、图形化的本地化Web开发环境。开发者通过ServBay几分钟内就能部署一个本地化的开发环境。主要解决Web开...",
          "imageUrl": null
        },
        {
          "id": "7342319793154572303",
          "author": "丢掉幻想",
          "description": "蓝月亮，蓝禾，三七互娱，顺丰，康冠科技，金证科技24春招内推\n①蓝月亮\n【招聘岗位】技术，研发，lT，供应链，市场，职能等\n【网申链接】https://sourl.cn/NsVxG6\n【内推码】 在网申页面“信息获取渠道”中“其他渠道”输入内推码：CS01\n②蓝禾\n【岗位】运营类、设计类、研发类，供应链类，职能等\n【一键内推】https://lanhevip.jobs.feishu.cn/index/m/?external_referral_code=T1KYX4B\n【校园大使推荐码】T1KYX4B\n③三七互娱\n【岗位】美术设计类，运营类，游戏研发类，策划类，市场推广类等\n【一键内推】https://sourl.cn/4tzszW\n【官方内推码】DSQ526j8\n④顺丰\n【招聘岗位】研发类、算法与大数据类，设计类，产品类、职能类\n【官方内推码】4FOLXH\n【一键内推】https://sourl.cn/viaZZt\n⑤康冠科技\n 【岗位】算法类，软硬件类，供应链类，产品类，商务类，职能类\n【一键内推】https://sourl.cn/aJJ2YE \n【内推码】 EVBM88\n⑥金证科技\n【岗位】C/C++/Java/Web/大模型算法，测试/实施/维护/运维，产品/销售/交易员\n【内推码】EVVG83\n【投递链接】https://sourl.cn/SUhk4b",
          "link": "https://juejin.cn/pin/7342319793154572303",
          "publishedOn": "2024-03-04T07:44:59.000Z",
          "wordCount": 461,
          "title": "蓝月亮，蓝禾，三七互娱，顺丰，康冠科技，金证科技24春招内推 ①蓝月亮 【招聘岗位】技术，研发，lT，供应链，市场，职能等 【网申链接】https://sourl.cn/NsVx...",
          "imageUrl": null
        },
        {
          "id": "7341394494901305381",
          "author": "Aooohan",
          "description": "上榜GitHub Trending啦~\nhttps://vfox.lhan.me/",
          "link": "https://juejin.cn/pin/7341394494901305381",
          "publishedOn": "2024-03-03T03:00:16.000Z",
          "wordCount": 477,
          "title": "上榜GitHub Trending啦~ https://vfox.lhan.me/",
          "imageUrl": null
        },
        {
          "id": "7341288345782304809",
          "author": "程序员吾真本",
          "description": "windows超越mac成为web应用开发体验赢家\nDHH几天前发文说，在windows11上用vscode和wsl2开发web应用，尤其是使用docker的体验，已经好过mac😆😀😂他的体验和我的怎么那么一样😂\n[7073670907851440160#新人报道#]",
          "link": "https://juejin.cn/pin/7341288345782304809",
          "publishedOn": "2024-03-01T15:05:13.000Z",
          "wordCount": 463,
          "title": "windows超越mac成为web应用开发体验赢家 DHH几天前发文说，在windows11上用vscode和wsl2开发web应用，尤其是使用docker的体验，已经好过mac😆😀😂他的体验...",
          "imageUrl": null
        },
        {
          "id": "7340998385304354852",
          "author": "码农996",
          "description": "ChatGPT、Midjourney、Sora等全网顶尖AI工具一站式解决",
          "link": "https://juejin.cn/pin/7340998385304354852",
          "publishedOn": "2024-03-01T02:53:52.000Z",
          "wordCount": 449,
          "title": "ChatGPT、Midjourney、Sora等全网顶尖AI工具一站式解决",
          "imageUrl": null
        }
      ]
    },
    {
      "title": "倪爽设计工作室",
      "feedUrl": "https://nishuang.net/feed/",
      "siteUrl": "https://nishuang.net",
      "articles": []
    }
  ],
  "cliVersion": "1.15.1"
}