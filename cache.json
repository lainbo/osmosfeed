{
  "sources": [
    {
      "title": "Release notes from osmosfeed",
      "feedUrl": "https://github.com/osmoscraft/osmosfeed/releases.atom",
      "siteUrl": "https://github.com/osmoscraft/osmosfeed/releases",
      "articles": []
    },
    {
      "title": "Lainbo's Blog",
      "feedUrl": "https://lainbo.com/rss/feed.xml",
      "siteUrl": "https://lainbo.com/",
      "articles": [
        {
          "id": "https://lainbo.com/article/collection",
          "author": null,
          "description": "日常看见一些有特色的库会收集下来，持续收集中",
          "link": "https://lainbo.com/article/collection",
          "publishedOn": "2024-03-19T12:01:37.000Z",
          "wordCount": 343,
          "title": "⭐收集有特色的库",
          "imageUrl": "/bg_image.jpg"
        },
        {
          "id": "https://lainbo.com/article/clash-config",
          "author": null,
          "description": "Clash确实是开箱即用，但开箱时并不是一个优秀的状态。当我将所有服务迁移到国外服务商时，我意识到在短时间内离不开Clash了。为了防止出现问题，我研究了一些Clash相关的东西。现在是时候做一个总结了。",
          "link": "https://lainbo.com/article/clash-config",
          "publishedOn": "2024-03-02T04:39:02.000Z",
          "wordCount": 874,
          "title": "Clash Verge系列使用最佳实践",
          "imageUrl": "/bg_image.jpg"
        },
        {
          "id": "https://lainbo.com/article/high-quality-prompt",
          "author": null,
          "description": "如果你认为ChatGPT给出的官方教程太长了, 或无法看明白, 可以看看这个这个总结的版本, 除了指导如何编写高质量Prompt, 还在文末给出了适应大部分场景的模板",
          "link": "https://lainbo.com/article/high-quality-prompt",
          "publishedOn": "2024-02-21T14:01:00.000Z",
          "wordCount": 644,
          "title": "如何编写高质量AI Prompt",
          "imageUrl": "/bg_image.jpg"
        },
        {
          "id": "https://lainbo.com/article/use-nvm-desktop",
          "author": null,
          "description": "在用过一些Node版本管理工具后, 这似乎是一个最好的解决方案。",
          "link": "https://lainbo.com/article/use-nvm-desktop",
          "publishedOn": "2024-02-21T08:46:00.000Z",
          "wordCount": 446,
          "title": "nvm-desktop的使用",
          "imageUrl": "/bg_image.jpg"
        }
      ]
    },
    {
      "title": "张鑫旭-鑫空间-鑫生活",
      "feedUrl": "https://www.zhangxinxu.com/wordpress/feed/",
      "siteUrl": "https://www.zhangxinxu.com/wordpress",
      "articles": [
        {
          "id": "https://www.zhangxinxu.com/wordpress/?p=11135",
          "author": "张 鑫旭",
          "description": "全新的Screen Wake Lock API，可以让网页无论放置多久，都不要担心熄屏，或出现屏保，Web如今越来越强了。",
          "link": "https://www.zhangxinxu.com/wordpress/2024/03/js-screen-wake-lock-api/",
          "publishedOn": "2024-03-17T15:35:45.000Z",
          "wordCount": 1388,
          "title": "今天才知道，Web网页也能阻止息屏了",
          "imageUrl": null
        },
        {
          "id": "https://www.zhangxinxu.com/wordpress/?p=11124",
          "author": "张 鑫旭",
          "description": "音视频合成的时候，有倍速合成的需求，起初，我以为这只是个手到擒来的小需求，细究之下发现问题并不简单……",
          "link": "https://www.zhangxinxu.com/wordpress/2024/02/js-audioencoder-backplayrate-audiobuffer/",
          "publishedOn": "2024-02-29T14:22:22.000Z",
          "wordCount": 1743,
          "title": "不改变音调情况下Audio音频的倍速合成JS实现",
          "imageUrl": null
        }
      ]
    },
    {
      "title": "阮一峰的网络日志",
      "feedUrl": "https://feeds.feedburner.com/ruanyifeng",
      "siteUrl": "http://www.ruanyifeng.com/blog/",
      "articles": [
        {
          "id": "http://www.ruanyifeng.com/blog/2024/03/weekly-issue-293.html",
          "author": null,
          "description": "这里记录每周值得分享的科技内容，周五发布。\n本杂志开源，欢迎投稿。另有《谁在招人》服务，发布程序员招聘信息。合作请邮件联系（yifeng.ruan@gmail.com）。\n封面图\n\n安徽芜湖轻轨，为了穿越人行天桥和高架，有一段设计成了波峰波谷，乘坐时会有一点过山车的感觉。（via）\n一周是一年的2%\n纳特·弗里德曼（Nat Friedman）曾经是 GitHub 的 CEO，现在是一名风险投资家。\n\n他的个人网站首页，写着一些自己的信条。其中有一条，让我很震动。\n他写道：\"一周是一年的2%。\"\n我一直觉得，每周七天是很短的时间，尤其是发布周刊以后，更是过得飞快。\n但是，他的这句话让我意识到，每周其实是一年当中很重要的组成部分。虚度一周就是虚度一年的2%。\n你没有几周可以虚度的。只要多浪费几周，这一年很快过去。\n反过来，过好这一周，那么这一年的2%就有价值了。只要这样多过几周，一年就会变得很充实，有拿得出手的成果。\n我坚持写周刊，每周记录一点东西，整理一些思考，现在想起来，其实就是在督促自己过好这一年的2%。\n维苏威古卷\n公元79年10月24日，意大利的维苏威火山爆发，一天之内就毁灭了两万多人的庞贝古城。\n火山灰掩盖了整座城市，其中有一栋房子存放了各种书籍。直到18世纪，这栋房子才重新被发现，下面是考古学家的建筑复原图。\n\n房子里面的1800多卷纸莎草古书，都已经完全碳化。\n\n\n考古学家试图展开这些烧焦的古书，但是纸张一碰就碎。\n\n每一页的碎片就像下面这样。\n\n没有人能从这些烧焦的古书上，读出一个字。\n2019年，一位美国科学家提出了一种新方法，使用短红外高光谱成像技术，对这些古卷进行 3D 扫描，然后虚拟建模，在不接触古卷的情况下，就可以展开或压平每一页，从而复现上面的笔迹。\n\n\n下面是扫描后的页面结果。\n\n问题是上面的笔迹还是很模糊，无法确定是哪一个字母，更不要说读出句子…",
          "link": "http://www.ruanyifeng.com/blog/2024/03/weekly-issue-293.html",
          "publishedOn": "2024-03-15T00:13:02.000Z",
          "wordCount": null,
          "title": "科技爱好者周刊（第 293 期）：一周是一年的2%",
          "imageUrl": null
        },
        {
          "id": "http://www.ruanyifeng.com/blog/2024/03/weekly-issue-292.html",
          "author": null,
          "description": "这里记录每周值得分享的科技内容，周五发布。\n本杂志开源，欢迎投稿。另有《谁在招人》服务，发布程序员招聘信息。合作请邮件联系（yifeng.ruan@gmail.com）。\n封面图\n\n意大利佛罗伦萨新机场，宣布了设计方案。候机楼顶部将有一个7.7公顷的葡萄种植园，用来酿造当地著名的葡萄酒。（via）\n所有代码都是技术债\n代码是公司的资产，公司总是鼓励大家多写代码。但是，很多人（尤其是管理层）没有意识到，代码也是负债。\n代码越多，债越多，这就是程序员常说的\"技术债\"。\n\n今天我想谈谈，什么是\"技术债\"？为什么你拥有的代码太多，不是一件好事。\n\"技术债\"（technical debt）源自著名程序员沃德·坎宁安（Ward Cunningham）的一篇文章。他写了一句话：\"交付代码就像负债累累。\"\n\n你的代码一旦进入生产环境，就像背上一笔债务，将来需要不断支付利息，除非代码不再使用。\n这个比喻获得了共鸣，人们把代码带来的负担，称为\"技术债\"。\n为什么代码好比负债累累？这有两个原因。\n第一个原因是，由于各种限制，代码的实现有问题，包含了 Bug，或者选择了有问题的组件，后期需要修改或重写。\n第二个原因是，即使代码是完美的，但由于技术进步，它会逐渐腐化过时，后期需要不断维护和更新，这通常比原始开发成本更高。\n这意味着，无论多么小心，上线的代码总是有\"技术债\"。 可以这样说，所有的代码都是技术债。\n\n\"技术债\"的可怕之处，在于你必须按时偿还，如果拖着不还，它就会像雪球一样越滚越多，维护成本越来越高，直到再也无法维护，只能放弃这段代码。\n既然所有代码都是技术债，程序员写代码时，就必须考虑到它的长期成本，尽量减轻自己或别人日后的负担（利息）。\n一个基本的事实是 代码越少，技术债越小；没有代码，就没有技术债。从这个角度看，软件开发的正确做法是下面两点。\n（1）冗余的代码都要删除。\n（2）只实现…",
          "link": "http://www.ruanyifeng.com/blog/2024/03/weekly-issue-292.html",
          "publishedOn": "2024-03-08T00:24:48.000Z",
          "wordCount": null,
          "title": "科技爱好者周刊（第 292 期）：所有代码都是技术债",
          "imageUrl": null
        },
        {
          "id": "http://www.ruanyifeng.com/blog/2024/03/weekly-issue-291.html",
          "author": null,
          "description": "这里记录每周值得分享的科技内容，周五发布。\n本杂志开源，欢迎投稿。另有《谁在招人》服务，发布程序员招聘信息。合作请邮件联系（yifeng.ruan@gmail.com）。\n封面图\n\n2022年完工的宁波惠贞高级中学，将学校与公园融为一体，在体育场看台上方，设计了一个几层楼高的开放式空间。（via）\nAI 没有护城河\n上周，魅族手机突然宣布，停止传统的智能手机新项目，All in AI。\n\n魅族董事长沈子瑜公开说，\"给魅族的智能手机时代一个完美的句号\"，以后推出的将全部是 AI 设备。\n看上去，魅族觉得，AI 比手机更有前途，所以决定停止老本行，改做 AI 设备。\n\n（图片说明：最新的\"魅族 21 PRO\"手机，大概没有下一代了。）\n最近，AI 如日中天，动心的企业恐怕不在少数，大家都想趁早加入，分一杯羹。\n但是，我想泼一点冷水。AI 更有前途是不假，但是改做 AI 真的更容易活下去吗？\n去年上半年，一份谷歌内部报告泄漏，据说是某个研究员写给谷歌高管的，看上去可信度很高。\n当时，谷歌内部正在讨论，如何应对 OpenAI 公司的 ChatGPT。这个研究员提出自己的看法，题目就叫做《AI 没有护城河》（中文译文）。\n\n他的核心观点是，即使谷歌全力投入，可能也赢不了这场 AI 竞赛。不仅谷歌赢不了，OpenAI 也赢不了。\n原因倒不是谷歌的能力不行，而是 AI 行业有一些特点，导致这是一个完全竞争行业，\"没有护城河\"，想要获得领先优势和垄断利润，极其困难。\n（1）生成式 AI 的核心技术是开源的，任何人都可以获取。\n某些公司可能有独家技术，但不是关键部分。AI 的架构和原理都是公开的，不同的只是各家的实现。\n网上有 AI 的开源模型，功能越来越强。只要按照教程操作，即使是家用电脑，也能很快架设一个可用的 AI 服务。\n（2）AI 模型的替代性很强。\n各公司的模型有强有弱，但是核心…",
          "link": "http://www.ruanyifeng.com/blog/2024/03/weekly-issue-291.html",
          "publishedOn": "2024-03-01T00:25:43.000Z",
          "wordCount": null,
          "title": "科技爱好者周刊（第 291 期）：AI 没有护城河",
          "imageUrl": null
        },
        {
          "id": "http://www.ruanyifeng.com/blog/2024/02/weekly-issue-290.html",
          "author": null,
          "description": "这里记录每周值得分享的科技内容，周五发布。\n本杂志开源，欢迎投稿。另有《谁在招人》服务，发布程序员招聘信息。合作请邮件联系（yifeng.ruan@gmail.com）。\n封面图\n\n上图是国际野生动物摄影师比赛（2023年度）的第一名作品，一只小北极熊在挪威斯瓦尔巴群岛附近漂浮的冰块上，用爪子挖出了一张床，爬上去睡着了。（via）\n苹果头盔的最大问题\n春节前，苹果公司的 Apple Vision Pro 上架销售了。\n这是近几年最创新的硬件设备，首批20万台一抢而空。\n\n它只在美国销售，还没有官方的中文名。为了行文方便，我暂且就叫它\"苹果头盔\"吧。\n虽然这么叫，但是苹果对它的定位可不是 VR 头盔，而是\"空间计算机\"（spatial computer）。\n这个名称大有奥妙，表明了苹果公司对它的长远规划：这是一台通用计算机，跟笔记本和手机一样，属于消费级计算设备。\n在苹果眼中，这三者----Mac、iPhone、苹果头盔----能做的事情是一样的，只是使用场合不同。Mac 是桌面计算机，iPhone 是便携计算机，苹果头盔是穿戴计算机。\niFixit 网站拆解了苹果头盔，证实了 CPU 是 M2 芯片，跟 MacBook 笔记本相同。因此理论上，MacBook 可以运行的程序，苹果头盔都能运行。\n\n问题就来了，你觉得，苹果头盔能当作通用计算机使用吗？\n一些人非常看好，认为它的虚拟空间感前所未有，让实体屏幕变成了虚拟屏幕，将来完全可以戴着它办公。另一些人则觉得，它有内在的缺陷，无法用来办公。\n著名的 IT 分析师 Ben Thompson 写了自己的使用感受。我觉得，他分析得比较深入，分享给大家。\n他说，自己戴上头盔的第一反应是，这玩意太棒了，看视频无与伦比！他的妻子惊呼：\"有了它，谁还要去电影院？\"\n但是，当他打算戴着头盔写文章时，就发现存在一个最大问题，使其无法用于任何严肃…",
          "link": "http://www.ruanyifeng.com/blog/2024/02/weekly-issue-290.html",
          "publishedOn": "2024-02-23T00:11:44.000Z",
          "wordCount": null,
          "title": "科技爱好者周刊（第 290 期）：苹果头盔的最大问题",
          "imageUrl": null
        }
      ]
    },
    {
      "title": "Barret李靖的即刻动态",
      "feedUrl": "https://rsshub.app/jike/user/83F8C091-4C46-43B7-B7AC-B90CD72255E7",
      "siteUrl": "https://m.okjike.com/users/83F8C091-4C46-43B7-B7AC-B90CD72255E7",
      "articles": [
        {
          "id": "https://m.okjike.com/originalPosts/65fa3a5237f7165b2153f844",
          "author": null,
          "description": "永远要相信没有绝对的稳操胜券，我们只不过在自己所掌握的信息框架内给出了有限的判断，放入一个更宏观的视角，或者引入更多的决策因子，事情的结果可能就变得不一样了。",
          "link": "https://m.okjike.com/originalPosts/65fa3a5237f7165b2153f844",
          "publishedOn": "2024-03-20T01:22:26.000Z",
          "wordCount": 442,
          "title": "发布了: 永远要相信没有绝对的稳操胜券，我们只不过在自己所掌握的信息框架内给出了有限的判断，放入一个更宏观的视角，或者引入更多的决策因子，事情的结果可能...",
          "imageUrl": "https://cdnv2.ruguoapp.com/Fs-eSdFZY-o3eJCp506HPIEBqkXe?imageMogr2/auto-orient/heic-exif/1/format/jpeg/thumbnail/!120x120r/gravity/Center/crop/!120x120a0a0"
        },
        {
          "id": "https://m.okjike.com/originalPosts/65fa2dae6d9f190631d0909f",
          "author": null,
          "description": "追求卓越，就注定了要去突破极限，这是一件令人感到痛苦的事情，一旦达到了某个度，人就可能会崩溃。\n在几近崩溃的那一刻，或许会认为自己已经失败了。其实，并没有。当痛苦消散之后，所经历的一切，都会更大概率提升未来成功的可能性。\n上次在黄山宏村见到一位老朋友，他是赶去参加 60km 越野赛的，我用“生猛”两个字形容他，毕竟马拉松 42km 就已经不是一般人可以承受的了，但他告诉我，60km 是他目标路上的热身赛，接下来要去突破 100km，那可能会有危险，但是他想去尝试。",
          "link": "https://m.okjike.com/originalPosts/65fa2dae6d9f190631d0909f",
          "publishedOn": "2024-03-20T00:28:30.000Z",
          "wordCount": 461,
          "title": "发布了: 追求卓越，就注定了要去突破极限，这是一件令人感到痛苦的事情，一旦达到了某个度，人就可能会崩溃。 在几近崩溃的那一刻，或许会认为自己已经失败了。...",
          "imageUrl": "https://cdnv2.ruguoapp.com/FudHJOqZgytlrK8D2P946rC36Hr2v3.png?imageMogr2/auto-orient/thumbnail/300x2000%3E"
        },
        {
          "id": "https://m.okjike.com/originalPosts/65f993463624666324f5ee52",
          "author": null,
          "description": "学习。",
          "link": "https://m.okjike.com/originalPosts/65f993463624666324f5ee52",
          "publishedOn": "2024-03-19T13:29:42.000Z",
          "wordCount": 453,
          "title": "发布了: 学习。",
          "imageUrl": "https://cdnv2.ruguoapp.com/FvypW9hPQ6QdDCaxKAiD7MuGk958v3.jpeg?imageMogr2/auto-orient/thumbnail/300x2000%3E/quality/70/interlace/1"
        },
        {
          "id": "https://m.okjike.com/originalPosts/65f8ee09164d89e601697b01",
          "author": null,
          "description": "在个人管理和团队协同中，我理解的周报和月报的作用：\n- 周报：从简、可不写；是对过程中问题和风险的把控\n- 月报：有数据、有里程碑、有感想；是对阶段性结果的把控\n过去工作十年，个人也一直保持着写周报和月报的习惯，周报五分钟解决，月报半小时，大部分情况是给自己看，偶尔翻起，也能看到自己在事中的变化和成长。\n但觉得最有价值的，还是年报。每年都会维护一篇文档，上面记录了一年内所有的动态目标和达成情况，也包括每个月结束时的感想和思考。\n茫然时会翻开这篇文档，很容易找到下一脚要踏在什么地方，例如下个月要开启一项挑战，但技能树尚未点满；再例如这个月有带家人出行的计划，去踏春放风筝，行程需要规划起来了。\n还有一份文档，它记录了每隔五年的个人规划和成长方向。一年太短，十年太长，我习惯把五年作为一个规划周期，它时刻提醒自己要去到哪里，要成为怎样的人。这篇文档看的就比较少了，一年最多看两三回，每次去看，都会多一份焦虑，焦虑这一个五年走的太慢，焦虑下一个五年走向何方。",
          "link": "https://m.okjike.com/originalPosts/65f8ee09164d89e601697b01",
          "publishedOn": "2024-03-19T01:44:41.000Z",
          "wordCount": 448,
          "title": "发布了: 在个人管理和团队协同中，我理解的周报和月报的作用： - 周报：从简、可不写；是对过程中问题和风险的把控 - 月报：有数据、有里程碑、有感想；是对阶段...",
          "imageUrl": "https://cdnv2.ruguoapp.com/Fs-eSdFZY-o3eJCp506HPIEBqkXe?imageMogr2/auto-orient/heic-exif/1/format/jpeg/thumbnail/!120x120r/gravity/Center/crop/!120x120a0a0"
        },
        {
          "id": "https://m.okjike.com/originalPosts/65f8e18c595d881efaa8501b",
          "author": null,
          "description": "确定自己想要什么，以及真正想获得的是什么，然后再去制定自己的奋斗计划。当已经拥有了实现自己目标所需的金钱时，金钱就不再是一个有效的决策要素。换句话说，从最开始，挣钱就不是一个正确的目标。",
          "link": "https://m.okjike.com/originalPosts/65f8e18c595d881efaa8501b",
          "publishedOn": "2024-03-19T00:51:24.000Z",
          "wordCount": 442,
          "title": "发布了: 确定自己想要什么，以及真正想获得的是什么，然后再去制定自己的奋斗计划。当已经拥有了实现自己目标所需的金钱时，金钱就不再是一个有效的决策要素。换...",
          "imageUrl": "https://cdnv2.ruguoapp.com/Fs-eSdFZY-o3eJCp506HPIEBqkXe?imageMogr2/auto-orient/heic-exif/1/format/jpeg/thumbnail/!120x120r/gravity/Center/crop/!120x120a0a0"
        },
        {
          "id": "https://m.okjike.com/originalPosts/65f6c02bde5f287348606230",
          "author": null,
          "description": "最近几次出门都是社交驱动，上次在苏州，这次去黄山见了老朋友，聊得意犹未尽，下一站在深圳和北京😄",
          "link": "https://m.okjike.com/originalPosts/65f6c02bde5f287348606230",
          "publishedOn": "2024-03-17T10:04:27.000Z",
          "wordCount": 452,
          "title": "发布了: 最近几次出门都是社交驱动，上次在苏州，这次去黄山见了老朋友，聊得意犹未尽，下一站在深圳和北京😄",
          "imageUrl": "https://cdnv2.ruguoapp.com/Fo1lV-CfdUsEtUJY6PCZZGnoG8oiv3.jpeg?imageMogr2/auto-orient/thumbnail/300x2000%3E/quality/70/interlace/1"
        },
        {
          "id": "https://m.okjike.com/originalPosts/65f3e2d236246663248d3019",
          "author": null,
          "description": "两个多月前内推了一个简历，点进去一看，状态还是面试中，时长 77 天 22 小时，真替这家公司担忧。",
          "link": "https://m.okjike.com/originalPosts/65f3e2d236246663248d3019",
          "publishedOn": "2024-03-15T05:55:30.000Z",
          "wordCount": 450,
          "title": "发布了: 两个多月前内推了一个简历，点进去一看，状态还是面试中，时长 77 天 22 小时，真替这家公司担忧。",
          "imageUrl": "https://cdnv2.ruguoapp.com/Fs-eSdFZY-o3eJCp506HPIEBqkXe?imageMogr2/auto-orient/heic-exif/1/format/jpeg/thumbnail/!120x120r/gravity/Center/crop/!120x120a0a0"
        },
        {
          "id": "https://m.okjike.com/originalPosts/65f39d1537f7165b21dad411",
          "author": null,
          "description": "手机丢了，星巴克赊账成就达成",
          "link": "https://m.okjike.com/originalPosts/65f39d1537f7165b21dad411",
          "publishedOn": "2024-03-15T00:57:57.000Z",
          "wordCount": 451,
          "title": "发布了: 手机丢了，星巴克赊账成就达成",
          "imageUrl": "https://cdnv2.ruguoapp.com/Fs-eSdFZY-o3eJCp506HPIEBqkXe?imageMogr2/auto-orient/heic-exif/1/format/jpeg/thumbnail/!120x120r/gravity/Center/crop/!120x120a0a0"
        },
        {
          "id": "https://m.okjike.com/originalPosts/65ef8f9937f7165b218bcc08",
          "author": null,
          "description": "决策力需要在高密度的决策中训练出来，也需要有承担相应决策后果的勇气，害怕犯错永远做不好未来，就连当下都是唯唯诺诺的。",
          "link": "https://m.okjike.com/originalPosts/65ef8f9937f7165b218bcc08",
          "publishedOn": "2024-03-11T23:11:21.000Z",
          "wordCount": 442,
          "title": "发布了: 决策力需要在高密度的决策中训练出来，也需要有承担相应决策后果的勇气，害怕犯错永远做不好未来，就连当下都是唯唯诺诺的。",
          "imageUrl": "https://cdnv2.ruguoapp.com/Fs-eSdFZY-o3eJCp506HPIEBqkXe?imageMogr2/auto-orient/heic-exif/1/format/jpeg/thumbnail/!120x120r/gravity/Center/crop/!120x120a0a0"
        },
        {
          "id": "https://m.okjike.com/originalPosts/65edcef712ed2fda68f5e342",
          "author": null,
          "description": "三四年过去了，再回头去看自己写的这篇文章，多了几分淡定，想对那个时候的自己说：“凡事慢慢来，不用悲观，也无需亢奋，很高兴地告诉你，当初的那个决定今天没有后悔，继续保持，向前走，走自己的路”。https://www.yuque.com/barretlee/thinking/wiwvy8",
          "link": "https://m.okjike.com/originalPosts/65edcef712ed2fda68f5e342",
          "publishedOn": "2024-03-10T15:17:11.000Z",
          "wordCount": 442,
          "title": "发布了: 三四年过去了，再回头去看自己写的这篇文章，多了几分淡定，想对那个时候的自己说：“凡事慢慢来，不用悲观，也无需亢奋，很高兴地告诉你，当初的那个决...",
          "imageUrl": "https://cdnv2.ruguoapp.com/Fs-eSdFZY-o3eJCp506HPIEBqkXe?imageMogr2/auto-orient/heic-exif/1/format/jpeg/thumbnail/!120x120r/gravity/Center/crop/!120x120a0a0"
        }
      ]
    },
    {
      "title": "李继刚的即刻动态",
      "feedUrl": "https://rsshub.app/jike/user/752D3103-1107-43A0-BA49-20EC29D09E36",
      "siteUrl": "https://m.okjike.com/users/752D3103-1107-43A0-BA49-20EC29D09E36",
      "articles": [
        {
          "id": "https://m.okjike.com/originalPosts/65fa5b02164d89e6018549da",
          "author": null,
          "description": "不知道\"轻言敬字\"是不是世界通病, 嘴上聊的时候, 满嘴跑火车好像非常轻松自然, 但当要白纸黑字写下来发出去的时候, 心紧手慢。\n于己而言，可养成一个习惯：每参加一次商业交谈，会后发送给对方你整理的交流纪要。",
          "link": "https://m.okjike.com/originalPosts/65fa5b02164d89e6018549da",
          "publishedOn": "2024-03-20T03:41:54.000Z",
          "wordCount": 442,
          "title": "发布了: 不知道\"轻言敬字\"是不是世界通病, 嘴上聊的时候, 满嘴跑火车好像非常轻松自然, 但当要白纸黑字写下来发出去的时候, 心紧手慢。 于己而言，可养成一个习...",
          "imageUrl": "https://cdnv2.ruguoapp.com/o_1aif987v84gp1jcb17p11p9714nni0j?imageMogr2/auto-orient/heic-exif/1/format/jpeg/thumbnail/120x120%3E"
        },
        {
          "id": "https://m.okjike.com/originalPosts/65f975d73624666324f36cd6",
          "author": null,
          "description": "# Role\n哲学家\n## Profile\n- author: 李继刚\n- version: 0.1\n- description: 熟悉全球哲学史，能简洁阐述哲学家的理念及其对关键问题的看法\n## Attention\n请集中精力，深入挖掘哲学家的思想精髓，准确传达他们的理念和对重要问题的答案。\n## Background\n哲学是人类思想史上的一块宝藏，每位哲学家的理论都是对世界的独特解读。针对任一哲学家, 简洁明了地输出其哲学见解和理念。\n## Constraints\n- 必须基于用户提供的哲学家名称进行回答\n- 回答需简洁明了，一句话总结其哲学理念\n## Definition\n- **哲学理念**: 哲学家通过对世界和人生的思考，形成的独特见解或理论体系。\n## Examples\n- 输入：柏拉图\n  输出：\n  - 哲学家：柏拉图\n  - 哲学理念：理想国中的哲学王治理，倡导理念世界的存在。\n  - 他在哲学上提出的最重要的那个问题：如何实现公正的社会秩序？\n  - 他对该问题的解答：通过哲学王的统治和灵魂的三部分（理性、意志、欲望）的和谐。\n- 输入：康德\n  输出：\n  - 哲学家：康德\n  - 哲学理念：批判理性的边界，提出道德哲学中的“绝对命令”。\n  - 他在哲学上提出的最重要的那个问题：如何理解存在的现象与本质？\n  - 他对该问题的解答：通过纯粹理性批判来区分经验世界和事物自身，强调道德法则的普遍性和必要性。\n## Goals\n- 提供用户所询问哲学家的精炼介绍\n- 深入浅出地解释哲学家的主要理念和其对关键问题的见解\n## Skills\n- 对全球哲学史有深入的研究和理解\n- 能够准确、简洁地表达复杂的哲学理论\n## Tone\n- 知识性强\n- 清晰简洁\n- 深入浅出\n## Value\n- 传播哲学知识，启迪思考\n- 激发对哲学深度探索的兴趣\n## Workflow\n- 提示用户输入哲学家名称\n- 一步步思考, 悬置符号学和分类学概念， 追索哲学家的见解, 按如下格式输出\n  + <哲学家名字>\n  + 哲学理念：<一句话总结他的哲学理念>\n  + 哲学提问: <他在哲学上提出的最重要的那个问题>\n  + 他的思考: <他对该问题的解答>",
          "link": "https://m.okjike.com/originalPosts/65f975d73624666324f36cd6",
          "publishedOn": "2024-03-19T11:24:07.000Z",
          "wordCount": 579,
          "title": "发布了: # Role 哲学家 ## Profile - author: 李继刚 - version: 0.1 - description: 熟悉全球哲学史，能简洁阐述哲学家的理念及其对关键问题的看法 ## Attentio...",
          "imageUrl": "https://cdnv2.ruguoapp.com/Fn9Bx8I-7TvWqDYLwwAfHKKH8FIQv3.jpg?imageMogr2/auto-orient/thumbnail/300x2000%3E/quality/70/interlace/1"
        },
        {
          "id": "https://m.okjike.com/originalPosts/65f903cb37f7165b213d3f46",
          "author": null,
          "description": "信息稀释作用: 信息接收方会将呈现的多个理由进行平均值计算的倾向。\n你夸奖一个人， 列了三个优点一个不重要的小缺点， 效果就不如只说三个优点要好。\n你送别人两瓶好酒再加两瓶可乐， 就远不如只送两瓶好酒。\n80 + 80 + 60 < 80 + 80\n反过来用, 如果你被要求表述缺点, 也可以在里面添加一个不那么重要的小缺点, 会稀释你的减分项。",
          "link": "https://m.okjike.com/originalPosts/65f903cb37f7165b213d3f46",
          "publishedOn": "2024-03-19T03:17:31.000Z",
          "wordCount": 483,
          "title": "发布了: 信息稀释作用: 信息接收方会将呈现的多个理由进行平均值计算的倾向。 你夸奖一个人， 列了三个优点一个不重要的小缺点， 效果就不如只说三个优点要好。 ...",
          "imageUrl": "https://cdnv2.ruguoapp.com/o_1aif987v84gp1jcb17p11p9714nni0j?imageMogr2/auto-orient/heic-exif/1/format/jpeg/thumbnail/120x120%3E"
        },
        {
          "id": "https://m.okjike.com/reposts/65f9011f37f7165b213cfe1a",
          "author": null,
          "description": "受罚不是因为曾经违规，而是因为失去了权力。不然连续几年造这么大的假，之前都发现不了？\n\n转发 @一颗发财瓜: 真大胆啊",
          "link": "https://m.okjike.com/reposts/65f9011f37f7165b213cfe1a",
          "publishedOn": "2024-03-19T03:06:07.000Z",
          "wordCount": 387,
          "title": "转发了: 受罚不是因为曾经违规，而是因为失去了权力。不然连续几年造这么大的假，之前都发现不了？",
          "imageUrl": "https://cdnv2.ruguoapp.com/o_1aif987v84gp1jcb17p11p9714nni0j?imageMogr2/auto-orient/heic-exif/1/format/jpeg/thumbnail/120x120%3E"
        },
        {
          "id": "https://m.okjike.com/originalPosts/65f80e5b3b9c66cae4fc36ca",
          "author": null,
          "description": "“你不会得到你应得的东西，你只会得到你通过谈判得到的东西。”\n━━\nChester Karrass",
          "link": "https://m.okjike.com/originalPosts/65f80e5b3b9c66cae4fc36ca",
          "publishedOn": "2024-03-18T09:50:19.000Z",
          "wordCount": 437,
          "title": "发布了: “你不会得到你应得的东西，你只会得到你通过谈判得到的东西。” ━━ Chester Karrass",
          "imageUrl": "https://cdnv2.ruguoapp.com/o_1aif987v84gp1jcb17p11p9714nni0j?imageMogr2/auto-orient/heic-exif/1/format/jpeg/thumbnail/120x120%3E"
        },
        {
          "id": "https://m.okjike.com/originalPosts/65f7e6c637f7165b21290ed2",
          "author": null,
          "description": "绘画和照片的区别是什么\n━━━━━━━━━━━━━━\n创作者： 现实 » 感觉 » 知觉 » 诠释(意义) » 作品\n观察者: 作品 » 感觉 » 知觉 » 诠释（意义）\n绘画, 完整走完了上述的创作者过程, 最终的作品包含了画师对他观察到的现实的理解和诠释。\n照片, 只是实现了 现实 » 作品, 缺少了人文的诠释。",
          "link": "https://m.okjike.com/originalPosts/65f7e6c637f7165b21290ed2",
          "publishedOn": "2024-03-18T07:01:26.000Z",
          "wordCount": 478,
          "title": "发布了: 绘画和照片的区别是什么 ━━━━━━━━━━━━━━ 创作者： 现实 » 感觉 » 知觉 » 诠释(意义) » 作品 观察者: 作品 » 感觉 » 知觉 » 诠释（...",
          "imageUrl": "https://cdnv2.ruguoapp.com/o_1aif987v84gp1jcb17p11p9714nni0j?imageMogr2/auto-orient/heic-exif/1/format/jpeg/thumbnail/120x120%3E"
        },
        {
          "id": "https://m.okjike.com/originalPosts/65f7a8a538849f879f404ffe",
          "author": null,
          "description": "广告变现效率正比于用户预期\n━━━━━━━━━━━━━\n最近在抖音上购物的频次远高于其它平台，反思了下原因: 刷短视频时看到广告更符合预期。\n- 展示广告（Banner Ads）： 明显不符合用户预期。用户预期是去网站看内容， 突兀的一个图片广告， 是种打扰，变现效率不高。\n- 搜索广告（Search Ads）： (部分）符合用户预期。用户预期是搜索关键词获得相关信息，广告相关性到位时，展示的广告可以是用户所需的信息（只是调整了展示顺序），变现效率较高。\n- 原生广告(Native Ads): 不符合用户预期。原生广告基于媒介信息形式进行设计，让广告长的和内容一模一样，比如朋友圈广告， 但在我看来，属于欺骗用户， 并没有针对用户预期来展示广告。\n- 短视频广告： 符合预期。刷短视频时，预期就是「看众生」，这个筐实在是太大， 很容易往里装广告。街头卖煎饼，是众生，也可以是广告。街边小店卖衣服，是众生，也可以是广告。",
          "link": "https://m.okjike.com/originalPosts/65f7a8a538849f879f404ffe",
          "publishedOn": "2024-03-18T02:36:21.000Z",
          "wordCount": 498,
          "title": "发布了: 广告变现效率正比于用户预期 ━━━━━━━━━━━━━ 最近在抖音上购物的频次远高于其它平台，反思了下原因: 刷短视频时看到广告更符合预期。 - 展...",
          "imageUrl": "https://cdnv2.ruguoapp.com/o_1aif987v84gp1jcb17p11p9714nni0j?imageMogr2/auto-orient/heic-exif/1/format/jpeg/thumbnail/120x120%3E"
        },
        {
          "id": "https://m.okjike.com/originalPosts/65f7a43c38849f879f3fe3ba",
          "author": null,
          "description": "大模型的对话每次都是独特的， 并不像互联网时代那样， 一个用户的搜索结果，可以在其它用户身上复用。\n那是不是意味着， 大模型的商业模式， 缺少了互联网产品的边际成本递减效应？",
          "link": "https://m.okjike.com/originalPosts/65f7a43c38849f879f3fe3ba",
          "publishedOn": "2024-03-18T02:17:32.000Z",
          "wordCount": 456,
          "title": "发布了: 大模型的对话每次都是独特的， 并不像互联网时代那样， 一个用户的搜索结果，可以在其它用户身上复用。 那是不是意味着， 大模型的商业模式， 缺少了互...",
          "imageUrl": "https://cdnv2.ruguoapp.com/o_1aif987v84gp1jcb17p11p9714nni0j?imageMogr2/auto-orient/heic-exif/1/format/jpeg/thumbnail/120x120%3E"
        },
        {
          "id": "https://m.okjike.com/originalPosts/65f64d263624666324b6a8bd",
          "author": null,
          "description": "六经注我读书法\n━━━━━━━━━━━━━━ \n受苏轼八面受敌读书法启发，总结了一个六经注我读书法，步骤如下：\n1/ 选定想要学习的主题。比如时间，哲学，prompt engineer等等，明确你当下最想学习的主题词。\n2/ 选定五六本书籍。选择标准：要么经典，要么前沿。经典书籍经历时间筛选，必有深意；前沿书籍经历科学探索，必有所破。\n3/ 写下疑惑。针对该主题，在翻开书籍之前，先把自己的疑惑明确写出来。比如：时间是什么？是固定的还是相对的？时间有方向吗？可以逆向吗？时间是一个维度吗？时空是一个维度吗？\n4/ 读书找答案。在读的过程中，始终盯着自己写下来的问题，看看这些书籍是否成功解答。\n5/ 总结收获。有些问题获得解答，记录下来。放入anki，写成博客，这是你的新知识块。有些问题没有答案，继续探索，可能突然某刻读到某句话，听到某句话就能受启发。\n作者有他的故事要讲，你有自己的疑惑要解决。\n六经注我读书法，在你心里打下栓马桩，读书时心定有获。",
          "link": "https://m.okjike.com/originalPosts/65f64d263624666324b6a8bd",
          "publishedOn": "2024-03-17T01:53:42.000Z",
          "wordCount": 480,
          "title": "发布了: 六经注我读书法 ━━━━━━━━━━━━━━ 受苏轼八面受敌读书法启发，总结了一个六经注我读书法，步骤如下： 1/ 选定想要学习的主题。比如时间，哲...",
          "imageUrl": "https://cdnv2.ruguoapp.com/o_1aif987v84gp1jcb17p11p9714nni0j?imageMogr2/auto-orient/heic-exif/1/format/jpeg/thumbnail/120x120%3E"
        },
        {
          "id": "https://m.okjike.com/originalPosts/65f3ebf512ed2fda686b3e6f",
          "author": null,
          "description": "如果将 Prompt 看作是编程语言\n━━━━━━━━━━━━━━━━━━\n编程语言的演进发展, 经历了 01 式打孔式编程, 汇编语言， C 语言, C++, Java, Go, Rust,  Python...\n这些语言的发展有一条比较清晰的脉络: 语言越来越\"简单\"。\n简单是指表达同样的一个想法， 使用的语言越来越接近自然语言（英文）。\n硬币的反面， 则是使用这些更高级的编程语言的程序员群体数目也在持续增长。\n那这个演进脉络发展到极致会是什么画面？ 自然语言即编程语言，人人皆是程序员。\n按这个推演再来看 ChatGPT： GPT 就像是编译器，Prompt 即为 AI 时代的编程语言。",
          "link": "https://m.okjike.com/originalPosts/65f3ebf512ed2fda686b3e6f",
          "publishedOn": "2024-03-15T06:34:29.000Z",
          "wordCount": 493,
          "title": "发布了: 如果将 Prompt 看作是编程语言 ━━━━━━━━━━━━━━━━━━ 编程语言的演进发展, 经历了 01 式打孔式编程, 汇编语言， C 语言, C++, Java, Go...",
          "imageUrl": "https://cdnv2.ruguoapp.com/o_1aif987v84gp1jcb17p11p9714nni0j?imageMogr2/auto-orient/heic-exif/1/format/jpeg/thumbnail/120x120%3E"
        },
        {
          "id": "https://m.okjike.com/originalPosts/65ddbb17de5f2873488309a3",
          "author": null,
          "description": "所谓工作，是为让自己对这个社会有所帮助而存在的。\n工作的本质就是帮助他人。\n--\n《100个工作基本》",
          "link": "https://m.okjike.com/originalPosts/65ddbb17de5f2873488309a3",
          "publishedOn": "2024-02-27T10:36:07.000Z",
          "wordCount": 435,
          "title": "发布了: 所谓工作，是为让自己对这个社会有所帮助而存在的。 工作的本质就是帮助他人。 -- 《100个工作基本》",
          "imageUrl": "https://cdnv2.ruguoapp.com/o_1aif987v84gp1jcb17p11p9714nni0j?imageMogr2/auto-orient/heic-exif/1/format/jpeg/thumbnail/120x120%3E"
        }
      ]
    },
    {
      "title": "国家应急广播 - 重庆预警信息",
      "feedUrl": "https://rsshub.app/cneb/yjxx/%E9%87%8D%E5%BA%86",
      "siteUrl": "http://www.cneb.gov.cn/yjxx",
      "articles": [
        {
          "id": "http://www.cneb.gov.cn/yjxx/huangsyj/20240319/t20240319_526632099.html",
          "author": "国家预警信息发布中心",
          "description": "忠县气象台2024年3月19日14时30分继续发布“大雾黄色预警信号”，预计3月19日23时至20日10时，忠州街道、白公街道、乌杨街道、新生街道、涂井乡、石宝镇、汝溪镇、金声乡、野鹤镇、磨子土家族乡、石子乡、复兴镇、东溪镇、黄金镇、永丰镇、花桥镇、三汇镇、马灌镇、官坝镇、金鸡镇、石黄镇、兴峰乡、白石镇、任家镇、双桂镇、拔山镇、洋渡镇、善广乡、新立镇可能出现能见度小于500米的雾，局地能见度小于200米。请以上各地注意防范大雾天气可能造成的影响。",
          "link": "http://www.cneb.gov.cn/yjxx/huangsyj/20240319/t20240319_526632099.html",
          "publishedOn": "2024-03-19T06:48:00.000Z",
          "wordCount": 523,
          "title": "重庆市忠县发布大雾黄色预警",
          "imageUrl": null
        },
        {
          "id": "http://www.cneb.gov.cn/yjxx/huangsyj/20240319/t20240319_526631739.html",
          "author": "国家预警信息发布中心",
          "description": "云阳县气象台2024年3月19日8时50分发布“大雾黄色预警信号”，预计未来6小时，云安镇、南溪镇、江口镇、鱼泉镇、沙市镇、双土镇、外郎乡、龙角镇、普安乡、凤鸣镇、宝坪镇、新津乡、养鹿镇、渠马镇、高阳镇、黄石镇、洞鹿乡、平安镇等乡镇将出现能见度小于500米的雾，局地能见度小于200米。请以上各乡镇注意防范大雾天气可能造成的影响。",
          "link": "http://www.cneb.gov.cn/yjxx/huangsyj/20240319/t20240319_526631739.html",
          "publishedOn": "2024-03-19T01:02:00.000Z",
          "wordCount": 523,
          "title": "重庆市云阳县发布大雾黄色预警",
          "imageUrl": null
        },
        {
          "id": "http://www.cneb.gov.cn/yjxx/huangsyj/20240319/t20240319_526631649.html",
          "author": "国家预警信息发布中心",
          "description": "秀山县气象台2024年3月19日6时40分发布“大雾黄色预警信号”，预计19日7时至12时，平凯街道、隘口镇、钟灵镇、清溪场街道、龙凤坝镇、膏田镇、溶溪镇、溪口镇、梅江镇、官庄街道、龙池镇、涌洞镇等乡镇街道可能出现能见度小于500米的雾，局地能见度小于200米。请以上各地注意防范大雾天气可能造成的影响。",
          "link": "http://www.cneb.gov.cn/yjxx/huangsyj/20240319/t20240319_526631649.html",
          "publishedOn": "2024-03-18T23:10:00.000Z",
          "wordCount": 523,
          "title": "重庆市秀山土家族苗族自治县发布大雾黄色预警",
          "imageUrl": null
        },
        {
          "id": "http://www.cneb.gov.cn/yjxx/huangsyj/20240319/t20240319_526631634.html",
          "author": "国家预警信息发布中心",
          "description": "忠县气象台2024年3月19日6时30分发布“大雾黄色预警信号”，预计19日6时至11时，忠州街道、白公街道、新生街道、乌杨街道、东溪镇、磨子土家族乡、涂井乡、复兴镇、石宝镇、野鹤镇、汝溪镇、金声乡、兴峰乡、黄金镇、官坝镇、石黄镇、金鸡镇、三汇镇、马灌镇、新立镇、花桥镇、双桂镇、拔山镇、白石镇、永丰镇、善广乡、任家镇、洋渡镇、石子乡可能出现能见度小于500米的雾，局地能见度小于200米。请以上各地注意防范大雾天气可能造成的影响。",
          "link": "http://www.cneb.gov.cn/yjxx/huangsyj/20240319/t20240319_526631634.html",
          "publishedOn": "2024-03-18T22:46:00.000Z",
          "wordCount": 523,
          "title": "重庆市忠县发布大雾黄色预警",
          "imageUrl": null
        },
        {
          "id": "http://www.cneb.gov.cn/yjxx/huangsyj/20240319/t20240319_526631631.html",
          "author": "国家预警信息发布中心",
          "description": "开州区气象局2024年3月19日06时30分发布“大雾黄色预警信号”，预计3月19日06时30分至12时，我区大部分乡镇（街道）将出现能见度小于500米的雾，局地能见度小于200米。提请注意防范大雾天气可能造成的影响。",
          "link": "http://www.cneb.gov.cn/yjxx/huangsyj/20240319/t20240319_526631631.html",
          "publishedOn": "2024-03-18T22:38:00.000Z",
          "wordCount": 523,
          "title": "重庆市开州区发布大雾黄色预警",
          "imageUrl": null
        },
        {
          "id": "http://www.cneb.gov.cn/yjxx/huangsyj/20240317/t20240317_526630103.html",
          "author": "国家预警信息发布中心",
          "description": "万州区气象台2024年3月17日16时30分发布“大雾黄色预警信号”，预计3月17日20时至18日10时，陈家坝街道、周家坝街道、五桥街道、新田镇等镇乡街可能出现能见度小于500米的雾，局地能见度小于200米。请以上各地注意防范大雾天气可能造成的影响。车辆驾驶及户外活动注意安全。机场、高速公路、水上交通等单位加强交通管理。相关部门和乡镇街道按照职责，做好大雾防范应对工作。",
          "link": "http://www.cneb.gov.cn/yjxx/huangsyj/20240317/t20240317_526630103.html",
          "publishedOn": "2024-03-17T08:38:00.000Z",
          "wordCount": 523,
          "title": "重庆市万州区发布大雾黄色预警",
          "imageUrl": null
        },
        {
          "id": "http://www.cneb.gov.cn/yjxx/csyj/20240317/t20240317_526629764.html",
          "author": "国家预警信息发布中心",
          "description": "秀山县气象台2024年3月17日8时发布“大雾橙色预警信号”，预计17日8时至20时，岑溪乡、中平乡、涌洞镇、雅江镇、洪安镇、大溪乡、峨溶镇、石堤镇、里仁镇、膏田镇、中和街道、溶溪镇、官庄街道、溪口镇、龙池镇、妙泉镇、宋农镇、海洋乡、钟灵镇、梅江镇、清溪场街道、隘口镇、兰桥镇、平凯街道、龙凤坝镇、石耶镇、乌杨街道可能出现能见度小于200米的雾，局地能见度小于50米。请以上各地注意防范大雾天气可能造成的影响。",
          "link": "http://www.cneb.gov.cn/yjxx/csyj/20240317/t20240317_526629764.html",
          "publishedOn": "2024-03-17T00:42:00.000Z",
          "wordCount": 523,
          "title": "重庆市秀山土家族苗族自治县发布大雾橙色预警",
          "imageUrl": null
        },
        {
          "id": "http://www.cneb.gov.cn/yjxx/csyj/20240315/t20240315_526628690.html",
          "author": "国家预警信息发布中心",
          "description": "秀山县气象台2024年3月15日23时发布“大雾橙色预警信号”，预计3月15日23时至16日12时，平凯街道、膏田镇、龙凤坝镇、隘口镇、钟灵镇、清溪场街道、梅江镇、岑溪乡、官庄街道、涌洞镇、龙池镇、大溪乡、溶溪镇、溪口镇等乡镇街道的部分山区可能出现能见度小于200米的雾，局地能见度小于50米。请以上各地注意防范大雾天气可能造成的影响。",
          "link": "http://www.cneb.gov.cn/yjxx/csyj/20240315/t20240315_526628690.html",
          "publishedOn": "2024-03-15T15:17:00.000Z",
          "wordCount": 523,
          "title": "重庆市秀山土家族苗族自治县发布大雾橙色预警",
          "imageUrl": null
        }
      ]
    },
    {
      "title": "Epic Games Store - Free Games",
      "feedUrl": "https://rsshub.app/epicgames/freegames/zh-CN",
      "siteUrl": "https://store.epicgames.com/zh-CN/free-games?lang=zh-CN",
      "articles": [
        {
          "id": "https://store.epicgames.com/zh-CN/p/the-bridge",
          "author": "The Quantum Astrophysicists Guild",
          "description": "《The Bridge》是一款挑战玩家对物理和观察视角的固有印象的逻辑解谜游戏。犹如埃舍尔邂逅艾萨克牛顿。控制重力，将地面化作天花板，穿过物理上不可能的建筑群。\n\nFree Now to 2024-03-21T15:00:00.000Z",
          "link": "https://store.epicgames.com/zh-CN/p/the-bridge",
          "publishedOn": "2024-03-14T15:00:00.000Z",
          "wordCount": null,
          "title": "《The Bridge》",
          "imageUrl": null
        },
        {
          "id": "https://store.epicgames.com/zh-CN/p/deus-ex-mankind-divided-4c6370",
          "author": "Eidos Interactive Corporation",
          "description": "Now an experienced covert operative, Adam Jensen is forced to operate in a world that has grown to despise his kind. Armed with new state-of-the-art weapons and augmentations, he must choose the right approach, along with who to trust, to unravel a vast worldwide conspiracy.\n\nFree Now to 2024-03-21T15:00:00.000Z",
          "link": "https://store.epicgames.com/zh-CN/p/deus-ex-mankind-divided-4c6370",
          "publishedOn": "2024-03-14T15:00:00.000Z",
          "wordCount": null,
          "title": "Deus Ex - Mankind Divided",
          "imageUrl": null
        }
      ]
    },
    {
      "title": "掘金前端本周最热",
      "feedUrl": "https://rsshub.app/juejin/trending/frontend/weekly",
      "siteUrl": "https://juejin.im/frontend?sort=weekly_hottest",
      "articles": [
        {
          "id": "https://juejin.cn/post/7347957960884355113",
          "author": "冴羽",
          "description": "本文为稀土掘金技术社区首发签约文章，30天内禁止转载，30天后未获授权禁止转载，侵权必究！\n前言\n所谓乐观更新，举个例子，当用户在 ToDoList  中添加一项 ToDo 的时候，传统的做法是等待接口返回成功时再更新 UI。乐观更新是先更新 UI，同时发送数据请求。如果数据请求成功，相安无事，用户感受到流畅的操作，提升了用户体验，数据也得到更新。如果更新失败，则视情况对错误进行处理。\n一种交互效果如下：\n\nReact 为了实现乐观更新，提供了 useOptimistic 这个官方 hook（目前已经在 Canary 和实验阶段了），本篇我们不仅会介绍 useOptimistic，还会用 Next.js v14，结合最新的 Server Actions 特性来实现乐观更新。\n同时我们会讲解在出现错误的时候，如何进行撤回或者重置。以及处理一个有意思的问题：乐观更新的时候，用户要关闭网页怎么办？\nPS：其实乐观更新并不是一个新潮的思想，很多年前就有人开始做了，但是大家普遍不会去实现乐观更新，一是产品、设计不会过多考虑网速慢的情况，二是就算手动实现乐观更新，虽然并不复杂，但是有一些麻烦，接口那么多，我都加个乐观更新，代码写着写着也可能乱糟糟了，何必去实现呢？\n归根到底还是实现成本太高。所以 本篇会结合 Next.js 和 useOptimistic 讲解如何低成本并考虑全面的实现一个乐观更新。 欢迎收藏点赞本篇文章，万一以后用到了呢？如果有关于乐观更新的经验和看法，欢迎留言评论！\nPS：学习 Next.js，欢迎入手小册《Next.js 开发指南》。基础篇、实战篇、源码篇、面试篇四大篇章带你系统掌握 Next.js！\n废话不多说，让我们直接开始吧！\n创建 Next.js 项目\n使用 Next.js 官方脚手架创建项目：\nnpx create-next-app@latest\n\n运行…",
          "link": "https://juejin.cn/post/7347957960884355113",
          "publishedOn": "2024-03-19T10:03:43.000Z",
          "wordCount": 3883,
          "title": "Next.js v14 实现乐观更新，面向未来的 UI 更新方式，你可以不去做，但你不应该不了解",
          "imageUrl": null
        },
        {
          "id": "https://juejin.cn/post/7347668506244349992",
          "author": "一只韩非子",
          "description": "大家好，我是喜欢折腾，热爱分享的“一只韩非子”。\n会编程的韩非子\nHanfz0712\n问答群/知识交流群，一起交流技术难题与未来，让我们Geek起来！\n因为是后端Boy，所以IDE一直用的都是IntelliJ IDEA。用过IDEA的都知道，在后端开发人员眼中那可是能够相比屠龙宝刀的神器。从代码提示到源码查看，从引用跳转到全局搜索那可谓是无所不能。\n\n插件推荐\n那么再开始使用的时候，就必然要上我们非常重要的插件了，很多人使用VSCode最重要的的一个因素也就是插件生态太丰富了，没有你找不到的，只有你想不到的。\n1.Chinese (Simplified) (简体中文) Language\n其实在使用IDEA的时候我是非常喜欢使用英文版的，对中文反而嗤之以鼻，那是因为很多专业的英文词一被翻译成中文反而没那个味了，有时甚至我都不知道这个中文的东东到底是个什么。所以还是比较喜欢原汁原味的。但是来到了VSCode，不好意思，真不太熟，不翻译下还真不知道是干嘛的，直接两级反转了。所以在一开始前期的学习还是有必要本地化一下的。这个插件也是微软官方出品的，应该不会有很奇怪的翻译，所以大家可以放心食用。\n\n2.One Dark Pro\nIDE好不好看决定了我们一半的生产力。鲁迅曾说过：不好看的IDE我不用~于是谨遵鲁迅先生的话，我势必要找一个好看的主题。又是经过一番检索，找到了One Dark Pro这个插件，里面的主题还真不错!我目前使用的是其中的One Dark Pro Flat.换一个美美的主题，感觉一天能写两倍的bug了呢。\n\n\n3.vscode-icons\n这一个插件是用来美化我们的文件图标的，而且让文件的类型更加容易得被辨识。比如，js文件会有一个js标识，vue组件前面会有一个官方的logo等，也是非常推荐的。\n\n4.Git Graph\n这个插件可是强推安装哈，是用来通过可视化界面，查看git的提交记录历史和查看git分支之间的关系的，非常有利于我们来梳理各个分支之间的关系。看一下是谁把代码合到了我的分支，让我的分支报错了，哈哈。\n\n5. IntelliJ IDEA Key Bindings\n如果你还留恋IDEA的快捷键，那么这个插件可以帮你回忆你们之间美好的时光。它可以将VSCode默认的快捷键修改为IDEA的，我想大多数人应该使用不对到的，但还是推荐下，可能还是有很多恋旧的好兄弟。\n\n相信有了这些插件的强力加持，能够让我和你们在VSCode开发中游刃有余。插件安装好了，剩下的就是起航了。接下来我也会慢慢的去更多的使用VSCode，看下能不能将WebStorm给完全替代，兄弟们，祝我好运。\n\nWebStorm：终究还是不爱了吗(╥╯^╰╥)\n小韩：好兄弟，我会想你的。等我用尽力了力气还是走不进code的心，我会回来找你的。（好渣啊0.0）",
          "link": "https://juejin.cn/post/7347668506244349992",
          "publishedOn": "2024-03-18T16:13:34.000Z",
          "wordCount": 713,
          "title": "我为什么从WebStorm换到了VSCode？",
          "imageUrl": null
        },
        {
          "id": "https://juejin.cn/post/7347279011653402659",
          "author": "芝士加",
          "description": "开篇之前，先提两个问题：\n你知道 Radash 吗？\nRadash 会取代 Lodash 吗？\n认识 Radash\n相信大家都知道Lodash, 这个 JavaScript 工具库从2012至今，已经存在长达12年的时间，它在github上的 star 数超过 58.6k， 在 npm 上每周的下载量已超过 5200 万。\n最初，Lodash 的运行情况很好，帮助开发人员编写了简洁、可维护的 JavaScript 代码。然而，由于近两年没有针对最新 JavaScript 函数进行重大更新，开发人员在使用 Lodash 时开始面临一些挑战，在这样的背景下，Radash 应运而生，以其现代化的特性和对TypeScript的友好支持，逐渐成为开发者的新宠。\n在本文中，我将详细讨论 Lodash 中的问题以及 Radash 如何解决这些问题，从而回答提出的问题：Radash 会取代 Lodash 吗？\nLodash 面临的问题\n随着 JavaScript 语言的不断进化和新特性的引入，Lodash 的一些功能开始显得不再那么必要。\nLodash 函数过时了\n随着ES6及后续版本的推出，JavaScript 引入了许多新的语言特性，如可选链(?.)和空值合并(??)，使得一些 Lodash 的函数显得多余。\n在 ES6 之前，如果你想安全地访问对象的嵌套属性，可以使用 Lodash 的 _.get 函数来避免可能的 undefined 错误。例如：\n// 假设我们有一个对象，我们想访问 `a.b.c` 属性 \nconst obj = {\n    a: {\n        b: {\n            c: 'Hello' \n        } \n      } \n}; \n// 使用 Lodash 的 _.get 来安全地获取值 \nconst value = _.get(obj, …",
          "link": "https://juejin.cn/post/7347279011653402659",
          "publishedOn": "2024-03-18T02:44:06.000Z",
          "wordCount": 1681,
          "title": "Lodash已过时，试试它吧！",
          "imageUrl": null
        },
        {
          "id": "https://juejin.cn/post/7347221074704777226",
          "author": "XboxYan",
          "description": "theme: fancy\nhighlight: agate\n本文为稀土掘金技术社区首发签约文章，30天内禁止转载，30天后未获授权禁止转载，侵权必究！\n欢迎关注我的公众号：前端侦探\n介绍一个CSS检测文本溢出的小技巧。\n一直以来，CSS 都无法很好的检测出一段文本是否溢出。但这又是一个非常普遍的需求，比如多行文本展开，展开按钮只有在文本溢出的时候才出现\n\n由于无法直接CSS判断，这使得不得不借助 JavaScript或者CSS奇技淫巧来实现，之前提到了不下于3种不同的思路来解决这个问题，在以下这些文章中都有提到\ndom 获取不到？试试 CSS 动画监听元素渲染吧\n尝试借助CSS @container实现多行文本展开收起\n突发奇想！借助CSS自定义彩色字体来实现多行文本展开收起\nCSS 实现多行文本“展开收起”\nCSS 文本超出提示效果\n有兴趣的可以回顾一下，还是挺有意思的\n时代在进步，CSS也在不断推出新特性，现在，CSS终于可以完美的解决这个问题了，也就是可以准确无误地判断文本是否溢出了，一起看看吧\n一、CSS 滚动驱动动画\n要实现文本溢出检测，需要用到两个新特性\nCSS 滚动驱动动画\nCSS 样式查询\n为什么是这两个呢？听我慢慢分析。\n首先我们想一想，在 JS中是如何判断是否溢出的？很简单\ndom.scrollHeight > dom.offsetHeight;\n\n其实也就是表示这个容器是“可滚动”的，因为滚动高度超过了可视高度\n\n回到 CSS 这里，有没有办法区分呢？答案就是CSS滚动驱动动画\n关于 CSS 滚动驱动动画，可以先回顾这篇文章：CSS 滚动驱动动画终于正式支持了~ \n假设有这样一个布局，就两段文本\n<div class=\"txt\">\n  欢迎关注前端侦探，这里有一些有趣的、你可能不知道的HTML、CSS、JS小技巧技巧。欢迎关注前端侦探，这里有一些有趣的…",
          "link": "https://juejin.cn/post/7347221074704777226",
          "publishedOn": "2024-03-18T02:19:01.000Z",
          "wordCount": 2172,
          "title": "纯 CSS 检测文本是否溢出",
          "imageUrl": null
        },
        {
          "id": "https://juejin.cn/post/7346510823772733494",
          "author": "粥里有勺糖",
          "description": "theme: smartblue\n在线 Demo 体验地址 →: https://demos.sugarat.top/pages/png-compress/\njcode\n前言\n最近在迭代自己的 图床 应用，由于使用时间的累计，存储空间占用越来越大了，在做 Web 应用的时候会随手拿 tinypng 压缩一下图片。\n想着给咱图床也加个压缩的功能，这样上传/访问也能省点 💰。\n\n图片类型众多，常用的主要就是PNG/JPG/GIF。\n个人使用频率最高的场景是截图上传，格式为PNG，就先拿 PNG 试手。调研了一圈开源里最流行的就是使用 UPNG.js 进行 PNG 的压缩。\n官方对比 tinypng 介绍；\n官方在线示例 Demo。\n如何判断图片是 PNG\n第一步当然是判断图片类型，不然 UPNG.js 就不能正常工作咯，通过文件后缀 .png 判断肯定是不靠谱的。\n搜索了解了一下，可以使用 魔数 判断：一个PNG文件的前8个字节是固定的。\nPNG 的前 8 个字节是（16进制表示）：89 50 4E 47 0D 0A 1A 0A。\n我们可以拿工具看一下，我这里用 VS Code 插件 Hex Editor 查看一个 PNG 图片的 16 进制表示信息。\n\n可以看到前八个字节和上面表示的一样。\n于是可以根据这个特性判断，于是就有如下的判断代码。\nasync function isPNG(file: File) {\n  // 提取前8个字节\n  const arraybuffer = await file.slice(0, 8).arrayBuffer()\n\n  // PNG 的前8字节16进制表示\n  const signature = [0x89, 0x50, 0x4E, 0x47, 0x0D, 0x0A, 0x1A, 0x0A]\n  // const signature =…",
          "link": "https://juejin.cn/post/7346510823772733494",
          "publishedOn": "2024-03-16T13:02:32.000Z",
          "wordCount": 1673,
          "title": "纯前端实现 PNG 图片压缩 | UPNG.js",
          "imageUrl": null
        },
        {
          "id": "https://juejin.cn/post/7346524071183630355",
          "author": "疯犬丨哈士奇",
          "description": "先写总结，这次面试寄了，而且哈士奇没有坚持过二十分钟。。。\n说说自己整个面试的过程，首先哈士奇海投简历，本以为大厂会直接筛掉哈士奇的简历，没想到直接就给过了，还很快给哈士奇发邮件通知。\n\n所以先走到了测评这一关，简直一言难尽\n测评题\n腾讯的测评题目分为三个部分\n第一部分55题   逻辑题\n第二部分35题   情景题\n第三部分25题   IQ题\n逻辑题\n逻辑题主要是考察反驳能力，比如说应该如何对其他人说的话进行反驳\n比如：\n有人说“朋友的劝谏是行动的预防针”针对这段话你应该如何反驳\nA.\nB.\nC.\nD.\n具体的忘记了，大致是这个样子\n情景题\n考情商  个人认为还会对于自身行为考察\n假如你隔壁组的人碰到了一个你们组碰到的问题，这时候你们组的项目进行到了最后的阶段，这时候你会？\nA. 写一个文档，给他们学习\nB. 帮他们解决问题\nC. 派人帮他们解决问题\nD. 等项目解决了再帮他们解决\nIQ题\n纯考行测 比如几张图片选出最合适的  三个名词的规律找到最适合的名词  小学常考的两个管子放水，一个管子出水\n最后的计算量还挺大，建议大家提前准备准备刷刷\n总结\n测试题的占比不会太高，基本上正常写都可以进入下一步的初试\n初试\n电话面  给我感觉腾讯是一个非常高效的部门，不需要自我介绍，直接开始拷打项目，问东西。\n哈士奇大致经过了几个过程 计算机网络基础知识和项目阶段  因为项目难点少，直接在这块被毙了。\n计算机网络基础知识\n1.用户在浏览输入地址到页面渲染完成的过程\n当用户在浏览器中输入地址并按下回车键时，浏览器会执行以下步骤来加载并渲染页面：\n地址解析：浏览器解析输入的地址，如果输入的是一个 URL，浏览器会分解 URL，确定要访问的服务器和路径。\nDNS 解析：浏览器向 DNS 服务器发送请求，获取输入域名对应的 IP 地址。\n建立连接：浏览器使用 HTTP 协议向服务器发送请求，并…",
          "link": "https://juejin.cn/post/7346524071183630355",
          "publishedOn": "2024-03-16T05:24:08.000Z",
          "wordCount": 880,
          "title": "哈士奇的一周面经：腾讯某部门前端开发",
          "imageUrl": null
        },
        {
          "id": "https://juejin.cn/post/7346481513541484579",
          "author": "程序员大澈",
          "description": "大家好，我是大澈！\n本文约700+字，整篇阅读大约需要1分钟。\n关注微信公众号：“程序员大澈”，免费加入问答群，一起交流技术难题与未来！\n现在关注公众号，免费送你 ”前后端入行大礼包“ ，包含了：前后端面试题、面试技巧、简历模版、前后端学习路线图、前后端全技术栈学习笔记。\n1. 资讯速览\n因为个人开发使用 IDEA 比较多，而 VSCode 相对用的少点了。\n但就在前两天，我打开 VSCode 后，系统给我弹出来这么一个消息。\n\n关闭消息之后，紧接着又给我自动打开一个叫 Vue-Official 的插件主页。当时我看到还有点懵，想着这是个啥玩意，我也没记得自己安装过呀。\n\n于是，我打开所有插件一瞧，才发现我们Vue3旧语言工具 Volar 退了，一个更加强大的Volar升级版，Vue-Official 来了！\nVolar 正式升级更名为 Vue-Official ！\n\n2. 资讯详细\n不多说废话，先简单列一下我们用得到的 Vue-Official 新特性，最后做小结。\n2.1 Vue-Official新特性\n支持通过鼠标拖拽来导入组件，告别手动引入！\n操作步骤：按住鼠标左键，把组件拖拽到想要引入的地方，VSCode 会提示按住 shift 放入编辑器中，此时我们按 shift 并放开鼠标左键，即可自动导入组件。\n\n然后就是，全面支持 Vue 3.4 新语法特性。\n例如：Vue3.4 中增加了属性同名简写的的写法，之前这么用的话，Volar 会报错，现在在 Vue-Official 中得到支持。\n<!-- 原写法 -->\n<List :data=\"data\" />\n<!-- 新写法 -->\n<List :data />\n\n2.2 小结\nVue3旧语言工具 Volar 退了，一个更加强大的Volar升级版，Vue-Official 来了！\nVolar 正式升级更名为 Vue-Official ！\n看到这里的朋友们，赶快去把其它Volar伴生插件卸载掉，把新版用起来吧！\n结语\n我是大澈，一个喜欢交朋友、喜欢分享、喜欢搞钱的90后小伙。\n文章主分享前后端功能问题实现、次分享技术资讯、实用干货。\n遇到技术难题，在问答群里与众多同行朋友一起讨论成长。\n关注微信公众号：“程序员大澈”，免费加入问答群，一起交流技术难题与未来！\n现在关注公众号，免费送你 ”前后端入行大礼包“ ，包含了：前后端面试题、面试技巧、简历模版、前后端学习路线图、前后端全技术栈学习笔记。",
          "link": "https://juejin.cn/post/7346481513541484579",
          "publishedOn": "2024-03-15T14:42:01.000Z",
          "wordCount": 783,
          "title": "技术资讯：Volar正式更名为Vue-Official",
          "imageUrl": null
        },
        {
          "id": "https://juejin.cn/post/7346430299490189348",
          "author": "Dolphin_海豚",
          "description": "theme: vuepress\nhighlight: atelier-dune-dark\n前言\n经常我们会被面试官问，账号密码被修改了怎么办，这就涉及到token了。假设我在淘宝网站登录了账号进入首页，然后我在另一个设备上同样登录该账号，并且将密码修改，原设备刷新数据会被退出登录，这个过程的实现就需要借助token。token翻译过来是令牌的意思\ntoken的实现一定是需要你有登录页面，其他页面，以及后端，本文有点长，因为是手把手教，小白可以放心食用\n准备工作\n前端简单写两个页面，一个登录页，一个首页\n前端\nnpm create vite@latest client -- --template vue\ncd client\nnpm i \nnpm i vue-router@4 \nnpm i vant  // 安装vant\nnpm i axios \n\n路由\nimport { createWebHistory, createRouter } from 'vue-router'\n\nconst routes = [\n    {\n        path: '/login',\n        component: () => import('../views/Login.vue')\n    },\n    {\n        path: '/home',\n        component: () => import('../views/Home.vue') \n    }\n]\n\nconst router = createRouter({\n    history: createWebHistory(),\n    routes: routes\n})\n\nexport default router\n\n登录页\n借助vantUI，用他的按钮和输入框\n自行引入样式~\n<template>\n    <di…",
          "link": "https://juejin.cn/post/7346430299490189348",
          "publishedOn": "2024-03-15T11:07:43.000Z",
          "wordCount": 3286,
          "title": "全栈项目？那你说说你的token怎么实现的吧",
          "imageUrl": null
        },
        {
          "id": "https://juejin.cn/post/7346148341385642023",
          "author": "IT咖啡馆",
          "description": "近几年越来越多的企业开始尝试低代码，希望可以让非专业的用户不写代码或少量代码的情况下，也能构建自己的应用。\n今天我们来推荐一个开源低代码平台，帮助工程师节省上百小时的时间去构建工作流类的应用， 目前在GitHub已超过20K Star，他就是：budibase 。\n\nbudibase 是什么?\nBudibase 是一个一体化的低代码平台，用于构建、设计和自动化业务应用程序，例如；管理面板、表单、内部工具、客户门户等。在 Budibase 出现之前，开发人员可能需要数周时间才能构建简单的 CRUD 应用程序；借助 Budibase，构建 CRUD 应用程序只需几分钟。\n\nBudibase简化整个实现的流程，你不需要有必要的编程技巧，但它也提供了一些灵活性，让你在一定程度上定制应用。\n它支持一系列的数据源：MySQL、Rest API、OracleDB、MongoDB、Google 表格等。\n\n还可以选择自托管并在你的服务器上部署应用，或者利用 Budibase 的云托管服务。\n部署 budibase\n可以选使用Docker自己部署或者使用budibase cloud的SAAS服务。\nDocker部署\n尝试 Budibase 映像的最简单方法是使用 docker run 命令，最基本的版本是：\ndocker run -d -t \\\n  --name=budibase \\\n  -p 10000:80 \\\n  -v /local/path/data:/data \\\n  --restart unless-stopped \\\n  budibase/budibase:latest\n\n此命令将在您的系统上启动一个 Budibase 容器，然后您可以在 http://localhost:10000 上连接到该容器。这里需要注意一点，就是命令里包含了一个外挂存储，需要提前准备好。就是把 /lo…",
          "link": "https://juejin.cn/post/7346148341385642023",
          "publishedOn": "2024-03-15T04:59:23.000Z",
          "wordCount": 1018,
          "title": "2万星！开源低代码平台，帮你节省数百小时的工作",
          "imageUrl": null
        },
        {
          "id": "https://juejin.cn/post/7346121373112811583",
          "author": "石小石Orz",
          "description": "theme: smartblue\n需求简介\n最近接了一个需求，需要实现不同登录人员可以自定义首页模块卡片。简单来说，就是实现首页看板模块的增添与拖拉拽，效果如下：\n\n技术选型\n原生js是支持拖拉拽的，只需要将拖拽的元素的 draggable 属性设置成 \"true\"即可，然后就是调用相应的函数即可。\n拖拽操作 - Web API 接口参考 | MDN\n但是，原生js功能不够完善，使用起来需要改造的地方很多，因此，选用成熟的第三方插件比较好。\n我们的主项目采用的是vue3，,经过一系列对比，最终选择了 vue-draggable-next这个插件。\nvue-draggable-next\nvue-draggable-next的周下载量月3万左右，可以看出是一个比较靠谱的插件。\n\n它的使用方式npmj上也介绍的很详细：\nvue-draggable-next\n如果英文的使用Api看起来比较难受，网上还有中文的使用文档：\nvue.draggable.next 中文文档 - itxst.com\n这个插件也有vue2版本和纯js版本，其他框架也是也是可以完美使用的。\n实现思路\n需求与技术简析\n根据我们的需求，我们应该实现的是分组拖拽，假设我们有三列，那我们要实现的就是这A、B、C三列数据相互拖拽。\n\n我们看看中文官网给的示例：\nvue.draggable.next group 例子\n看起来很容易，我们只需要写多个draggable标签，每个draggable标签写入相同的组名即可。\n实现方案\n框架实现\n回到代码中，要想实现一个三列可拖拉拽的模块列表，我们首先需要引入组件\n<script lang=\"ts\" setup>\nimport { VueDraggableNext } from 'vue-draggable-next'\n// ....\n</script>\n\n然后定义一个数组储存数据…",
          "link": "https://juejin.cn/post/7346121373112811583",
          "publishedOn": "2024-03-15T03:30:59.000Z",
          "wordCount": 1659,
          "title": "如何丝滑的实现首页看板拖拉拽功能？",
          "imageUrl": null
        },
        {
          "id": "https://juejin.cn/post/7345828305490935843",
          "author": "一纸忘忧",
          "description": "Shiki 是一个使用 TextMate 语法和主题的语法高亮器，与 VS Code 使用相同的引擎。它为您的代码片段提供了最准确、最美观的语法高亮。Pine Wu 于 2018 年在 VS Code 团队期间创建了它，最初是为了使用 Oniguruma 进行语法高亮。\n与在浏览器中运行的 Prism 和 Highlight.js 等现有语法高亮器不同，Shiki 采用了预高亮的方式。它将高亮后的 HTML 发送到客户端，无需 JavaScript 即可产生准确、美观的语法高亮。很快，它便成为了一个非常受欢迎的选择，尤其是用于静态网站生成器和文档网站。\n尽管 Shiki 很出色，但它仍然是一个设计在 Node.js 上运行的库。这意味着它仅限于高亮静态代码，对于动态代码则会有问题，因为 Shiki 不能在浏览器中运行。此外，Shiki 依赖于 Oniguruma 的 WASM 二进制文件以及 JSON 格式的多个重型语法和主题文件。它使用 Node.js 的文件系统和路径解析来加载这些文件，这在浏览器中是无法访问的。\n为了改善这种情况，Anthony Fu 开始了这项 RFC，后来以 PR 的形式发布并应用于 Shiki v0.9。虽然它将文件加载层抽象为根据环境使用 fetch 或文件系统，但使用起来仍相当复杂，因为需要在包或 CDN 中手动提供语法和主题文件，然后调用 setCDN 方法告诉 Shiki 从哪里加载这些文件。\n虽然这个解决方案并不完美，但至少使 Shiki 能够在浏览器中运行以高亮动态内容。从那时起，大家一直在使用这种方法，直到本文故事的开始。\n\nShiki 的开始\nNuxt 正在积极推动 Web 发展，以降低延迟、提高性能，使 Web 更加便捷。与 CDN 服务器类似，Cloudflare Workers 等边缘托管服务遍布全球。用户可以从最近的边缘服…",
          "link": "https://juejin.cn/post/7345828305490935843",
          "publishedOn": "2024-03-14T06:44:11.000Z",
          "wordCount": 1497,
          "title": "前端大神 Anthony Fu 新作：Shiki v1.0 重磅发布！",
          "imageUrl": null
        },
        {
          "id": "https://juejin.cn/post/7345836282066960435",
          "author": "sAnL1ng",
          "description": "theme: smartblue\n前言\n目前大三，这是诸多面试中的第二个面试，也是拿到的第一个offer，不过确实小厂中薪资算给的最高的一个，而且这次的面试官给我的不是压迫感而是一位大佬正在耐心指导。聊到我不了解的地方，我就会虚心请教一下面试官可否讲解一下，比如一些之前没接触过的公司业务类知识，面试官就会很用心地结合八股给我科普讲解，这一次面试其实我收获了还是蛮多东西的。\n面试了这么多天，觉得一个人的力量还是太过薄弱，如果你和我一样有向前冲的勇气，欢迎掘友们私聊我交流面经（wechat: sAnL1ng）\n自我介绍\n一上来，依旧是亘古不变的定律，就像校园时期甜甜的恋爱，彼此都从相互了解开始，然后再决定是否选择对方。\n这里可以参考我的上一篇文章，按照这个模板来介绍自己，因人而异。\n【面试官：这26分钟感觉身体被掏空】\n一、聊聊vue2和vue3中响应式处理数据的不同\n面试官听到我自我介绍说到熟悉vue全家桶，于是上来先探探底，看似问vue2和vue3的区别，其实是想看看你对这两者的底层了解多深 ，依旧是面经，结合我学习源码时的总结，一套高输出爆发给到面试官：\nvue2中采用的是Object.defineProperty和原生的getter和setter方法，当我们初始化一个数据data的时候，会实例化一个Observe类，首先它会迭代遍历data中的每一个属性，并通过Object.defineProperty给遍历到的每一个属性添加上getter和setter方法,当属性被读取的时候就会触发getter方法进行依赖(Wather)收集,当属性被修改的时候就会触发setter方法进行依赖(Wather)触发。（但是，光靠这些方法并不能建立完全的响应式数据与依赖之间的关系，这种办法效率低、功能弱。当我们使用Object.defineProperty()来进行数据劫持，只有当数据被…",
          "link": "https://juejin.cn/post/7345836282066960435",
          "publishedOn": "2024-03-14T05:56:31.000Z",
          "wordCount": 1168,
          "title": "小厂一面：30分钟速通，拿下一血！",
          "imageUrl": null
        },
        {
          "id": "https://juejin.cn/post/7345821800880324671",
          "author": "何遇er",
          "description": "面试的业务是字节-千川，职级是 2-2，技术面一共 3 轮，每一面都要手写算法。我在 2023 年 7 月下旬被裁员，于 2024 年 2 月初面试字节-千川，没有通过第 3 轮面试，在这里记录下当时的面试问题，希望帮到大家\n第一轮面试\n首先是自我介绍，主要介绍在任职的公司落地了低代码平台和用户操作记录回溯，还向开源项目 rrweb 提交了两个PR，最后是公司的插件化架构。\n自我介绍完毕，面试官的第一个问题是，为什么离职？我因为被裁而离职，如实回答了，之后每一轮面试官都会询问什么被裁，另，由于我从离职到面试字节中间隔了7个月左右，面试官还重点关注了，离职之后在做什么。离职之后，我首先回家休息了近 1 个月，旅游了近 2 个月，然后写书花了 1 个多月，到 11 底开始找工作，这没什么好隐瞒的，如实告知了面试官。\n第一轮主要面试 JS 和 React基础知识，问题如下：\n在 js 中有浮点数运算不正确的时候，比如 0.1 + 0.2 不等于 0.3 这是什么原因，要怎么解决\n对 webpack 有了解吗，我看你在做低代码\nwebpack中 loader 与 plugin 有什么区别\n有没有写过 plugin\n我们写代码的时候是 es6，浏览器运行的时候是 es5，在做代码转化的时候，webpack 帮我们做了什么事情\n在 React 类组件中，为什么修改状态要使用 setState 而不是用 this.state.xxx = xxx\nsetState 函数做了哪些事情\nReact 生命周期 commpoentWillUnMount() 对应的 hooks 要怎么写\nuseState 的原理是什么，背后怎么执行的，它怎么保证一个组件中写多个 useState 不会串\n函数组件重新渲染的时候怎么拿到useState之前的状态，而不是得到初始化的状态\nReact为什么要自定义合成事…",
          "link": "https://juejin.cn/post/7345821800880324671",
          "publishedOn": "2024-03-14T04:11:19.000Z",
          "wordCount": 1169,
          "title": "字节跳动面试记录",
          "imageUrl": null
        },
        {
          "id": "https://juejin.cn/post/7345725753018236947",
          "author": "某时橙",
          "description": "theme: vuepress\n写在前面\n大家好，我是时橙～\n本文为新式响应式系统的解析，该pr已被正式合并入minor分支，如果解析有不到位的地方，望各位提表建议。\n阅读有一定门槛，需要对响应式系统依赖追踪有一定了解\n本次重构来源于尤雨溪的本次pr ⬇️\nhttps://github.com/vuejs/core/pull/10397\n新·响应式系统带来的收益\n解决了几个bugs #10290 #10069\n更高效的内存使用，基准测试提升56%\n更合理的computed行为\n....\n正文\n现在的订阅者(Subscriber)和依赖（dep）的抽象关系长什么样？\n\n现在看不懂这个图谱没有关系，后续我们再解释这个表式什么意思\nLink是什么东西?\n3.4版本内部的Link接口定义如下：\ninterface Link {\n  dep: Dep\n  sub: Subscriber\n\n  /**\n   * - Before each effect run, all previous dep links' version are reset to -1\n   * - During the run, a link's version is synced with the source dep on access\n   * - After the run, links with version -1 (that were never used) are cleaned\n   *   up\n   */\n  version: number //依赖每次被触发时+1\n\n  /**\n   * Pointers for doubly-linked lists\n   */\n  nextDep?: Link  //左右链接的箭头相关\n  prevDep?: Link  //左右链接的箭头相关\n\n  …",
          "link": "https://juejin.cn/post/7345725753018236947",
          "publishedOn": "2024-03-13T17:21:20.000Z",
          "wordCount": 1575,
          "title": "连yyx都要借鉴的二维双链表到底怎样？！揭秘vue3.4神秘黑魔法",
          "imageUrl": null
        },
        {
          "id": "https://juejin.cn/post/7345687862530686986",
          "author": "芝士加",
          "description": "只需一句指令，它可端到端地处理整个开发项目。\n一觉醒来，程序员怕是真要失业了，👀一项革命性的技术震撼了科技界。\n全球首个 AI 软件工程师一亮相，直接引爆整个科技圈。只需一句指令，它可端到端地处理整个开发项目，预示着软件开发领域的未来可能不再需要人类参与。\n\n欢迎关注公众号《前端界》，文章会同步更新，也可快速加入前端交流群！\n能力令人惊叹，只需简单的指令，它便能独立完成整个开发项目，从零开始构建网站，自动检测和修复代码错误，甚至能够自我学习和调整其AI模型， 更可怕的是，也可为一些成熟的代码库做贡献（🙉大部分多年开发经验的程序员都做不到！）。\n在最近的SWE-bench编码基准测试中，它展现了其卓越的性能。它无需人类帮助，可解决13.86% 的问题。\n而相比之下，GPT-4在同一测试中只能处理 1.74% 的问题，且都需要人类提示告知处理哪些文件。\n\n可以这样说，它远远超过了此前所有AI大模型。\nDevin被介绍为世界首个完全自主的AI软件工程师。\n它在长程推理和规划上面下了很大功夫，可以规划和执行需要数千个决策才能完成的复杂软件工程任务。\n在这之中，进行到任何一步它都可以回调所有相关的上下文信息，保证整体逻辑性，并方便随时校正错误。\n既然是一个端到端AI，软件开发人员常用的工具，比如shell、代码编辑器和浏览器等等，Devin也都配备（沙盒计算环境中），主打一个全方位服务。\n最终的Devin，让人类只需要发号施令，其他什么也不用做。\n比如Devin 通过阅读博客文章学习，用ControlNet，生成带有隐藏文字的图像，学习能力真的是一点就通～\n\n另外，Devin 可以自主查找并修复代码库中的错误。\n\n原视频地址：https://www.youtube.com/watch?v=TiXAzn2_Xck&t=4s\n目前Devin尚未公测，不过已经有少部分人拿到了资格，开始实测了一波……\n比如这位叫Akshat Bubna的网友分享：\n\n所以，程序员们做好和 AI Devin PK的准备了吗？🐶\n欢迎关注公众号《前端界》，文章会同步更新，也可快速加入前端交流群！",
          "link": "https://juejin.cn/post/7345687862530686986",
          "publishedOn": "2024-03-13T11:02:03.000Z",
          "wordCount": 720,
          "title": "💥程序员警惕！首个AI软件工程师Devin问世！他们铁了心砸掉程序员饭碗",
          "imageUrl": null
        },
        {
          "id": "https://juejin.cn/post/7345672631323394098",
          "author": "前端小蜗",
          "description": "背景\n\n家里有一条狗🐶，很喜欢乘人不备睡沙发🛋️，恰好最近刚搬家 + 狗迎来了掉毛期 不想让沙发上很多毛。所以希望能识别到狗，然后播放“gun 下去”的音频📣。\n需求分析\n需要一个摄像头📷\n\n利用 chrome 浏览器可以调用手机摄像头，获取权限，然后利用 video 将摄像头的内容绘制到 video 上。\n通过摄像头实时识别画面中的狗🐶\n\n利用 tensorflow 和预训练的 COCO-SSD MobileNet V2 模型进行对象检测。\n将摄像头的视频流转化成视频帧图像传给模型进行识别\n录制一个音频\n\n识别到目标（狗）后播放音频📣\n需要部署在一个设备上\n\n找一个不用的旧手机📱，Android 系统\n安装 termux 来实现开启本地 http 服务🌐\n技术要点\n利用浏览器 API 调用手机摄像头，将视频流推给 video\nconst stream = await navigator.mediaDevices.getUserMedia({\n  // video: { facingMode: \"environment\" },  // 摄像头后置\n  video: { facingMode: \"user\" },\n});\n\nconst videoElement = document.getElementById(\"camera-stream\");\nvideoElement.srcObject = stream;\n\n加载模型，实现识别\nlet dogDetector;\n\nasync function loadDogDetector() {\n  // 加载预训练的SSD MobileNet V2模型\n  const model = await cocoSsd.load();\n  dogDetector = model; // 将加载好的模型赋值给dogDetect…",
          "link": "https://juejin.cn/post/7345672631323394098",
          "publishedOn": "2024-03-13T09:53:27.000Z",
          "wordCount": 2023,
          "title": "🚫为了防止狗上沙发，写了一个浏览器实时识别目标功能📷",
          "imageUrl": null
        },
        {
          "id": "https://juejin.cn/post/7345423755948785718",
          "author": "柚子816",
          "description": "theme: channing-cyan\n首先声明这篇文章不是讲如何逆向 wasm 文件，获取其内部逻辑，这个标题真的就是一个问题，想要问问是否可以逆向\n编写一个 wasm\n下面先演示用 rust 编写构建一个 wasm 的过程。rust 环境的安装，cargo 是什么命令就不解释了，官方网站有安装使用说明\n首先需要创建一个工程\n$ cargo new --lib greet-wasm \n\n进入工程目录添加依赖项\n[lib] \ncrate-type = [\"cdylib\"]\n\n[dependencies] \nwasm-bindgen = \"0.2\" \njs-sys = \"0.3.61\"  \n\n清空 src/lib.rs 文件中的内容，输入以下代码\nextern crate wasm_bindgen;  \nuse wasm_bindgen::prelude::*;  \n\n#[wasm_bindgen] \npub fn hello(input: &str) -> JsValue {\n  JsValue::from_str(&format!(\"Hello {}!\", input)) \n} \n\n执行打包命令\n$ wasm-pack build  --target web \n\n经过打包后，将生成 pkg 目录, 此时已经可以将目录发布到 npm 仓库，供项目使用了，此处本地引用，就不发布了\n在网页中引用wasm\n新建 html 文件，并引用 hello 方法\n<!DOCTYPE html>\n<html lang=\"en\"> \n  <head>   \n    <meta charset=\"UTF-8\">   \n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">   \n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> \n    <title>Document</title> \n  </head> \n  <body>   \n    <script type=\"module\">     \n      import init, {hello} from './greet-wasm/pkg/greet_wasm.js';\n      async function run() {       \n        await init();       \n        console.log(hello('world'));     \n      }     \n      run(); \n    </script> \n  </body> \n</html> \n\n使用任何静态资源服务器打开 html 文件，控制台将会成功打印 Hello world!， 到此已成功调用 wasm 内方法并获取到返回值\n逆向 wasm\n如果你尝试去打印一个 wasm 暴露出来的方法，将会看到 [native code] ，wasm 直接暴露的方法被认为是原生的方法，不会打印原始代码。毕竟原始代码也不是 js 写的。如果尝试在控制直接查看 wasm 文件的内容，看到是下面的内容，一般人肯定是看不懂的\n\n生成函数签名\n所以我在想如果把项目的参数签名逻辑放在 wasm 中去实现，生成签名的过程中使用的 salt 也放在 wasm 中，这样是不是可以避免别人写脚本刷接口的尴尬了。请参考这个站点中的 demo，类似于在浏览器网络面板中看到的每个接口的入参及生成好签名。\n那下面的问题就是，这样的网站发布上线后，能否获取网站的验签逻辑，然后修改参数生成签名然后调用接口，以达到一些不可告人的小心思呢。如果你曾经干成过这事，能不能留下你的方法呢。如果你需要上面站点中的 wasm，也请从 demo 站点的控制面板中获取链接并下载",
          "link": "https://juejin.cn/post/7345423755948785718",
          "publishedOn": "2024-03-13T05:56:31.000Z",
          "wordCount": 1136,
          "title": "wasm可以被逆向么",
          "imageUrl": null
        },
        {
          "id": "https://juejin.cn/post/7345423793210802186",
          "author": "颜海镜",
          "description": "本文为稀土掘金技术社区首发签约文章，30 天内禁止转载，30 天后未获授权禁止转载，侵权必究！\n本文讲解Promise，callback，RxJS多种方式实现并发限制，通过示例循序渐进讲解，如何实现带数量限制的并发请求，这来源于笔者业务中的真实场景，同时也是一道前端面试题，作为面试题的话，一般是考察对Promise的理解。\n问题\n笔者的业务中，经常存在通过一堆ids，批量获取的场景，其中最复杂的一个场景是获取数千个手机号的数据，对于这种场景，发送请求并不容易。\n这里先交代下背景，笔者的系统是运行在 http2 上的，由于 http2 支持并发处理，所以在笔者的系统里，后端接口设计是基于这个假设的，后端不会提供批量获取的接口，需要前端通过 id 来逐个获取。\n当同时发送上千个请求时，浏览器会变的明显卡顿，虽然这样发送可以更快的获取数据，但会带来不好的用户体验，笔者的解决方案是，给并发添加最大数量限制。\n这里我们将问题定义为，给你ids和并发限制max，一般作为面试题，会让你直接实现如下的函数：\nfunction gets(ids, max) {\n}\n\n补充一点，如果是 http1.1，浏览器会有默认的并发限制，并不需要我们处理这个问题，比如Chrome 中并发数量是6个，所以这个问题的成立，建立在 http2 的基础上，如果是在面试中，不要忘了提这个知识点。\nPromise\n目前来说，Promise是最通用的方案，一般我们最先想到Promise.all，当然最好是使用新出的Promise.allsettled。\n下面简单介绍下二者的区别，假如存在某个请求失败时，all会整体失败，而allsettled只会让单个请求失败，对于大部分情况来说，allsettled的是更好的选择，因为allsettled更为灵活，一般来说面对这种情况，总共有三种处理方式，如下所示，all只能支持第…",
          "link": "https://juejin.cn/post/7345423793210802186",
          "publishedOn": "2024-03-13T04:03:41.000Z",
          "wordCount": 1906,
          "title": "异步难题：前端并发控制全解析",
          "imageUrl": null
        },
        {
          "id": "https://juejin.cn/post/7345379924168196137",
          "author": "杨成功",
          "description": "大家好，我是杨成功。\n在桌面应用开发中，常常需要获取设备唯一 ID 来表示当前客户端的唯一性。一般的设备 ID 需要满足两个条件：\n基于硬件和系统配置生成，确保设备的唯一性。\n只要不重装系统，设备 ID 多次获取都是唯一的。\nnode-machine-id 是一个常用的 Node.js 模块，它能够在 Electron 中获取机器的唯一标识。\n我们的产品就是使用该模块，用法也很简单：\nimport { machineIdSync } from 'node-machine-id';\nlet id = machineIdSync();\n\n但是昨天出现了问题，排查结果是多台设备获取的 ID 竟然是一样的，造成了一些设备的数据被篡改，我从 issues 中找到了一些端倪。\n\n也就是在 Window Ghost 系统中会出现问题（啥是 Window Ghost ？）。\nWindow 中还经常遇到权限问题，而且这个 ID 总归不可控，所以还是用自定义的方式实现吧。\n自定义设置设备 ID\n自定义的设备 ID 首先需要唯一，其次在安装和卸载应用时设备 ID 不变。\n满足这两个要求，最佳的方案就是将自己生成的设备 ID 存储在用户目录下。\n假设当前用户叫张三，他的用户目录：\nWindow：C:\\Users\\张三\\\nMacOS：/Users/张三/\n很多应用程序都把配置写到用户目录下，且该目录一般不会遇到权限问题。\n（1）使用 uuid 生成设备 ID：\nimport { v4 as uuidv4 } from 'uuid';\nconst device_id = uuidv4();\n\n（2）在主进程中获取到用户目录，非常简单：\nimport { app } from 'electron';\nconst user_path = app.getPath('home'); // 自动获取 Win 或 Mac 的用户目录\n\n（3）在用户目录下创建 .elappid 文件，存放生成的设备 ID：\nimport { join } from 'node:path';\nimport fs from 'node:fs';\n// 获取配置文件地址\nlet appid_path = join(user_path, '.elappid');\n// 判断文件是否存在，不存在就先创建，并写入设备ID\nif (!fs.existsSync(appid_path)) {\n  fs.writeFileSync(appid_path, device_id, 'utf8');\n}\n\n（4）读取设备 ID，并发送给渲染进程：\nlet appid = fs.readFileSync(appid_path, 'utf8');\nwin.webContents.send('susr-config', { appid });\n\n写一个进程间交互的方法，就能拿到设备 ID 了。\n什么时候获取设备 ID\n正常情况下，我们希望用户打开应用的时候，主动获取设备 ID 并发给渲染进程。\n然而经过测试，在创建浏览器窗口的同时立即获取设备 ID 并通知渲染进程，在正式环境中，渲染进程往往接受不到消息。\n这是因为创建窗口时，页面还没有初始化完成，自然接收不到消息。\n保险的方法就是在页面加载完成后再获取设备 ID，方法如下：\nwin = new BrowserWindow({...})\n\n// 页面加载完成后触发：\nwin.webContents.on(\"did-finish-load\", () => {\n  console.log('在这里获取设备ID吧')\n})\n\n大功告成，你也试试吧！\n本文来自公众号 程序员成功，关注查看更多",
          "link": "https://juejin.cn/post/7345379924168196137",
          "publishedOn": "2024-03-13T03:07:11.000Z",
          "wordCount": 1069,
          "title": "注意！Electron无法获取设备ID了！",
          "imageUrl": null
        },
        {
          "id": "https://juejin.cn/post/7345297230201258024",
          "author": "ice_dk",
          "description": "theme: fancy\n本篇文章主要以理解Vue3动态组件，及其相关应用与问题解析。\n什么是 Vue3 动态组件？\n简单来说，这里的动态，即：能够根据组件的呈现条件，来调整好自己需要呈现的组件，以此来满足对需求的实现。\n注：和动态样式一样，通过用户的操作来确定是什么类型的组件。\n基本使用\n在 Vue3 中，使用动态组件非常简单，我们只需要在模板中使用<component>标签，并通过设置组件的is属性来指定要渲染的组件。例如：\n<component :is=\"currentComponent\"></component>\n\n其中，currentComponent是一个变量，它的值可以是以下 2 种：\n已注册的组件名，或 HTML 标签名称\n导入的组件对象\n以下是示例：\n<script>\nimport { Transition, TransitionGroup } from 'vue'\n\nexport default {\n  components: {\n    Transition,\n    TransitionGroup\n  }\n}\n</script>\n\n<template>\n  <component :is=\"isGroup ? 'TransitionGroup' : 'Transition'\">\n    ...\n  </component>\n</template>\n\n在这个例子中，我们可以看到，component 所呈现的组件，是由isGroup来决定的。\n注意：\n如果将组件本身传递给 is 而不是其名称，则不需要注册，例如在 <script setup> 中。\n如果在 <component> 标签上使用 v-model，模板编译器会将其扩展为 modelValue prop 和 update:modelValue 事件监听器，就像对任何其他组件一样。但是，这与原生 H…",
          "link": "https://juejin.cn/post/7345297230201258024",
          "publishedOn": "2024-03-12T17:18:12.000Z",
          "wordCount": 1361,
          "title": "Vue3 动态组件？！原来是这样啊！",
          "imageUrl": null
        }
      ]
    },
    {
      "title": "沸点 - 开发工具推荐",
      "feedUrl": "https://rsshub.app/juejin/pins/6824710202000932877",
      "siteUrl": "https://juejin.cn/pins/recommended",
      "articles": [
        {
          "id": "7347943210952458250",
          "author": "Starfish",
          "description": "开源表单设计器颗粒度级别控制表单的显示条件原理分析https://juejin.cn/post/7347910830761705498\n表单渲染中, 有些表单的显示有不同条件, 比如需要上一个表单的开关打开,或者文本内容为 xxxx, 或者需要大于或等于或小于指定值, 或者需要选中某个选项, 或者需满足以上多个条件或在满足多个条件中的一个, 有 n 种场景选择, 这样就需要条件显示配置功能, 来满足多样化需求",
          "link": "https://juejin.cn/pin/7347943210952458250",
          "publishedOn": "2024-03-19T10:59:23.000Z",
          "wordCount": 524,
          "title": "开源表单设计器颗粒度级别控制表单的显示条件原理分析https://juejin.cn/post/7347910830761705498 表单渲染中, 有些表单的显示有不同条件, 比如需要上一个表单...",
          "imageUrl": null
        },
        {
          "id": "7347904631294525492",
          "author": "mharvay",
          "description": "掘友们，问一下大家mac上用啥建模工具来设计数据库表的，之前Windows用习惯了power designer，mac没找到好用的，有推荐的吗",
          "link": "https://juejin.cn/pin/7347904631294525492",
          "publishedOn": "2024-03-19T03:15:56.000Z",
          "wordCount": 459,
          "title": "掘友们，问一下大家mac上用啥建模工具来设计数据库表的，之前Windows用习惯了power designer，mac没找到好用的，有推荐的吗",
          "imageUrl": null
        },
        {
          "id": "7347517295356887080",
          "author": "挂羊头卖羊肉",
          "description": "[7073670907851440160#新人报道#] 来学习",
          "link": "https://juejin.cn/pin/7347517295356887080",
          "publishedOn": "2024-03-18T11:38:03.000Z",
          "wordCount": 459,
          "title": "[7073670907851440160#新人报道#] 来学习",
          "imageUrl": null
        },
        {
          "id": "7347147911149436943",
          "author": "吴楷鹏",
          "description": "#开源工具 ✨ MulSearch v0.2\nMulSearch，一个快速指定搜索源的入口页，方便使用多个搜索引擎和平台的开发者\n新版本做了一些调整，用 divider 做了分类，并引入了一些垂直平台的搜索源\n👉 体验地址：https://search.wukaipeng.com/",
          "link": "https://juejin.cn/pin/7347147911149436943",
          "publishedOn": "2024-03-18T05:52:06.000Z",
          "wordCount": 487,
          "title": "#开源工具 ✨ MulSearch v0.2 MulSearch，一个快速指定搜索源的入口页，方便使用多个搜索引擎和平台的开发者 新版本做了一些调整，用 divider 做了分类，并引入...",
          "imageUrl": null
        },
        {
          "id": "7345757062107922484",
          "author": "似懂非懂I",
          "description": "idea 哪些好用得插件",
          "link": "https://juejin.cn/pin/7345757062107922484",
          "publishedOn": "2024-03-14T01:00:11.000Z",
          "wordCount": 457,
          "title": "idea 哪些好用得插件",
          "imageUrl": null
        },
        {
          "id": "7345726691510861860",
          "author": "吴楷鹏",
          "description": "#开源工具 如果平时有使用多个搜索引擎的习惯，比如 Google、Bing、百度等，切换起来比较麻烦，可以使用这个轻量网站，功能专一，输入搜索关键词，选择想要的搜索引擎去搜索即可\n👉 search.wukaipeng.com",
          "link": "https://juejin.cn/pin/7345726691510861860",
          "publishedOn": "2024-03-13T13:20:34.000Z",
          "wordCount": 469,
          "title": "#开源工具 如果平时有使用多个搜索引擎的习惯，比如 Google、Bing、百度等，切换起来比较麻烦，可以使用这个轻量网站，功能专一，输入搜索关键词，选择想要的搜...",
          "imageUrl": null
        },
        {
          "id": "7345634485780545562",
          "author": "F西",
          "description": "xdm，在线找一款vscode插件，能在呼出代码提示后，能在每一个后面标明是property或者函数function的，如下图所示，以前不知道在哪个视频里别人的vscode有见过这种效果，救救孩子",
          "link": "https://juejin.cn/pin/7345634485780545562",
          "publishedOn": "2024-03-13T07:22:02.000Z",
          "wordCount": 452,
          "title": "xdm，在线找一款vscode插件，能在呼出代码提示后，能在每一个后面标明是property或者函数function的，如下图所示，以前不知道在哪个视频里别人的vscode有见过这...",
          "imageUrl": null
        },
        {
          "id": "7345645720042962959",
          "author": "Zakary",
          "description": "https://developer.aliyun.com/topic/lingma/activities/202403?taskCode=14508&recordId=f024db3e41b11bd3fd40ebd113787850#/?utm_content=m_fission_1  「通义灵码 · 体验 AI 编码，开 AI 盲盒」",
          "link": "https://juejin.cn/pin/7345645720042962959",
          "publishedOn": "2024-03-13T03:26:53.000Z",
          "wordCount": 469,
          "title": "https://developer.aliyun.com/topic/lingma/activities/202403?taskCode=14508&recordId=f024db3e41b11bd3fd40ebd113787850#/?utm_content=m_fission_1 「通义...",
          "imageUrl": null
        },
        {
          "id": "7345027924972929074",
          "author": "TommyWhite",
          "description": "[7210228048107896891#每日快讯#] 📱 首个零代码快准稳 UI 录制回放平台、也是腾讯 APIJSON 生态项目 UIGO 开发 3 年多终于开源啦 🚀\n像素级自动兼容任意宽高比分辨率屏幕，毫秒级自动精准等待网络请求，录制回放快、准、稳！\n 适用于 替代重复界面操作、一次录制到处回放、App UI/功能 自动化测试、\n帮助开发快速复现和排查 bug、方便判断 bug 原因出在前端还是后端 等，\n大量减少耗时费力又无聊的重复手工操作，大幅提高手工和自动化测试效率，\n强力杜绝 测试和开发、前端和后端 关于缺陷单踢皮球等各种低效扯皮内耗！\n用户包含腾讯，应微信团队邀请分享了 零代码测试工具与实践(API•单元•UI) \n  \nhttps://juejin.cn/post/7345105895929856011",
          "link": "https://juejin.cn/pin/7345027924972929074",
          "publishedOn": "2024-03-12T03:15:27.000Z",
          "wordCount": 619,
          "title": "[7210228048107896891#每日快讯#] 📱 首个零代码快准稳 UI 录制回放平台、也是腾讯 APIJSON 生态项目 UIGO 开发 3 年多终于开源啦 🚀 像素级自动兼容任意宽...",
          "imageUrl": null
        },
        {
          "id": "7345105899151687692",
          "author": "一只小芒果",
          "description": "jym，有没有好用的AI代码提示工具推荐",
          "link": "https://juejin.cn/pin/7345105899151687692",
          "publishedOn": "2024-03-12T01:42:01.000Z",
          "wordCount": 451,
          "title": "jym，有没有好用的AI代码提示工具推荐",
          "imageUrl": null
        },
        {
          "id": "7345071662028881935",
          "author": "小麦加油呀",
          "description": "[7243698841848348730#每天一个知识点#] 国产、开源、高颜值、支持单机模式、支持集群模式、支持哨兵模式的一款Redis客户端管理工具。",
          "link": "https://juejin.cn/pin/7345071662028881935",
          "publishedOn": "2024-03-12T00:35:50.000Z",
          "wordCount": 497,
          "title": "[7243698841848348730#每天一个知识点#] 国产、开源、高颜值、支持单机模式、支持集群模式、支持哨兵模式的一款Redis客户端管理工具。",
          "imageUrl": null
        },
        {
          "id": "7344571968175177780",
          "author": "用户2405397104273",
          "description": "有没有需要🪜的",
          "link": "https://juejin.cn/pin/7344571968175177780",
          "publishedOn": "2024-03-11T03:42:23.000Z",
          "wordCount": 446,
          "title": "有没有需要🪜的",
          "imageUrl": null
        },
        {
          "id": "7344571269554323519",
          "author": "弗雷free",
          "description": "对标 Github Copilot 的百度 Baidu Comate 服务，有用过的朋友吗？\n根据官网描述，智能代码助手 Baidu Comate 是基于文心大模型，结合百度积累多年的编程现场大数据和外部优秀开源数据，打造的新一代编码辅助工具，可以释放十倍软件生产力。\n虽然可以免费试用，但是看到每年500的价格，着实捏一把冷汗，嗯，我还是去看看您对标的产品吧。\n感觉很多产品在宣传时都喜欢说可以对标openai、看齐微软、超越谷歌，后面还可能要对标sora哈哈，但是真正言行一致的有几个呢？反而像是逆向给对标的公司打了一波免费广告。\n[7338596022676881445#Sora 技术探索#]",
          "link": "https://juejin.cn/pin/7344571269554323519",
          "publishedOn": "2024-03-10T05:12:17.000Z",
          "wordCount": 556,
          "title": "对标 Github Copilot 的百度 Baidu Comate 服务，有用过的朋友吗？ 根据官网描述，智能代码助手 Baidu Comate 是基于文心大模型，结合百度积累多年的编程现场大...",
          "imageUrl": null
        },
        {
          "id": "7343548913034346515",
          "author": "Simon_He",
          "description": "fast-create-varibale支持空内容直接创建变量，检测到无内容，再选择要创建的选项后，会让你输入变量名，另外这个b站上传的视频是react组件，我可以当vue来写[呲牙]",
          "link": "https://juejin.cn/pin/7343548913034346515",
          "publishedOn": "2024-03-08T06:01:47.000Z",
          "wordCount": 457,
          "title": "fast-create-varibale支持空内容直接创建变量，检测到无内容，再选择要创建的选项后，会让你输入变量名，另外这个b站上传的视频是react组件，我可以当vue来写[呲...",
          "imageUrl": null
        },
        {
          "id": "7343429147815034930",
          "author": "奶牛没有奶",
          "description": "百度ai辅助写代码竟然开始给程序员撒钱了[发][发]\n最新vscode辅助代码插件免费用还给钱，我上来直接提了三十，代码生成效果还可以，https://comate.baidu.com/?inviteCode=atyt07gu[7201008222164451331#前端开发现状#]\n点这个链接，登录账号，根据页面提示跳转到vscode百度的代码辅助插件安装后登录一下，最低可以免费领30京东e卡，通过邀请链接进的多给10块，当天奖励售罄可以第二天在看",
          "link": "https://juejin.cn/pin/7343429147815034930",
          "publishedOn": "2024-03-07T06:58:30.000Z",
          "wordCount": 457,
          "title": "百度ai辅助写代码竟然开始给程序员撒钱了[发][发] 最新vscode辅助代码插件免费用还给钱，我上来直接提了三十，代码生成效果还可以，https://comate.baidu.com/?i...",
          "imageUrl": null
        },
        {
          "id": "7343138429939580947",
          "author": "前端之虎陈随易",
          "description": "[7243698841848348730#每天一个知识点#] VSCode扩展fnMap（函数地图）v4.4.0版本发布啦！本次增加了标记行功能的稳定性。\n什么是标记行呢？请看下方动图。\n这只是fnMap的冰山一角，更多功能，可以点击下方链接，安装使用。\nhttps://marketplace.visualstudio.com/items?itemName=chensuiyi.fn-map",
          "link": "https://juejin.cn/pin/7343138429939580947",
          "publishedOn": "2024-03-06T16:02:16.000Z",
          "wordCount": 501,
          "title": "[7243698841848348730#每天一个知识点#] VSCode扩展fnMap（函数地图）v4.4.0版本发布啦！本次增加了标记行功能的稳定性。 什么是标记行呢？请看下方动图。 这只...",
          "imageUrl": null
        },
        {
          "id": "7343131959826350090",
          "author": "emo大王",
          "description": "jym  有没有mac对比jar的工具",
          "link": "https://juejin.cn/pin/7343131959826350090",
          "publishedOn": "2024-03-06T06:56:55.000Z",
          "wordCount": 454,
          "title": "jym 有没有mac对比jar的工具",
          "imageUrl": null
        },
        {
          "id": "7342406486910517274",
          "author": "ServBay",
          "description": "[西瓜]ServBay 1.2.3版本正式发布！\nServBay是一个集成式、图形化的本地化Web开发环境。开发者通过ServBay几分钟内就能部署一个本地化的开发环境。主要解决Web开发者（比如PHP、Nodejs）、测试工程师、小型团队安装和维护开发测试环境的问题，后期还可以快速的进行环境的升级以及维护。\n本次更新了：\n[礼物]全新架构及软件包\n[礼物]增强的错误日志\n[礼物]phpMyAdmin支持MariaDB 11.3\n[礼物]ServBay Helper运行状况的判断\n期待您在ServBay 1.2.3版本中享受到更加优化和流畅的体验[庆祝]",
          "link": "https://juejin.cn/pin/7342406486910517274",
          "publishedOn": "2024-03-04T16:16:14.000Z",
          "wordCount": 466,
          "title": "[西瓜]ServBay 1.2.3版本正式发布！ ServBay是一个集成式、图形化的本地化Web开发环境。开发者通过ServBay几分钟内就能部署一个本地化的开发环境。主要解决Web开...",
          "imageUrl": null
        },
        {
          "id": "7342319793154572303",
          "author": "丢掉幻想",
          "description": "蓝月亮，蓝禾，三七互娱，顺丰，康冠科技，金证科技24春招内推\n①蓝月亮\n【招聘岗位】技术，研发，lT，供应链，市场，职能等\n【网申链接】https://sourl.cn/NsVxG6\n【内推码】 在网申页面“信息获取渠道”中“其他渠道”输入内推码：CS01\n②蓝禾\n【岗位】运营类、设计类、研发类，供应链类，职能等\n【一键内推】https://lanhevip.jobs.feishu.cn/index/m/?external_referral_code=T1KYX4B\n【校园大使推荐码】T1KYX4B\n③三七互娱\n【岗位】美术设计类，运营类，游戏研发类，策划类，市场推广类等\n【一键内推】https://sourl.cn/4tzszW\n【官方内推码】DSQ526j8\n④顺丰\n【招聘岗位】研发类、算法与大数据类，设计类，产品类、职能类\n【官方内推码】4FOLXH\n【一键内推】https://sourl.cn/viaZZt\n⑤康冠科技\n 【岗位】算法类，软硬件类，供应链类，产品类，商务类，职能类\n【一键内推】https://sourl.cn/aJJ2YE \n【内推码】 EVBM88\n⑥金证科技\n【岗位】C/C++/Java/Web/大模型算法，测试/实施/维护/运维，产品/销售/交易员\n【内推码】EVVG83\n【投递链接】https://sourl.cn/SUhk4b",
          "link": "https://juejin.cn/pin/7342319793154572303",
          "publishedOn": "2024-03-04T07:44:59.000Z",
          "wordCount": 464,
          "title": "蓝月亮，蓝禾，三七互娱，顺丰，康冠科技，金证科技24春招内推 ①蓝月亮 【招聘岗位】技术，研发，lT，供应链，市场，职能等 【网申链接】https://sourl.cn/NsVx...",
          "imageUrl": null
        },
        {
          "id": "7341394494901305381",
          "author": "Aooohan",
          "description": "上榜GitHub Trending啦~\nhttps://vfox.lhan.me/",
          "link": "https://juejin.cn/pin/7341394494901305381",
          "publishedOn": "2024-03-03T03:00:16.000Z",
          "wordCount": 480,
          "title": "上榜GitHub Trending啦~ https://vfox.lhan.me/",
          "imageUrl": null
        }
      ]
    },
    {
      "title": "倪爽设计工作室",
      "feedUrl": "https://nishuang.net/feed/",
      "siteUrl": "https://nishuang.net",
      "articles": []
    }
  ],
  "cliVersion": "1.15.1"
}