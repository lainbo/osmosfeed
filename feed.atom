<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>urn:2023-10-20T12:55:52.804Z</id>
    <title>Lainbo's RSS</title>
    <updated>2023-10-20T12:55:52.804Z</updated>
    <generator>osmosfeed 1.15.1</generator>
    <link rel="alternate" href="index.html"/>
    <entry>
        <title type="html"><![CDATA[发布了: 前文（https://twitter.com/Barret_China/status/1714578115580833858）介绍过 CoT 可以提升 ChatGPT 的输出质量，而 CoT Self-Consistency 又可以提升 ...]]></title>
        <id>https://m.okjike.com/originalPosts/6531fcd4bb3e3660e835fab0</id>
        <link href="https://m.okjike.com/originalPosts/6531fcd4bb3e3660e835fab0"/>
        <updated>2023-10-20T04:06:44.000Z</updated>
        <summary type="html"><![CDATA[前文（https://twitter.com/Barret_China/status/1714578115580833858）介绍过 CoT 可以提升 ChatGPT 的输出质量，而 CoT Self-Consistency 又可以提升 CoT 的可靠性，它本质就是让具备随机性的 LLM 多推理几次，然后对结果进行投票，取票数最高的一个。但是这里有一个问题，有可能票数较低的结果中，存在局部最优解，例如：
CoT-1：stepA -> stepB -> stepC ❌
CoT-2：stepM -> stepN -> stepL ❌
CoT-3：stepX -> stepY -> stepZ ✅
CoT-1 和 CoT-2 被淘汰，最后结果选了 CoT-3，但是最佳的路径有可能是 stepA -> stepY -> stepZ，局部最优解 stepA 在 CoT-1 中被干掉了。那如何让 ChatGPT 在推理过程中保留最佳输出结果呢？
看到一篇关于 ToT 的论文《Tree of Thoughts: Deliberate Problem Solving with Large Language Models》，https://arxiv.org/abs/2305.10601，它的解决思路也比较简单，引入一个树结构，保存每一步推理产生的多个结果作为叶子节点，在进行一次状态评估剔除掉无效结果后，再基于叶子节点继续推理，由此展开一棵树，最后通过深度优先（DFS）或广度优先（BFS）算法组装节点生成多条 CoTs，然后交给大模型评估哪个结果最好。
这个过程可以做到，每个环节都是局部最优。从论文实验的数据来看，它输出的结果，正确率比 CoT 要高将近 70%。不过这个方案带来的代价也是比较高的，过程中需要多次与 ChatGPT 交互，因此在执行这类任务的时候，需要考虑剪枝数量和推理深度。
看到 LangChain 对 ToT 做了一个 Python 版本的实现，https://github.com/langchain-ai/langchain/pull/5167/files，感兴趣的可以参考下。]]></summary>
        <author>
            <name>Barret李靖的即刻动态</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[有没有大佬了解 power Apps 开发平台的。我想在 vcode 编辑开发，安装了Power Platform Tools 插件，也配置了公司的环境，但是用这个 pac paportal list 获取列...]]></title>
        <id>7291830798160052278</id>
        <link href="https://juejin.cn/pin/7291830798160052278"/>
        <updated>2023-10-20T02:49:58.000Z</updated>
        <summary type="html"><![CDATA[有没有大佬了解 power Apps 开发平台的。我想在 vcode 编辑开发，安装了Power Platform Tools 插件，也配置了公司的环境，但是用这个 pac paportal list 获取列表，没有数据。我想新创建一个项目，该怎么去做啊]]></summary>
        <author>
            <name>中国人不骗中国人</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[科技爱好者周刊（第 274 期）：加密通信的最后一块拼图]]></title>
        <id>http://www.ruanyifeng.com/blog/2023/10/weekly-issue-274.html</id>
        <link href="http://www.ruanyifeng.com/blog/2023/10/weekly-issue-274.html"/>
        <updated>2023-10-20T00:15:40.000Z</updated>
        <summary type="html"><![CDATA[这里记录每周值得分享的科技内容，周五发布。
本杂志开源，欢迎投稿。另有《谁在招人》服务，发布程序员招聘信息。合作请邮件联系（yifeng.ruan@gmail.com）。
封面图

上图是最近落成的成都科幻馆，位于成都市郫都区菁蓉湖畔，可用于举办展览、会议等各种活动。10月18日，第81届世界科幻大会和雨果奖在这里开幕。（via）
加密通信的最后一块拼图
十一期间，世界最大的 CDN 服务商 Cloudflare 发了一篇博客文章，宣称解决了"加密通信的最后一块拼图"。

这件事挺重要的，可能会影响很多人，本周我想好好谈谈。
我先问大家，HTTPS 链接是加密通信吗？

你可以说它是，因为通信内容确实是加密的，外界无法窥测和篡改。
但是，它又不是彻底的加密通信，有一个地方是不加密的，那就是域名。中间人可以看到，你访问什么网站。
为什么域名不加密呢？
因为加密的密钥放在服务器上，而服务器只有知道域名，才知道发送哪一把密钥。所以，密钥的发送，必须在知道域名之后。
Cloudflare 解决的就是这个问题，它发明了一种新技术，叫做 ECH。

ECH 非常巧妙地解决了域名加密。它采用双层格式，也就是说，域名分了两层。外层是明文的，统一发送到 cloudflare-ech.com，内层是加密的，存放真正的域名。
中间人只能看到你在访问 cloudflare-ech.com，看不到内层的域名，从而达到保密的效果。
好了，技术介绍就说到这里，下面就是我的感想。我当时一看到 ECH 的细节，不禁就产生了疑问。
如果 cloudflare-ech.com 发生故障，或者种种原因无法访问，那么所有 Cloudflare 托管的网站是否都无法访问？
这是很现实的问题，因为 Cloudflare 是世界最大 CDN 服务商，很多网站都放在上面。而且，它对免费用户都启用了 ECH，还无法关闭（这是…]]></summary>
        <author>
            <name>阮一峰的网络日志</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[转发了: 宝藏账号+1]]></title>
        <id>https://m.okjike.com/reposts/6531c2a4bb3e3660e82f7c57</id>
        <link href="https://m.okjike.com/reposts/6531c2a4bb3e3660e82f7c57"/>
        <updated>2023-10-19T23:58:28.000Z</updated>
        <summary type="html"><![CDATA[宝藏账号+1

转发 @梁将军: 真正的搅局者，目测有两大杀手锏：
一个叫“大众产品高质化”。一个叫“小众产品大众化”。
啥叫“大众产品高质化”？你去地摊一条街，两家都卖炸土豆。一家老板是面相好似杀猪的，喜欢不拘小节地用手给你配菜。另一家老板是个白净大学生，带着一次性手套给你配菜，除了葱花辣椒还会额外加点花生脆、鸡枞菌油。
后面这家地摊，就是把大众产品高质化。在大众市场里，用户最大的痛点是：便宜的不好用，好用的不便宜。
价格一样、档次提高，你的机会就来了。比如，你想进入无糖饮料市场，元气是0糖0脂0卡，你再加个0防腐剂，四个0的你就有机会切走它的市场。
再说“小众产品大众化”。节目制作公司做说唱类综艺，不是因为说唱小众，而是说唱音乐可以引发大众的兴趣。电器公司做扫地机器人，不是因为这个市场竞争压力小，而未来的家庭，扫地机器人会替代拖布和扫把。
记住！做小众产品的目的，不是追求小而美，而是推动小众市场的普及，把小众市场大众化。
赶在小众市场爆发前，迅速垄断市场，起初看似是偏安一隅，其实是池塘养鱼，肥了再杀。]]></summary>
        <author>
            <name>李继刚的即刻动态</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[转发了: 这个好玩]]></title>
        <id>https://m.okjike.com/reposts/6531bedb966044831467a10e</id>
        <link href="https://m.okjike.com/reposts/6531bedb966044831467a10e"/>
        <updated>2023-10-19T23:42:19.000Z</updated>
        <summary type="html"><![CDATA[这个好玩

转发 @Luke的AI整活日记: 【build in public】我的第一个产品来辣！
基于AI做了一款小产品，叫【KnowU】：可以通过一个人的即刻主页内容来生成个性化的报告
现已支持如下功能：（以@李自然 为例）
1. 娱乐化的即刻主页分析（如图1）
2. 即刻主页的Dashboard（如图2）
目前【KnowU】处于内测阶段，大家如果对于报告内容&idea有什么想法请提出，这两天我会陆续公布后续的开发计划以及需求，到时候可能搞个投票，由大家决定优先开发哪个功能
欢迎➕微信探讨做产品的思路：Daniel_Wen666（请备注即刻）
如果你想要获取自己的报告，请【转发】本条动态，我会在你的动态底下回复！
#独立开发的日常 #AI的神奇用法]]></summary>
        <author>
            <name>李继刚的即刻动态</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The Evil Within]]></title>
        <id>https://store.epicgames.com/zh-CN/p/the-evil-within</id>
        <link href="https://store.epicgames.com/zh-CN/p/the-evil-within"/>
        <updated>2023-10-19T15:00:00.000Z</updated>
        <summary type="html"><![CDATA[Developed by Tango Gameworks and directed by Resident Evil series creator Shinji Mikami, The Evil Within embodies pure survival horror. 

As Detective Sebastian Castellanos, fight for survival with limited resources in a twisted world of nightmares.]]></summary>
        <author>
            <name>Bethesda Softworks LLC</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Eternal Threads]]></title>
        <id>https://store.epicgames.com/zh-CN/p/eternal-threads-197169</id>
        <link href="https://store.epicgames.com/zh-CN/p/eternal-threads-197169"/>
        <updated>2023-10-19T15:00:00.000Z</updated>
        <summary type="html"><![CDATA[《无穷时线》是一款关于时间操纵、选择和结果的第一人称剧情驱动型单机解谜游戏。]]></summary>
        <author>
            <name>Secret Mode</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[[7018942344208580646#1024一起掘金#]作为一名程序员，请说出你的首选开发工具？（VScode yyds）]]></title>
        <id>7291549843545440296</id>
        <link href="https://juejin.cn/pin/7291549843545440296"/>
        <updated>2023-10-19T14:05:14.000Z</updated>
        <summary type="html"><![CDATA[[7018942344208580646#1024一起掘金#]作为一名程序员，请说出你的首选开发工具？（VScode  yyds）]]></summary>
        <author>
            <name>HakineLee</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[重庆市巫山县发布大雾黄色预警]]></title>
        <id>http://www.cneb.gov.cn/yjxx/huangsyj/20231019/t20231019_526457108.html</id>
        <link href="http://www.cneb.gov.cn/yjxx/huangsyj/20231019/t20231019_526457108.html"/>
        <updated>2023-10-19T13:35:00.000Z</updated>
        <summary type="html"><![CDATA[巫山县气象台2023年10月19日21时10分继续发布“大雾黄色预警信号”，预计10月19日21时至20日9时，当阳乡、竹贤乡、骡坪镇、金坪乡、巫峡镇、龙门街道、高唐街道、建平乡、曲尺乡、红椿乡、铜鼓镇、邓家乡、笃坪乡、官阳镇等海拔600米以上及坪坝河谷地区将出现能见度小于500米的雾，局部地区能见度小于200米。请以上各地注意防范大雾天气可能造成的影响。]]></summary>
        <author>
            <name>国家预警信息发布中心</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[发布了: 未来对 AI 的学习将会是一门必修课，Gartner 给出了 2024 年的技术趋势预测，https://www.gartner.com/en/articles/gartner-top-10-strategic-technolog...]]></title>
        <id>https://m.okjike.com/originalPosts/6530c721d1917302aa8fa90b</id>
        <link href="https://m.okjike.com/originalPosts/6530c721d1917302aa8fa90b"/>
        <updated>2023-10-19T06:05:21.000Z</updated>
        <summary type="html"><![CDATA[未来对 AI 的学习将会是一门必修课，Gartner 给出了 2024 年的技术趋势预测，https://www.gartner.com/en/articles/gartner-top-10-strategic-technology-trends-for-2024，其中四项都直接提到了 AI，包括人工智能信任、风险和安全管理，人工智能增强开发和智能应用等。
并提到，2026 年，生成式 AI 将显着改变新 Web 应用程序和移动应用程序 70% 的设计和开发工作。]]></summary>
        <author>
            <name>Barret李靖的即刻动态</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[重庆市巫山县发布大风蓝色预警]]></title>
        <id>http://www.cneb.gov.cn/yjxx/lanseyj/20231019/t20231019_526456341.html</id>
        <link href="http://www.cneb.gov.cn/yjxx/lanseyj/20231019/t20231019_526456341.html"/>
        <updated>2023-10-19T05:52:00.000Z</updated>
        <summary type="html"><![CDATA[巫山县气象台2023年10月19日13时20分发布“大风蓝色预警信号”，预计19日13时至19时，当阳乡、平河乡、金坪乡、大昌镇、双龙镇、巫峡镇、龙门街道、高唐街道、建平乡、培石乡、抱龙镇、大溪乡、曲尺乡等乡镇沿江河谷及高海拔地区风速较大，风力可达6级，局地阵风可达7级以上，请注意防范。]]></summary>
        <author>
            <name>国家预警信息发布中心</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[重庆市武隆区发布大风蓝色预警]]></title>
        <id>http://www.cneb.gov.cn/yjxx/lanseyj/20231019/t20231019_526456234.html</id>
        <link href="http://www.cneb.gov.cn/yjxx/lanseyj/20231019/t20231019_526456234.html"/>
        <updated>2023-10-19T03:38:00.000Z</updated>
        <summary type="html"><![CDATA[武隆区气象台2023年10月19日11时发布“大风蓝色预警信号”，目前我区凤山街道和芙蓉街道已出现7级以上大风，预计未来12小时大风将持续，白马镇、羊角街道、仙女山街道等乡镇街道风力可达7级，局地阵风可达8级以上，请注意防范。]]></summary>
        <author>
            <name>国家预警信息发布中心</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[重庆市万州区发布大雾黄色预警]]></title>
        <id>http://www.cneb.gov.cn/yjxx/huangsyj/20231019/t20231019_526456196.html</id>
        <link href="http://www.cneb.gov.cn/yjxx/huangsyj/20231019/t20231019_526456196.html"/>
        <updated>2023-10-19T03:16:00.000Z</updated>
        <summary type="html"><![CDATA[万州区气象台2023年10月19日10时50分发布“大雾黄色预警信号”，预计19日11时至20时，高笋塘街道、太龙镇、钟鼓楼街道、大周镇、熊家镇、黄柏乡、小周镇、长岭镇、龙都街道、百安坝街道、五桥街道、白羊镇、牌楼街道、陈家坝街道、茨竹乡、铁峰乡、太白街道、沙河街道、天城街道、周家坝街道、高峰街道、双河口街道、九池街道、新田镇等镇乡街将出现能见度小于500米的雾，局部地区能见度小于200米。请以上各地注意防范大雾天气可能造成的影响。有关部门和单位按照职责做好防雾准备工作；机场、高速公路、轮渡码头等单位加强交通管理，保障安全；驾驶人员注意雾的变化，小心驾驶；户外活动注意安全。]]></summary>
        <author>
            <name>国家预警信息发布中心</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[重庆市城口县发布暴雨黄色预警]]></title>
        <id>http://www.cneb.gov.cn/yjxx/huangsyj/20231019/t20231019_526456106.html</id>
        <link href="http://www.cneb.gov.cn/yjxx/huangsyj/20231019/t20231019_526456106.html"/>
        <updated>2023-10-19T02:26:00.000Z</updated>
        <summary type="html"><![CDATA[城口县气象台2023年10月19日10时10分发布“暴雨黄色预警信号”，目前我县鸡鸣乡累计雨量已达50毫米以上，预计未来6小时，咸宜镇、明通镇、高燕镇、庙坝镇、坪坝镇、沿河乡、双河乡、治平乡、北屏乡、龙田乡、巴山镇、周溪乡等乡镇（街道）累计雨量将达50-70毫米，最大小时雨强可达20-30毫米，请注意防范。]]></summary>
        <author>
            <name>国家预警信息发布中心</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[重庆市巫山县发布大雾黄色预警]]></title>
        <id>http://www.cneb.gov.cn/yjxx/huangsyj/20231019/t20231019_526456059.html</id>
        <link href="http://www.cneb.gov.cn/yjxx/huangsyj/20231019/t20231019_526456059.html"/>
        <updated>2023-10-19T02:01:00.000Z</updated>
        <summary type="html"><![CDATA[巫山县气象台2023年10月19日9时40分发布“大雾黄色预警信号”，预计19日9时至21时，当阳乡、竹贤乡、骡坪镇、金坪乡、巫峡镇、龙门街道、高唐街道、建平乡、曲尺乡、红椿乡、铜鼓镇、邓家乡、笃坪乡、官阳镇等海拔600米以上及坪坝河谷地区将出现能见度小于500米的雾，局部地区能见度小于200米。请以上各地注意防范大雾天气可能造成的影响。]]></summary>
        <author>
            <name>国家预警信息发布中心</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[发布了: 这是一条十分强大且很有参考价值的 Prompt：https://github.com/ProfSynapse/Synapse_CoR/tree/main，跟它进行第一轮对话后，它会帮助你召唤出适合该任...]]></title>
        <id>https://m.okjike.com/originalPosts/65308bd4aa7d4f2b30d6b94a</id>
        <link href="https://m.okjike.com/originalPosts/65308bd4aa7d4f2b30d6b94a"/>
        <updated>2023-10-19T01:52:20.000Z</updated>
        <summary type="html"><![CDATA[这是一条十分强大且很有参考价值的 Prompt：https://github.com/ProfSynapse/Synapse_CoR/tree/main，跟它进行第一轮对话后，它会帮助你召唤出适合该任务的专家，在与专家进行第二轮对话后，ChatGPT 会完全明白你的目标，然后给出详细的分解和实施过程。
为什么这条 Prompt 表现效果会非常好呢？它的整个过程分成了两个阶段，第一阶段是明确要做的事情，把任务的轮廓给描绘清楚，第二阶段则是深入到细节，收集任务全貌所需要的信息。
之前也提到过（https://twitter.com/Barret_China/status/1668922606828007424），GPT 跟人类的思考方式是完全不一样的，它的每一个字符（Token）生成都是通过概率推导的方式获得的，而且生成每个字符所消耗的计算资源一样。推导的过程中会出现高质量和低质量的结果，它自己是知道质量高低的，但是默认的情况下，它就是要推导出所有的可能性。
第一阶段的操作，很大程度减少了大模型在推理过程中的分支数量，对于不符合目标的推理权重会大大降低。
而第二阶段其实是在做拆解任务的工作，首先召唤出来的专家会根据目标生成一份执行计划，然后让你参与到对话过程，不断完善这份计划。这有点像之前（https://twitter.com/Barret_China/status/1714578115580833858）提到的 CoT + Least to Most prompting + Multi-Persona Self-Collaboration 的结合。
两个阶段的对话内容将会成为 ChatGPT 生成最终内容的重要参考语料，后续的推理权重会更大程度偏向于任务目标和执行计划。因此这个 Prompt 可以说，写的非常非常好，充分利用了大模型底层的运作机制。]]></summary>
        <author>
            <name>Barret李靖的即刻动态</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[重庆市云阳县发布大雾黄色预警]]></title>
        <id>http://www.cneb.gov.cn/yjxx/huangsyj/20231019/t20231019_526455880.html</id>
        <link href="http://www.cneb.gov.cn/yjxx/huangsyj/20231019/t20231019_526455880.html"/>
        <updated>2023-10-19T01:13:00.000Z</updated>
        <summary type="html"><![CDATA[云阳县气象台2023年10月19日8时50分发布“大雾黄色预警信号”，预计未来12小时，全县各乡镇（街道）将出现能见度小于500米的大雾，局地能见度小于200米。请各地注意防范大雾天气可能造成的影响。]]></summary>
        <author>
            <name>国家预警信息发布中心</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[重庆市巫溪县发布大雾黄色预警]]></title>
        <id>http://www.cneb.gov.cn/yjxx/huangsyj/20231019/t20231019_526455873.html</id>
        <link href="http://www.cneb.gov.cn/yjxx/huangsyj/20231019/t20231019_526455873.html"/>
        <updated>2023-10-19T01:06:00.000Z</updated>
        <summary type="html"><![CDATA[巫溪县气象台2023年10月19日9时发布“大雾黄色预警信号”，预计未来12小时，我县文峰镇、上磺镇、古路镇、塘坊镇、菱角镇、尖山镇、朝阳镇、通城镇、双阳乡、胜利乡、城厢镇、宁厂镇、红池坝镇、长桂乡等海拔600米以上及坪坝河谷地区将出现能见度小于500米的雾，局部地区能见度小于200米。请以上各地注意防范大雾天气可能造成的影响。]]></summary>
        <author>
            <name>国家预警信息发布中心</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[重庆市开州区发布暴雨黄色预警]]></title>
        <id>http://www.cneb.gov.cn/yjxx/huangsyj/20231019/t20231019_526455747.html</id>
        <link href="http://www.cneb.gov.cn/yjxx/huangsyj/20231019/t20231019_526455747.html"/>
        <updated>2023-10-19T00:21:00.000Z</updated>
        <summary type="html"><![CDATA[开州区气象局2023年10月19日8时15分发布“暴雨黄色预警信号”，预计未来6小时，满月镇、关面乡、雪宝山镇、大进镇、麻柳乡累计雨量将达50-70毫米，最大小时雨量可达20-30毫米，并伴有雷电、阵性大风等强对流天气。]]></summary>
        <author>
            <name>国家预警信息发布中心</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[重庆市巫溪县发布暴雨黄色预警]]></title>
        <id>http://www.cneb.gov.cn/yjxx/huangsyj/20231019/t20231019_526455734.html</id>
        <link href="http://www.cneb.gov.cn/yjxx/huangsyj/20231019/t20231019_526455734.html"/>
        <updated>2023-10-19T00:07:00.000Z</updated>
        <summary type="html"><![CDATA[巫溪县气象台2023年10月19日7时40分发布“暴雨黄色预警信号”，预计未来6小时，我县文峰镇、天元乡、中梁乡、红池坝镇、朝阳镇、尖山镇、长桂乡等街道（乡镇）累计雨量将达50-80毫米，最大小时雨强可达20-30毫米，并伴有阵性大风等强对流天气.]]></summary>
        <author>
            <name>国家预警信息发布中心</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[重庆市开州区发布大雾黄色预警]]></title>
        <id>http://www.cneb.gov.cn/yjxx/huangsyj/20231019/t20231019_526455698.html</id>
        <link href="http://www.cneb.gov.cn/yjxx/huangsyj/20231019/t20231019_526455698.html"/>
        <updated>2023-10-18T22:50:00.000Z</updated>
        <summary type="html"><![CDATA[开州区气象局2023年10月19日6时40分发布“大雾黄色预警信号”，预计10月19日6时至13时，我区大部分乡镇（街道）海拔400米以上将出现能见度小于500米的雾，局部地区能见度小于200米。请各地注意防范大雾天气可能造成的影响。]]></summary>
        <author>
            <name>国家预警信息发布中心</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[发布了: 思考的深度即逻辑链的长度。 大多数人习惯于因为a所以b的简单短小逻辑链，这样大脑理解接收起来毫无压力。 如果想要提升思考深度，也就是提升逻辑链的长...]]></title>
        <id>https://m.okjike.com/originalPosts/65300c9899f2123c744ac7f1</id>
        <link href="https://m.okjike.com/originalPosts/65300c9899f2123c744ac7f1"/>
        <updated>2023-10-18T16:49:28.000Z</updated>
        <summary type="html"><![CDATA[思考的深度即逻辑链的长度。
大多数人习惯于因为a所以b的简单短小逻辑链，这样大脑理解接收起来毫无压力。
如果想要提升思考深度，也就是提升逻辑链的长度，有两个方向可以使劲：因和果。
往因上使劲的方法，就是著名的5 why。 针对你看到的问题，连续追问为什么，直接问出的那个答案显而易见。
往果上使劲的方法，是一个类似的方法 5 so。针对你看到的一个现象，连续追问so what？ 
通过一左一右两个方向的不断延伸，你的逻辑思考链条也就脱离了简单的因为所以式思考框架。
方法很简单，甚至可能你都早已知晓，坚持使用，直到习惯成自然， 很难。]]></summary>
        <author>
            <name>李继刚的即刻动态</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[发布了: 逻辑即关系。 锻炼逻辑思考能力只需要搞懂两件事： 概念和关系。 先明确你要讨论的对象是什么，通过概念来解决。 再搞定概念(及其属性)之间的关系，通过...]]></title>
        <id>https://m.okjike.com/originalPosts/652ffee8aa7d4f2b30cdbb8e</id>
        <link href="https://m.okjike.com/originalPosts/652ffee8aa7d4f2b30cdbb8e"/>
        <updated>2023-10-18T15:51:04.000Z</updated>
        <summary type="html"><![CDATA[逻辑即关系。
锻炼逻辑思考能力只需要搞懂两件事： 概念和关系。
先明确你要讨论的对象是什么，通过概念来解决。
再搞定概念(及其属性)之间的关系，通过推理来解决。
说一个人脑子没逻辑，要不就是说这人没搞清楚自己在讲的东西，要不就是说这人讲的话没弄清楚几个概念之间的关系。]]></summary>
        <author>
            <name>李继刚的即刻动态</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Tandem: A Tale of Shadows]]></title>
        <id>https://store.epicgames.com/zh-CN/p/tandem-a-tale-of-shadows-c3f55e</id>
        <link href="https://store.epicgames.com/zh-CN/p/tandem-a-tale-of-shadows-c3f55e"/>
        <updated>2023-10-18T15:00:00.000Z</updated>
        <summary type="html"><![CDATA[艾玛和泰迪熊：影子历险记 以独特的俯视视角与侧向卷轴玩法和非凡的美学，重新定义了益智平台游戏这一大游戏类型。快来帮助艾玛和泰迪熊芬顿，解开著名魔术师托马斯·凯恩失踪一案的谜团吧。]]></summary>
        <author>
            <name>Hatinh Interactive</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[发布了: 如何让 ChatGPT 更好地思考，以获得更佳的输出效果，有几个比较成熟的实践和技巧，背后都有对应的论文。 1）CoT，思维链提示，https://arxiv.org/abs/22...]]></title>
        <id>https://m.okjike.com/originalPosts/652faa1cbb3e3660e8041b7b</id>
        <link href="https://m.okjike.com/originalPosts/652faa1cbb3e3660e8041b7b"/>
        <updated>2023-10-18T09:49:16.000Z</updated>
        <summary type="html"><![CDATA[如何让 ChatGPT 更好地思考，以获得更佳的输出效果，有几个比较成熟的实践和技巧，背后都有对应的论文。
1）CoT，思维链提示，https://arxiv.org/abs/2205.10625，将思考过程打印出来或者提供 one-shot/few-shot，输出的准确性会更高；例如你可以在提示词后追加：“Let's think step by step”，效果就要好一些。
对于决策推理性的问题，CoT 的效果都比较不错，事实上这个涌现效果是被发现而不是被设计出来的，后来它的有效性在这篇论文（https://arxiv.org/abs/2205.10625）中得到了证明。
2）Self-Consistency，自洽性，https://arxiv.org/abs/2203.11171，在多次输出中找到投票最高的那条，例如你可以这么跟 ChatGPT 说：
“对于每一个问题，你会思考 5 种不同的思路，然后将它们结合起来，输出最佳的措辞、最全面和最准确的答案。”（图一）
3）Least to Most prompting，本质是规划+逐步执行，https://arxiv.org/abs/2205.10625，对于复杂的任务，单纯使用 CoT + SC 效果依然不会太好，可以让 ChatGPT 先自己去拆解问题再回答：
"对于每一个问题，你首先需要回答是否将问题分解为子问题，若否，直接给出答案；若是，则将问题拆解为子问题，然后将它们结合起来，输出最佳的措辞、最全面和最准确的答案。"
“To solve {problem}, we need to……”，让大模型开启这种思维模式，不断细化问题，结果会更好。（图二）
4）Multi-Persona Self-Collaboration，多角色扮演，https://arxiv.org/abs/2307.05300，这个有点类似之前提到的 AutoGen，让多个代理相互对话来解决问题，只不过 AutoGen 是从工程层面真正做到了多 Agents 交互，而这里提到的，是让 ChatGPT 扮演多重人格/角色，例如：
“你可以扮演任何角色，针对我给出的问题，请提供三个最相关的角色，对问题进行两轮讨论，然后你综合讨论结果总结最佳方案。请打印三个角色的讨论过程以及最后的方案。”（图三）
以上，这些技巧的运用并不复杂，但是思想比较重要，掌握了之后，稍微修改下 Prompt，便可以得到更加符合预期的结果。#AI学习#]]></summary>
        <author>
            <name>Barret李靖的即刻动态</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[[7018942344208580646#1024一起掘金#] 大的来了，今天给fast-create-variable支持了react中使用，虽然我不用react[灵光一现]]]></title>
        <id>7291186128361766968</id>
        <link href="https://juejin.cn/pin/7291186128361766968"/>
        <updated>2023-10-18T08:51:01.000Z</updated>
        <summary type="html"><![CDATA[[7018942344208580646#1024一起掘金#] 
大的来了，今天给fast-create-variable支持了react中使用，虽然我不用react[灵光一现]]]></summary>
        <author>
            <name>Simon_He</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[你们都用什么开发工具]]></title>
        <id>7291135064842158114</id>
        <link href="https://juejin.cn/pin/7291135064842158114"/>
        <updated>2023-10-18T08:00:51.000Z</updated>
        <summary type="html"><![CDATA[你们都用什么开发工具]]></summary>
        <author>
            <name>无畏先锋</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[CSS 还原拉斯维加斯球数字动画]]></title>
        <id>https://juejin.cn/post/7290968251911356473</id>
        <link href="https://juejin.cn/post/7290968251911356473"/>
        <updated>2023-10-18T02:37:42.000Z</updated>
        <summary type="html"><![CDATA[我的小册 《CSS 技术揭秘与实战通关》上线了，想了解更多有趣、进阶、系统化的 CSS 内容，可以猛击 - LINK。
最近大家刷抖音，是否有刷到拉斯维加斯的新地标 「Sphere」：

场馆内部的视觉效果非常惊人，其中一个效果让我虎躯一震：

我的第一想法就是，这个看起来用 CSS 也可以实现嘛？还有 CSS 不能实现的？
本文，就将尝试使用 CSS，大致还原这个效果。
拆解动画效果
其实，上述的动画效果，本质就是一个 3D 立方体。
同时，3D 立方体上每个面存在颜色不一样的文字，文字和颜色都在随机变化。
也就是说，我们需要实现一个 3D 立方体：

同时，我们还需要实现这样一个动画效果 -- 文字和颜色都在随机变化的平面效果：

两者组合一下，再挪动 3D 元素的景深距离，就能实现我们想要的效果！
好，下面我们一个一个实现。
实现一个 3D 立方体
实现一个 3D 立方体，相对另外一个文字和颜色都在随机变化的平面效果而言，属于非常非常简单的一步了。
我们在非常多篇文章中也讲过具体的实现方式：
最常见的 3D 图形，莫过于一个 3D 立方体。
如果没有上下两个面，只是一个 4 个面的图形，大概是这样：

这样一个图形，利用 CSS 3D，如何快速实现呢？
首先，构造这么一个结构：
<div class="perspective">
        <div class="container">
                <div class="img">3</div>
                <div class="img">D</div>
                <div class="img">视</div>
                <div class="img">图</div>
        </div>
</div>

4 个面…]]></summary>
        <author>
            <name>Chokcoco</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[2023年金九银十面经，假的今年没有金九银十]]></title>
        <id>https://juejin.cn/post/7290931758788051005</id>
        <link href="https://juejin.cn/post/7290931758788051005"/>
        <updated>2023-10-18T02:05:19.000Z</updated>
        <summary type="html"><![CDATA[24岁的我选择了裸辞
前言
说实话选择裸辞后很迷茫，但是又不想在原本的公司上班，目前处于昏昏沉沉的状态，工作也是混一天是一天，没有了什么明确的目标，不知道屏幕前的你们有没有这种感觉,目前想着休息一段时间，可是又不敢休息，钱包不允许。
今年的金九银十根本没有，环境确实很差。

公司A
公司A:第一家面试的公司，没过，一家初创公司，没过也是情理之中，毕竟我面试的状态太差了，很多问题都没回答上来，这时候没什么准备，刚开始刷面试题，不过说实话有点打击，作为毕业以后第一次换工作的经历，刚毕业的时候面一个拿一个offer，甚至都怀疑这两年工作是不是白做了，技术一直下坡路。
笔试题目
第一题.  [1,3,5,2,19,30,10] 请将数组排序从小到大
[1,3,5,2,19,30,10] .sort((a,b) => a - b)
加分项： 题目之外还可以自己写一些排序例如算法，但是笔者只答了 sort方法排序
什么是防抖和节流？ 它们有什么区别 怎么实现
防抖： 延迟一定时间执行某一方法，如果重新触发时间重置
节流： 是规定时间内多次触发方法只执行一次
区别: 一个是立即执行规定时间内不重复执行，一个是规定时间内只执行一次，其实区别可以不用回答，介绍防抖和节流就包含了区别
实现： 因为现场是笔试所以我这里的答案是简易版的防抖和节流
防抖实现：
function debounce(func, time) {
        let timer = null;
        return function (...args) {
            clearInterval(timer);
            timer = setTimeout(() => {
                func.apply(this, args)
            }, ti…]]></summary>
        <author>
            <name>柒丶月</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[萝卜刀真的太危险了,于是我用Cocos做了一个]]></title>
        <id>https://juejin.cn/post/7290848097159807017</id>
        <link href="https://juejin.cn/post/7290848097159807017"/>
        <updated>2023-10-18T00:30:30.000Z</updated>
        <summary type="html"><![CDATA[点击上方亿元程序员+关注和★星标

引言
大家好，我是亿元程序员，一位有着8年游戏行业经验的主程。
昨天，我女儿和我说想买一把萝卜刀，众所周知，萝卜刀在潜意识当中是存在一定的危险的，所以我果断拒绝了，但是我还是想体验一下，怎么办？于是我就用Cocos做了一个。
1.准备素材
1.首先我们从网络上找到一张关于萝卜刀的图片。

2.导入PS，把我们需要的其中一把裁剪出来。

3.然后我们通过精湛的PS技术(不是)，把萝卜刀拆解。

4.把资源放进去Cocos。

下面我们一起让萝卜刀动起来
2.做动画
要想萝卜刀尽可能和实物一样，我们得做动画，我们利用Cocos的动画编辑器简单做一下。
1.首先我们先创建个Knife节点，把3部分的图片放进去并且按照结构拼接好。

2.调整我们的转动轴位置，即锚点。

3.编辑动画。
白色部分我们添加一个旋转动画，添加一个angle属性，在0.1秒的地方加一个关键帧，并把它调整至打开状态。

然后给刀尖部分添加一个position属性，在0.15秒处将添加一个关键帧，并把它调整成展开状态。

刀尖展开后，我们需要把白色部分复原，在0.25秒处添加一个关键帧，并且把它复原

到这里，萝卜刀的简单动画已经编辑完成，我们把动画调整回最初状态，然后保存。
下面我们来编写控制萝卜刀运动的代码。
3.写代码
为了让萝卜刀有实物一样的甩刀效果，我们利用一下重力感应控制。

关键Api是cc.SystemEvent.EventType.DEVICEMOTION事件，我们监听一下。

还需要是否启用加速度计事件把打开。

动画的播放比较简单。每次播放之前把方向改变一下，实现打开和关闭效果。

4.效果演示
构建小游戏。

效果演示。

结语
本文仅供娱乐参考学习，萝卜刀有风险，大家谨慎对待。
在哪里可以看到如此清晰的思路，快跟上我的节奏！关注我，和我一起了解游戏行业最新动态，学习游戏开发技巧。
我是"亿元程序员"，一位有着8年游戏行业经验的主程。在游戏开发中，希望能给到您帮助, 也希望通过您能帮助到大家。
AD:笔者线上的小游戏《贪吃蛇掌机经典》《填色之旅》《重力迷宫球》大家可以自行点击搜索体验。
实不相瞒，想要个赞和在看！请把该文章分享给你觉得有需要的其他小伙伴。谢谢！
推荐专栏：
和8年游戏主程一起学习设计模式
8年主程手把手打造Cocos独立游戏开发框架
从零开始开发贪吃蛇小游戏到上线系列
游戏开发的技巧、心得、资讯
点击下方绿色按钮+关注]]></summary>
        <author>
            <name>亿元程序员</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[[7073670907851440160#新人报道#] 大神们 用homebrew 是不兼容arm吗？ 下载jkd8时显示这样 openjdk@8: The x86_64 architecture is required for this software....]]></title>
        <id>7290848097159102505</id>
        <link href="https://juejin.cn/pin/7290848097159102505"/>
        <updated>2023-10-17T16:40:48.000Z</updated>
        <summary type="html"><![CDATA[[7073670907851440160#新人报道#] 大神们 用homebrew 是不兼容arm吗？  下载jkd8时显示这样
openjdk@8: The x86_64 architecture is required for this software.
Error: openjdk@8: An unsatisfied requirement failed this build.
求解答]]></summary>
        <author>
            <name>用户1478004274607</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[面试官：做过性能优化？我：任务切片！]]></title>
        <id>https://juejin.cn/post/7290753121702215691</id>
        <link href="https://juejin.cn/post/7290753121702215691"/>
        <updated>2023-10-17T07:43:15.000Z</updated>
        <summary type="html"><![CDATA[代码背景
本次分享基于一次线上环境的卡顿事故，客户数据体量过大导致的页面卡顿甚至页面直接崩溃的问题。现在我们将会把此次事故抽象成为大家更好理解的案例，从而来进行分析和解决。
同时希望大家在阅读完之后可以了解到页面卡顿背后的底层原因，还有任务切片的解决原理！
<body>
    <input type="text">
    <button id="my-button">执行任务</button>
    <!-- box容器 -->
    <div id="box" style="height:500px;width:400px;overflow: auto;margin-top:24px;">
</body>

// box容器溢出滚动
const box = document.getElementById('box')
for(let i=0;i<1000;i++){
    const myText = document.createElement('h2')
    myText.innerText = i
    box.appendChild(myText)
}

// 执行任务
const myButton = document.getElementById('my-button')
myButton.addEventListener('click',load)
function load() {
  const total = 300000;
  for (let i = 0; i < total; i++) {
      console.log(i)
  }
}

点击执行任务按钮会发现，我们不仅不能和输入框进行交互，连box容器区域的滚动也不再有响应，整个页面卡顿住了，直到load任务执行完成，页面才恢复响应，输入框才能正常使用，box容器区域也能…]]></summary>
        <author>
            <name>前端不死</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[面试官：如何判断两个数组的内容是否相等]]></title>
        <id>https://juejin.cn/post/7290786959441117243</id>
        <link href="https://juejin.cn/post/7290786959441117243"/>
        <updated>2023-10-17T07:26:43.000Z</updated>
        <summary type="html"><![CDATA[title: JS
titleTemplate: 两数组内容比较
theme: channing-cyan
题目
给定两个数组，判断两数组内容是否相等。
不使用排序
不考虑元素位置
例：
[1, 2, 3] 和 [1, 3, 2] // true
[1, 2, 3] 和 [1, 2, 4] // false


思考几秒：有了😀😀
1. 直接遍历✍
直接遍历第一个数组，并判断是否存在于在第二个数组中
求差集, 如果差集数组有长度，也说明两数组不等（个人感觉比上面的麻烦就不举例了）
const arr1 =  ["apple", "banana", 1]
const arr2 =  ["apple", 1, "banana"]

function fn(arr1, arr2) {
  // Arrary.some: 有一项不满足 返回false
  // Arrary.indexOf: 查到返回下标，查不到返回 -1
  if (arr1.length !== arr2.length) {
    return false;
  }
  return !arr1.some(item => arr2.indexOf(item)===-1)
}

fn(arr1,arr2) // true

细心的小伙伴就会发现：NaN 会有问题
const arr1 =  ["apple", "banana", NaN]
const arr2 =  ["apple", NaN, "banana"]

function fn(arr1, arr2) {
  if (arr1.length !== arr2.length) {
    return false;
  }
  return !arr1.some(item => arr2.indexOf(item)===-1)
}

fn(arr…]]></summary>
        <author>
            <name>程序员小易</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[ES6的一些高级技巧]]></title>
        <id>https://juejin.cn/post/7290751877734776893</id>
        <link href="https://juejin.cn/post/7290751877734776893"/>
        <updated>2023-10-17T07:21:31.000Z</updated>
        <summary type="html"><![CDATA[highlight: a11y-dark
theme: cyanosis
引言
ES6（ECMAScript 2015）引入了许多新的功能和语法，其中一些功能可能相对较冷门，但非常实用。本文将介绍一些这样的高级技巧，包括
Object.entries()
Object.fromEntries()
Symbol类型和Symbol属性
WeakMap和WeakSet
Promise.allSettled()
BigInt
Array.of
Array.from
.at和flat
1.  Object.entries()和Object.fromEntries()
Object.entries()方法返回一个给定对象自身可枚举属性的键值对数组。
Object.fromEntries()方法将键值对列表转换为一个对象。
当使用Object.entries()时，可以传入一个对象作为参数。这个对象可以是任何具有可枚举属性的对象。例如：
const obj = { a: 1, b: 2, c: 3 };

const entries = Object.entries(obj);
console.log(entries); // [["a", 1], ["b", 2], ["c", 3]]

在这个例子中，我们将一个包含三个属性的对象传递给Object.entries()方法，并将返回的结果存储在entries变量中。entries变量现在是一个包含键值对数组的数组。
同样地，当使用Object.fromEntries()时，可以传入一个键值对数组作为参数。这个数组中的每个元素都是一个包含键和值的数组。例如：
const entries = [["a", 1], ["b", 2], ["c", 3]];

const obj = Object.fromEntries(entries);
c…]]></summary>
        <author>
            <name>前端俊刚</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[发布了: 焦虑和痛苦的根源，从空间维度看，是与比自己更强的人对比，慕强是一个无限陷阱，永远都有比自己更强的人；从时间维度看，是与未来的不确定性比，今天的...]]></title>
        <id>https://m.okjike.com/originalPosts/652e1cbfaa7d4f2b30a24f52</id>
        <link href="https://m.okjike.com/originalPosts/652e1cbfaa7d4f2b30a24f52"/>
        <updated>2023-10-17T05:33:51.000Z</updated>
        <summary type="html"><![CDATA[焦虑和痛苦的根源，从空间维度看，是与比自己更强的人对比，慕强是一个无限陷阱，永远都有比自己更强的人；从时间维度看，是与未来的不确定性比，今天的优势到了明天就不一定了，例如前段时间一个搞 C 的程序员悲观叹息自己被时代踢出了局。
看似消极却有效的观点：接受自己的有限性，接受命运的安排。]]></summary>
        <author>
            <name>Barret李靖的即刻动态</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[发布了: 在跟 ChatGPT 交互的时候，为什么让它打印思考过程，或者给它几个样本示例，结果会变得更好呢？https://arxiv.org/abs/2305.15408，这篇论文从理论层面...]]></title>
        <id>https://m.okjike.com/originalPosts/652e0acbd5f9a5727f2664c9</id>
        <link href="https://m.okjike.com/originalPosts/652e0acbd5f9a5727f2664c9"/>
        <updated>2023-10-17T04:17:15.000Z</updated>
        <summary type="html"><![CDATA[在跟 ChatGPT 交互的时候，为什么让它打印思考过程，或者给它几个样本示例，结果会变得更好呢？https://arxiv.org/abs/2305.15408，这篇论文从理论层面论证了 CoT 为大模型提效的原理。
CoT（Chain of Thought prompting）有两种比较常见的实践方式，一个是在提示词中增加 Let’s think step by step，让大模型打印思考过程；另外一种是给出一些样本示例，让大模型依葫芦画瓢给出结果。
如果让大模型直接输出结果，那么随着输入内容长度的增加，准确推理所需要的神经元数量会以超越多项式（非线性增长）的速度增长，原因很简单，对于不存在并行算法解的推理性问题，例如 (16 - 3 - 4) * 2，Transformer 模型不擅长应对，论文使用了理论计算机科学中的电路复杂性理论进行了论证。
简单来说，输入文本越长，正确推理所需要消耗的资源就越多。例如让大模型回答 (16 - 3 - 4) * 2 它会给出正确的结果，但是让它回答“Janet 的鸭子每天下 16 个蛋，她每天早餐吃 3 个，给朋友每天 4 个。其余的卖钱，每个鸡蛋 2 美元。她每天赚多少钱?”，出错的概率就比较大了，因为信息量变大了，它给出的结果可能会是：“这意味着她每天会用掉 3 + 4 = 7 个鸡蛋。剩余的鸡蛋卖出去每个 2 美元，因此她每天总共卖出 7 * 2 = 14 美元的鸡蛋。答案是 14 美元。”，大模型在接受大量的信息利用贪婪解码策略推理时，受限于计算能力，它会丢失了部分信息。
而如果让大模型打印思考过程，就不一样了，在输出的时候，内容会不断被反馈到输入层，这可以增加模型的有效深度（正比于 CoT 的输出长度），也就是说，每次输入都将比上一次输入更具体和详细。因此，在不增加计算资源的情况下，大模型的有效深度将会随着输出长度的增加而增加，这样大模型就能更好地理解问题，并逐步推理出正确的答案了。]]></summary>
        <author>
            <name>Barret李靖的即刻动态</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[打卡打卡，今天周二]]></title>
        <id>7290733884136030242</id>
        <link href="https://juejin.cn/pin/7290733884136030242"/>
        <updated>2023-10-17T03:54:52.000Z</updated>
        <summary type="html"><![CDATA[打卡打卡，今天周二]]></summary>
        <author>
            <name>Simon_He</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[转发了: 如果官方英文文档读不进去，这里有人用心整理好的翻译对比稿，read the fuck manual。]]></title>
        <id>https://m.okjike.com/reposts/652df313d5f9a5727f23cfe9</id>
        <link href="https://m.okjike.com/reposts/652df313d5f9a5727f23cfe9"/>
        <updated>2023-10-17T02:36:03.000Z</updated>
        <summary type="html"><![CDATA[如果官方英文文档读不进去，这里有人用心整理好的翻译对比稿，read the fuck manual。

转发 @大咕咕咕咕驴: 送大家一本大黄书。OpenAI 六月份发了一个 GPT best practices，比市面上任何几千九百九的提示词工程课可能都实用。我只是做了编译和补充用例和排版🙏]]></summary>
        <author>
            <name>李继刚的即刻动态</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[这个前端Api管理方案会更好？]]></title>
        <id>https://juejin.cn/post/7290558277666930744</id>
        <link href="https://juejin.cn/post/7290558277666930744"/>
        <updated>2023-10-17T02:21:37.000Z</updated>
        <summary type="html"><![CDATA[简介
大家好，前端小白一枚，目前接触后台管理系统比较多，经常遇到不同对象的增删改查的接口，如何对Api进行一个有比较好的管理是个问题。在学习偏函数的时候有了灵感，想到一个不错的API管理方案，并应用在项目一个模块当中，并且开发效率和维护性可读性都很不错，和大家分享一下~
当前项目的前端API管理方案
// 封装的接口
export function obj1Func1(){}
export function obj1Func2(){}
export function obj2Func3(){}
export function obj2Func4(){}

// 引入方式
import { obj1Func1, obj1Func2, obj2Func3, obj2Func4 } from 'xxx'

// 使用方式
const params = {...}
await obj1Func1(params)

当接口多了之后，我们管理接口(查找)是一件很麻烦且废眼睛的事，需要一直翻，注释看不过来，维护性和可读性差。
统一export方式
// 封装的接口
function obj1Func1(){}
function obj1Func2(){}
function obj2Func3(){}
function obj2Func4(){}
// 导出接口
export {
    obj1Func1,//注释
    obj1Func2,//注释
    obj2Func3,//注释
    obj2Func4,//注释
    ...
}

// 引入方式
import { obj1Func1, obj1Func2, obj2Func3, obj2Func4 } from 'xxx'

// 使用方式
const params = {...}
await obj1Func1(pa…]]></summary>
        <author>
            <name>爱吃好果汁丶</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[#1024一起掘金# 新增一个函数节点代码编辑模式]]></title>
        <id>7290494120206909492</id>
        <link href="https://juejin.cn/pin/7290494120206909492"/>
        <updated>2023-10-16T17:14:17.000Z</updated>
        <summary type="html"><![CDATA[#1024一起掘金#   新增一个函数节点代码编辑模式]]></summary>
        <author>
            <name>掘金王嘉尔</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[转发了: 这就涉及到另一个学东西的技巧了： 自己起一个空白文档，把自己当成官方的运营人员，试着帮官方写一个手册文档。 不会写就各种学，学完就回来接着写。 ...]]></title>
        <id>https://m.okjike.com/reposts/652d5bcaaa7d4f2b3093afcb</id>
        <link href="https://m.okjike.com/reposts/652d5bcaaa7d4f2b3093afcb"/>
        <updated>2023-10-16T15:50:34.000Z</updated>
        <summary type="html"><![CDATA[这就涉及到另一个学东西的技巧了： 自己起一个空白文档，把自己当成官方的运营人员，试着帮官方写一个手册文档。 不会写就各种学，学完就回来接着写。 写完即学成之日。

转发 @李继刚: 学一门新东西，最好的入门方法：读官方文档(手册)。
只要把心慢下来，慢慢地读，一节一节地读，半天不到时间，读完官方手册，你就能不花一分钱的学到你最想学的那些知识。
这道理如此简单，但行者甚夷，怪哉。]]></summary>
        <author>
            <name>李继刚的即刻动态</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[发布了: 学一门新东西，最好的入门方法：读官方文档(手册)。 只要把心慢下来，慢慢地读，一节一节地读，半天不到时间，读完官方手册，你就能不花一分钱的学到你...]]></title>
        <id>https://m.okjike.com/originalPosts/652d5aca38c9be71869ebc10</id>
        <link href="https://m.okjike.com/originalPosts/652d5aca38c9be71869ebc10"/>
        <updated>2023-10-16T15:46:18.000Z</updated>
        <summary type="html"><![CDATA[学一门新东西，最好的入门方法：读官方文档(手册)。
只要把心慢下来，慢慢地读，一节一节地读，半天不到时间，读完官方手册，你就能不花一分钱的学到你最想学的那些知识。
这道理如此简单，但行者甚夷，怪哉。]]></summary>
        <author>
            <name>李继刚的即刻动态</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[发布了: 不要沉溺于信息消费，要追求知识生产。]]></title>
        <id>https://m.okjike.com/originalPosts/652d595338c9be71869e991f</id>
        <link href="https://m.okjike.com/originalPosts/652d595338c9be71869e991f"/>
        <updated>2023-10-16T15:40:03.000Z</updated>
        <summary type="html"><![CDATA[不要沉溺于信息消费，要追求知识生产。]]></summary>
        <author>
            <name>李继刚的即刻动态</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[发布了: 养育的起点，是了解和理解。 孩子的每一个行为，背后都隐藏着对这个世界运行逻辑的理解，他们的理解可能并不准确，作为大人，需要识别他们的逻辑，并予...]]></title>
        <id>https://m.okjike.com/originalPosts/652d49a2d5f9a5727f17f366</id>
        <link href="https://m.okjike.com/originalPosts/652d49a2d5f9a5727f17f366"/>
        <updated>2023-10-16T14:33:06.000Z</updated>
        <summary type="html"><![CDATA[养育的起点，是了解和理解。
孩子的每一个行为，背后都隐藏着对这个世界运行逻辑的理解，他们的理解可能并不准确，作为大人，需要识别他们的逻辑，并予以提醒和纠正，帮助他们建立基本的人生信条。]]></summary>
        <author>
            <name>Barret李靖的即刻动态</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[难以置信，一个小小的需求让我捣鼓出一个提效的网站来]]></title>
        <id>https://juejin.cn/post/7290474926943010851</id>
        <link href="https://juejin.cn/post/7290474926943010851"/>
        <updated>2023-10-16T13:33:45.000Z</updated>
        <summary type="html"><![CDATA[难以置信，一个小小的需求让我捣鼓出一个提效的网站来
需求介绍
事情是这样的，有个群友在业务当中碰到一个小小的需求，需求是这样的: 页面当中存在多个输入框，输入框的 value 值是一个数值组成的字符串（盲猜应该是身份证号码），这个字符串的位数是 15 位或者是 18 位，例如:'621848063680370'(15 位)和'621848063688370808'(18 位)，然后默认的值是这样的，现在问题来了，需求希望在这些数值中插入空白符号，比如 15 位的数字就按照 6 + 6 + 3 的格式分隔，分隔的时候需要使用空白符号。比如'621848063680370'分隔后应该变成'621848 063680 370',也就是数字位数到了第 6 位就加个空白符号分隔，...依次类推，而 18 位数字的分割规则则是:6 + 4 + 4 + 4。比如'621848063688370808'应该分隔成'621848 0636 8837 0808'。
这个需求就是对字符串的处理，提到分隔替换，那么我们就可以想到强大的字符串替换方法 replace，这个方法可以接受 2 个参数，一个参数通常是一个正则表达式，第二个参数则是一个回调函数，用于定义替换后返回字符串。因此，我的第一个想法就是使用正则表达式去处理，如何处理呢？
原理分析
首先我们需要去理解这个规则，从需求我们可以发现，不同的位数，规则就会有所不同，因此我们可以提前用一个数据来表示这种规则，为了保持良好的扩展性，我设计了如下字段:
type spaceRule = {
  digit: number; // 位数
  rule: RegExp; //规则
  symbolNumber: number; // 插入符号数量
  symbolName: string; // 插入符号
};

可以看到，我设计了四个参数，正如注释…]]></summary>
        <author>
            <name>夕水</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[发现一款非常好用的云文档，不论记笔记、写文档、画脑图、做计划、管项目、构建知识库还是高效团队协作，都比以前事半功倍，不论个人用还是团队用都很不错，推荐...]]></title>
        <id>7290382189992427559</id>
        <link href="https://juejin.cn/pin/7290382189992427559"/>
        <updated>2023-10-16T09:28:48.000Z</updated>
        <summary type="html"><![CDATA[发现一款非常好用的云文档，不论记笔记、写文档、画脑图、做计划、管项目、构建知识库还是高效团队协作，都比以前事半功倍，不论个人用还是团队用都很不错，推荐给你！
https://www.wolai.com/signup?invitation=C2ZS3U2Z]]></summary>
        <author>
            <name>Passerby_Z</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[我最近3个月的前端专业学习记录]]></title>
        <id>https://juejin.cn/post/7290226270641618979</id>
        <link href="https://juejin.cn/post/7290226270641618979"/>
        <updated>2023-10-16T07:57:46.000Z</updated>
        <summary type="html"><![CDATA[以下内容是2023年7月17~10月16日自己每周学习的记录
第29周 7.17-7.23
这周在项目中使用了一种新的布局。
就是下图所示的布局效果。

在过去，这种图片固定比例的，宽度自适应的布局都至少只要2层以上的标签，这一次，使用了容器元素和全新的cqw单位，可以一层标签即实现最终的效果。
相关实现已经整理成文，有兴趣可以访问这里：“CSS高宽不等图片固定比例布局的三重进化”。
第30周 7.24-7.30
本周研究了了一个新的CSS属性text-wrap，目前仅Chrome浏览器支持，兼容性如下图所示：

其中名为balance的属性值很有趣，可以让div元素中的内联元素尽可能宽度一致排列，布局差异如下所示：

这个属性其实很有用，例如类似朋友圈点赞的那种布局效果，目前的实现都是优先第一行显示的。

有了text-wrap:balance属性后，就可以是下图所示的布局效果，体验会更好。

更多内容可以访问这里了解。
第31周 7.31-8.6
在做项目的时候，偶然看到有同事的CSS代码中对samp标签样式进行了定义，然后研究了下这个已经没用过的HTML标签，发现还是一个系列，可以用来帮助代码文本的语义化呈现，具体如下：
kbd: 键盘输入的文字内容
samp: 范例输出
code: 计算机代码输出
var: 变量与自变量实例
平时只用过 code 标签 ，结果没想到还有其他类似HTML属性，现代浏览器全部都支持。
更详细的内容我已经这里成文章了，有兴趣的可以访问这里了解。
第32周 8.7-8.13
本周学习了两个HTML全局属性，nonce和popover属性。
nonce与安全相关，配合meta元素的CSP设置，可以决定哪个内联JS执行，哪个内联<script›元素不执行。
假设页面有如下所示的代码：
<meta http-equiv="Content-Security-Policy" content="script-src 'nonce-NDhkODkxMzYtNGUxZS00N2NjLTk1YTItNWMyOTM4YzdhZGJj'">
<script nonce="NDhkODkxMzYtNGUxZS00N2NjLTk1YTItNWMyOTM4YzdhZGJj">// …</script>

则此时，只有nonce值有设置，且值匹配的]]></summary>
        <author>
            <name>张鑫旭</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[发布了: 时间，比金子还要宝贵。 你关注什么，你就会变成什么样的人。 所以，不要去关注战争冲突，不要去关注年收入超过1个亿的人数，不要去关注隔壁邻居又买了...]]></title>
        <id>https://m.okjike.com/originalPosts/652ce1bd99f2123c74039542</id>
        <link href="https://m.okjike.com/originalPosts/652ce1bd99f2123c74039542"/>
        <updated>2023-10-16T07:09:49.000Z</updated>
        <summary type="html"><![CDATA[时间，比金子还要宝贵。
你关注什么，你就会变成什么样的人。
所以，不要去关注战争冲突，不要去关注年收入超过1个亿的人数，不要去关注隔壁邻居又买了什么。
这些你了解得再透彻，你的水平也不会发生任何改变。
找到最重要的目标，计算自己的时间成本，在具体的工作中创造心流的体验，珍惜每天的第三个8小时，才是你可以做的。
我看到过一句话，在最后和你分享：
如果你买个摄像头放在家里，用上帝视角观察自己每天都在做什么，你会发现——你富不起来真是太正常了。
时间是不可再生的资源。
至少，你要对得起自己的时间吧。
－－刘润。]]></summary>
        <author>
            <name>李继刚的即刻动态</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[[7018942344208580646#1024一起掘金#] [呲牙]发现一个很方便的局域网传文件工具，一个wifi下的所有手机和电脑，不用下APP，网页就可以，yanhuo7.com . P2P，免流...]]></title>
        <id>7290017749715615784</id>
        <link href="https://juejin.cn/pin/7290017749715615784"/>
        <updated>2023-10-16T04:43:58.000Z</updated>
        <summary type="html"><![CDATA[[7018942344208580646#1024一起掘金#]  [呲牙]发现一个很方便的局域网传文件工具，一个wifi下的所有手机和电脑，不用下APP，网页就可以，yanhuo7.com . P2P，免流量，蛮方便的]]></summary>
        <author>
            <name>长期价值第一位</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[原神，启动！three.js 复刻原神登录界面技术浅析]]></title>
        <id>https://juejin.cn/post/7290157103674032182</id>
        <link href="https://juejin.cn/post/7290157103674032182"/>
        <updated>2023-10-16T03:33:08.000Z</updated>
        <summary type="html"><![CDATA[之前看到有人在浏览器端复刻了原神的登录界面，效果非常还原。
本文就让我们一起来看看这种效果是如何实现的，主要分析Shader相关的部分。
怀着学习的目的，我自己也写了一版，观看地址：https://genshin-replica.miaohezi.com/

背景
背景是一个渐变色，由 3 种颜色组成，可以用Shader的smoothstep函数配合UV坐标的y分量画出来。
float y=1.-uv.y;
float mask1=1.-smoothstep(0.,stop1,y);
float mask2=smoothstep(0.,stop1,y)*(1.-smoothstep(stop1,stop2,y));
float mask3=smoothstep(stop1,stop2,y);
col+=col1*mask1;
col+=col2*mask2;
col+=col3*mask3;


整个Shader代码我放到Shadertoy上了，预览地址：https://www.shadertoy.com/view/dstBzj
背景云
背景云由两种平面网格组成，它们有属于自己的遮罩纹理。

在Shader中，采样遮罩纹理，获取里面的透明度数据，将其作为alpha通道的值，再定义一个主颜色即可。
vec2 uv=vUv;
vec4 tex=texture(uTexture,uv);
float alpha=tex.r*.4;
vec3 col=vec3(1.8);
gl_FragColor=vec4(col,alpha);


这是其中一种平面的写法，它只有一种颜色。
另一个平面有两种颜色，是因为用了mix函数将 2 种颜色混合到了一起。
vec3 col=vec3(.090,.569,.980);
col=mix(col,vec3(.93),vec3(pow(tex.r,…]]></summary>
        <author>
            <name>alphardex</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[别再卷组件库了，Vue 拖拽库都断代了！]]></title>
        <id>https://juejin.cn/post/7290169619511377976</id>
        <link href="https://juejin.cn/post/7290169619511377976"/>
        <updated>2023-10-16T03:31:49.000Z</updated>
        <summary type="html"><![CDATA[theme: channing-cyan
前言
最近在测试 Tailwind CSS 和 Uno CSS 这两种原子化 CSS 工具是否能够有效减少打包后的文件体积时，先开始分析这些工具的优缺点，然后再直接上数据，最后做了一款经典的 TodoList 来进行测试，文章都写好了就差最后的数据了：

但测试得出来的结果相差很小，几乎没有什么太大的参考价值。想想也是，一个 TodoList 刚能有几行样式？只有在样式足够庞大的前提下这个测试才有意义，毕竟样式多了重复的部分自然也会变多，然后积少成多最终才能达到量变引起质变的效果。当然量变引起质变这个说法可能稍微夸张了点，但样式越庞大得出来的结果才越有参考价值这个肯定是没错的，于是我把原本比较简陋简洁的 TodoList 来了个大升级：

但就在给列表拖拽排序的时候我发现了一个令人难以接受的事实，说到 Vue3 拖拽库大家首先想到的是哪个？是 VueDraggable 对吧？那其次呢？假如 VueDraggable 停止维护了，并且随着 Vue 的升级也慢慢无法兼容了，大家首先想到的替代品是什么？替代品就是 Vue3 这么庞大的生态居然没有任何一款成熟的替代品！
测试原子化 CSS 时的发现
本来想着测试如下几种情况：
Vue 3 只用 Tailwind 写一个 TodoList
Vue 3 只用 UnoCSS 的属性模式写一个 TodoList
Vue 3 复杂样式用普通写法、简单样式用 Tailwind 写一个 TodoList
Vue 3 复杂样式用普通写法、简单样式用  UnoCSS 的属性模式写一个 TodoList
Vue 3 不用任何原子化 CSS 写一个 TodoList
Vue 3 不用任何原子化 CSS（但用内置的 scoped）写一个 TodoList
Vue 3 只用 CSS Module 写一个 TodoL…]]></summary>
        <author>
            <name>手撕红黑树</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[面试官：你知道websocket的心跳机制吗？]]></title>
        <id>https://juejin.cn/post/7290005438153867283</id>
        <link href="https://juejin.cn/post/7290005438153867283"/>
        <updated>2023-10-16T01:51:30.000Z</updated>
        <summary type="html"><![CDATA[theme: smartblue
前言
哈喽，大家好，我是泽南Zn👨‍🎓。在之前的一篇文章写到， 前端如何使用websocket发送消息，websocket是怎么建立连接的呢？如果断开了会怎样？如何一直保持长连接呢？接下来，本篇文章将会带你了解--- WebSocket心跳机制
一、WebSocket心跳机制
前端实现WebSocket心跳机制的方式主要有两种：
使用setInterval定时发送心跳包。
在前端监听到WebSocket的onclose()事件时，重新创建WebSocket连接。
第一种方式会对服务器造成很大的压力，因为即使WebSocket连接正常，也要定时发送心跳包，从而消耗服务器资源。第二种方式虽然减轻了服务器的负担，但是在重连时可能会丢失一些数据。
二、WebSocket心跳包机制
WebSocket心跳包是WebSocket协议的保活机制，用于维持长连接。有效的心跳包可以防止长时间不通讯时，WebSocket自动断开连接。
心跳包是指在一定时间间隔内，WebSocket发送的空数据包。常见的WebSocket心跳包机制如下：
客户端定时向服务器发送心跳数据包，以保持长连接。
服务器定时向客户端发送心跳数据包，以检测客户端连接是否正常。
双向发送心跳数据包。
三、WebSocket心跳机制原理
WebSocket心跳机制的原理是利用心跳包及时发送和接收数据，保证WebSocket长连接不被断开。WebSocket心跳机制的原理可以用下面的流程来说明：
客户端建立WebSocket连接。
客户端向服务器发送心跳数据包，服务器接收并返回一个表示接收到心跳数据包的响应。
当服务器没有及时接收到客户端发送的心跳数据包时，服务器会发送一个关闭连接的请求。
服务器定时向客户端发送心跳数据包，客户端接收并返回一个表示接收到心跳数据包的响应。
当客户端没有及时接…]]></summary>
        <author>
            <name>泽南Zn</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[回顾我这三年，都是泡沫]]></title>
        <id>https://juejin.cn/post/7289718324857880633</id>
        <link href="https://juejin.cn/post/7289718324857880633"/>
        <updated>2023-10-15T14:13:46.000Z</updated>
        <summary type="html"><![CDATA[theme: github

昨天，一个在掘金认识的小伙伴，进入了美团专门做 IDE 的基建组，心底真是替他高兴，这本来就是他应得的。
刚认识的时候还是一个工作一年的小毛孩，整天逮着我问各种问题，模板引擎、Babel、Electron、Jest、Rollup…
虽然没见过面，不知道他长什么样，在我脑海里，他就是两样放着光，对技术充满好奇心、自我驱动力很强小伙子。
我就知道他能成，因为我多少也是这样子的，尽管我现在有些倦怠。
后来，随着工作越来越忙，博客也停更了，我们便很少联系了。
不过，后面我招人，尤其是校招生或者初级开发，我都是按照他这个范本来的。我也时常跟别人提起，我认识北京这样一个小伙子。
也有可能我们这边庙太小了，这样的小伙伴屈指可数。
平台和好奇心一样重要。
大部分人智商条件不会有太多的差距，尤其是程序员这个群体，而好奇心可以让你比别人多迈出一步，经过长时间的积累就会拉开很大的差距。
而平台可以让你保持专注，与优秀的人共事，获得更多专业的经验和知识、财富，建立自己的竞争壁垒。
回到正题。
我觉得是时候阶段性地总结和回望回顾我过去这三年，却发现大部分都是泡沫。跨端、业务、质量管理、低代码、领域驱动设计... 本文话题可能会比较杂
2020 年七月，口罩第二年。我选择了跳槽，加入了一家创业公司
跨端开发的泡沫
2020 年，微信小程序已经成为国内重要的流量入口，事实也证明，我们过去几年交付的 C 端项目几乎上都是小程序。更严谨的说，应该是微信小程序，尽管很多巨头都推出了自己的小程序平台，基本上都是陪跑的。
Taro 2.x
进来后接手的第一个项目是原生小程序迁移到 Taro。
那时候，我们的愿景是“一码多端”，期望一套程序能够跑在微信小程序、支付宝小程序等小程序平台、H5、甚至是原生 App。
那时候 Taro 还是 2.x 版本，即通过语法静态编译成各端小程序的源码…]]></summary>
        <author>
            <name>荒山</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Token无感知刷新，说说我对解决方案的理解~]]></title>
        <id>https://juejin.cn/post/7289741611809587263</id>
        <link href="https://juejin.cn/post/7289741611809587263"/>
        <updated>2023-10-15T13:31:21.000Z</updated>
        <summary type="html"><![CDATA[前言
大家好，我是林三心，用最通俗易懂的话讲最难的知识点是我的座右铭，基础是进阶的前提是我的初心。

大家设想一下，如果有一个超级大的表单页面，用户好不容易填完了，然后点击提交，这个时候请求接口居然返回401，然后跳转到登录页。。。那用户心里肯定是一万个草泥马~~~
所以项目里实现token无感知刷新是很有必要的~

这几天在项目中实践了一套token无感知刷新的方案，其实也有看了一下网上那些解决方案，也知道这类的方案已经烂大街了，但是感觉不太符合我想要的效果，主要体现在以下几个方面：
逻辑都写拦截器里，耦合性高，不太好
接口重试的机制做的不太好
接口并发时的逻辑处理做的不太好
我为什么不想要让这套逻辑耦合在拦截器里呢？一方面是因为，我想要写一套代码，在很多的项目里面可以用，把代码侵入性降到最低
另一方面，因为我觉得token无感知刷新涉及到了接口重发，我理解是接口维度的，不应该把这套逻辑放在响应拦截器里去做。。我理解重发之后就是一个独立的新接口请求了，不想让两个独立的接口请求相互有交集~
所以我还是决定自己写一套方案，并分享给大家，希望大家可以提提意见啥的，共同进步~
温馨提示：需要有一些Promise基础
思路
其实大体思路是一样的，只不过实现可能有差别~就是需要有两个 token
accessToken：普通 token，时效短
refreshToken：刷新 token，时效长
accessToken用来充当接口请求的令牌，当accessToken过期时效的时候，会使用refreshToken去请求后端，重新获取一个有效的accessToken，然后让接口重新发起请求，从而达到用户无感知 token 刷新的效果
具体分为几步：
1、登录时，拿到accessToken和refreshToken，并存起来
2、请求接口时，带着accessToken去请求
3、如果acc…]]></summary>
        <author>
            <name>Sunshine_Lin</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[发布了: 背景： 照片的背景是温暖的暗杏色调，与人物的皮肤色调形成了和谐统一的效果，为画面创造了一个柔和、宁静的氛围。 主体： 照片的主体是一位日本年轻女...]]></title>
        <id>https://m.okjike.com/originalPosts/652bb39fd5f9a5727ff4879a</id>
        <link href="https://m.okjike.com/originalPosts/652bb39fd5f9a5727ff4879a"/>
        <updated>2023-10-15T09:40:47.000Z</updated>
        <summary type="html"><![CDATA[背景：
照片的背景是温暖的暗杏色调，与人物的皮肤色调形成了和谐统一的效果，为画面创造了一个柔和、宁静的氛围。
主体：
照片的主体是一位日本年轻女性，我们可以看到她的面部特征，但照片中只展示了她的脸部侧面和部分颈部。干净，高级，惊艳。
面部特征与妆容：
她的眼睛是明亮的棕色，眼睛上方涂抹了精细的眼线和柔和的眼影，脸部皮肤白皙，有种透明感，吹弹可破。
她的眉毛修饰得很自然，形状优美。
她的鼻梁高挺，两颊有淡淡的腮红。
她的嘴唇涂着鲜艳的红色口红，与背景的暗杏色形成了鲜明的对比，增强了视觉冲击力。
饰品与配件：
她的耳朵上佩戴了一对精致的耳环，耳环由多个水晶珠和一个中心的黑色宝石组成。
她的头上插有一支装饰性的发簪，上面缀满了仿佛花朵和浆果的装饰物，与耳环的设计风格相呼应。
服装与造型：
她身穿一件黑色的高领毛衣，颜色与其口红形成了和谐的色彩搭配。
她的发型是自然垂落的长发，部分发丝轻轻拂过她的脸颊。]]></summary>
        <author>
            <name>李继刚的即刻动态</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[https://github.com/Simon-He95/fast-create-variable 这个插件一定会火起来的🥺]]></title>
        <id>7289664651364794402</id>
        <link href="https://juejin.cn/pin/7289664651364794402"/>
        <updated>2023-10-15T08:20:51.000Z</updated>
        <summary type="html"><![CDATA[https://github.com/Simon-He95/fast-create-variable
这个插件一定会火起来的🥺]]></summary>
        <author>
            <name>Simon_He</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[10个极大提高开发效率的VS Code技巧]]></title>
        <id>https://juejin.cn/post/7289439657477275682</id>
        <link href="https://juejin.cn/post/7289439657477275682"/>
        <updated>2023-10-15T06:42:42.000Z</updated>
        <summary type="html"><![CDATA[本文就来分享 10 个极大提高开发效率的 VS Code 技巧！
标签换行
在VS Code中，可以在设置中搜索"** Editor: Wrap Tabs**"来实现选项卡换行的功能。

这样，在大型项目中工作时，就不需要像在浏览器中一样滚动来查找选项卡，而是可以让选项卡自动换行，更方便地跟踪模板和组件。

Timeline 视图：本地源代码控制
Git等代码控制工具能够轻松跟踪文件的变更，并且在需要时还原到之前的状态。为了提供更好的版本控制和代码历史的可视化，VS Code提供了Timeline视图。
Timeline视图是一个自动更新的面板，它显示与文件相关的重要事件，如Git提交、文件保存和测试运行等。通过Timeline视图，你可以更直观地浏览代码的演变过程，追踪各种操作对文件的影响。

展开此视图可查看与当前文件相关的事件快照列表。这里是文件保存，也是 Git 提交文件暂存的地方。

将鼠标悬停在快照项上可查看 VS Code 制作快照的日期和时间。

选择快照项可查看差异视图，显示快照时的文件与当前文件之间的更改。

自定义布局
VS Code 界面的左侧选项卡通常包括资源管理器、搜索、源代码控制、项目管理等功能。而终端中会显示诸如 “problems”, “output”, “terminal”和“debug console”等工具栏。
VS Code 支持自由地拖放这些选项卡，按照喜好来重新排列界面，让它更适合你的使用习惯。
通过简单的拖拽操作，可以改变它们的位置。比如，可以将资源管理器移到右侧，将搜索放在顶部，或者将终端移动到左侧。只需点击选项卡的标题栏，并将其拖动到你想要的位置。释放鼠标按钮后，选项卡将会被放置在你选择的位置上，可以更方便地访问和管理这些功能。

自动保存
在编辑文件时，默认情况下需要手动保存文件，比如按下Ctrl + S快捷键。这个过程…]]></summary>
        <author>
            <name>CUGGZ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[重庆市开州区发布大雾黄色预警]]></title>
        <id>http://www.cneb.gov.cn/yjxx/huangsyj/20231015/t20231015_526451443.html</id>
        <link href="http://www.cneb.gov.cn/yjxx/huangsyj/20231015/t20231015_526451443.html"/>
        <updated>2023-10-15T00:33:00.000Z</updated>
        <summary type="html"><![CDATA[开州区气象局2023年10月15日8时20分发布“大雾黄色预警信号”，预计10月15日8时至10月15日12时，我区大部分乡镇（街道）海拔400米以上将出现能见度小于500米的雾，局部地区能见度小于200米。请各地注意防范大雾天气可能造成的影响。]]></summary>
        <author>
            <name>国家预警信息发布中心</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[重庆市秀山土家族苗族自治县发布大雾橙色预警]]></title>
        <id>http://www.cneb.gov.cn/yjxx/csyj/20231015/t20231015_526451439.html</id>
        <link href="http://www.cneb.gov.cn/yjxx/csyj/20231015/t20231015_526451439.html"/>
        <updated>2023-10-15T00:28:00.000Z</updated>
        <summary type="html"><![CDATA[秀山县气象台2023年10月15日7时50分发布“大雾橙色预警信号”，预计未来6小时内，我县中和街道、平凯街道、涌洞镇、钟灵镇、隘口镇、膏田镇、梅江镇、溶溪镇等乡镇街道将出现能见度小于200米的雾，局部地区能见度小于50米。请以上各地注意防范大雾天气可能造成的影响。]]></summary>
        <author>
            <name>国家预警信息发布中心</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[重庆市酉阳土家族苗族自治县发布大雾橙色预警]]></title>
        <id>http://www.cneb.gov.cn/yjxx/csyj/20231015/t20231015_526451419.html</id>
        <link href="http://www.cneb.gov.cn/yjxx/csyj/20231015/t20231015_526451419.html"/>
        <updated>2023-10-15T00:13:00.000Z</updated>
        <summary type="html"><![CDATA[酉阳县气象台2023年10月15日8时发布“大雾橙色预警信号”，预计15日8时至11时，桃花源街道、钟多街道、毛坝乡等全部乡镇大部地区将出现能见度小于200米的雾，局部地区能见度小于50米。请以上各地注意防范大雾天气可能造成的影响。防御指南：1.有关部门和单位按照职责做好防雾工作；2.机场、高速公路、轮渡码头等单位加强调度指挥；3.驾驶人员必须严格控制车、船的行进速度；4.减少户外活动。]]></summary>
        <author>
            <name>国家预警信息发布中心</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[重庆市涪陵区发布大雾黄色预警]]></title>
        <id>http://www.cneb.gov.cn/yjxx/huangsyj/20231015/t20231015_526451420.html</id>
        <link href="http://www.cneb.gov.cn/yjxx/huangsyj/20231015/t20231015_526451420.html"/>
        <updated>2023-10-15T00:13:00.000Z</updated>
        <summary type="html"><![CDATA[涪陵区气象台2023年10月15日7时55分发布“大雾黄色预警信号”，预计10月15日8时至12时，南沱镇、马鞍街道、李渡街道、江北街道、龙桥街道、白涛街道、敦仁街道、崇义街道、江东街道、清溪镇、义和街道、石沱镇、蔺市街道、荔枝街道将出现能见度小于500米的雾，局部地区能见度小于200米。请以上各地注意防范大雾天气可能造成的影响。防御指南：有关部门和单位按照职责做好防雾准备工作；机场、高速公路、轮渡码头等单位加强交通管理，保障安全；驾驶人员注意雾的变化，小心驾驶；户外活动注意安全。]]></summary>
        <author>
            <name>国家预警信息发布中心</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[重庆市忠县发布大雾橙色预警]]></title>
        <id>http://www.cneb.gov.cn/yjxx/csyj/20231015/t20231015_526451375.html</id>
        <link href="http://www.cneb.gov.cn/yjxx/csyj/20231015/t20231015_526451375.html"/>
        <updated>2023-10-14T22:56:00.000Z</updated>
        <summary type="html"><![CDATA[忠县气象台2023年10月15日6时40分发布“大雾橙色预警信号”，预计未来6小时内，涂井乡、石宝镇、汝溪镇、金声乡、野鹤镇、磨子土家族乡、乌杨街道、石子乡、白公街道、复兴镇、东溪镇、忠州街道、黄金镇、永丰镇、花桥镇、三汇镇、马灌镇、官坝镇、金鸡镇、石黄镇、兴峰乡、新生街道、白石镇、任家镇、双桂镇、拔山镇、洋渡镇、善广乡、新立镇将出现能见度小于200米的雾，局部地区能见度小于50米。请以上各地注意防范大雾天气可能造成的影响。]]></summary>
        <author>
            <name>国家预警信息发布中心</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[字节一面——当我从闭包谈到高阶函数，面试官：来道curry函数尝尝😊]]></title>
        <id>https://juejin.cn/post/7289664472868732982</id>
        <link href="https://juejin.cn/post/7289664472868732982"/>
        <updated>2023-10-14T16:40:08.000Z</updated>
        <summary type="html"><![CDATA[theme: smartblue
highlight: a11y-dark
一、前言
前段时间参与字节面试，一面中问到我 闭包 ，我照着自己的理解从闭包的特性到高阶函数，再提到了闭包的应用，如 curry函数。
curry函数:
// 实现一个add函数
// return 1 + 2 + 3 + 2 传参为undefined时返回sum
add(1,2,3)(2)()
// 8

😶😶😶……本人只懂概念没有实操过啊😭👊
闭包的概念、延伸概念、应用以及优劣，顺带解决这个题目。
二、闭包
2.1 闭包的概念
闭包是由一个函数以及与其相关的引用环境组合而成的实体。闭包可以在函数内部访问外部函数的变量，并且这些变量可以在外部函数执行结束后仍然保持其状态。
function outerFunction(x) {
  return function innerFunction(y) {
    return x + y;
  };
}

// 创建闭包函数
var closure = outerFunction(5);

// 调用闭包函数
var result = closure(3);

console.log(result); // 输出：8

可以看到 innerFunction 可以获取到传入 outerFunction 的参数,可见原本在外部函数执行结束后本该销毁的地址得到了保留。
闭包可以访问和修改其创建时捕获的外部环境中的变量值，从而实现状态的保存和共享。
闭包可以私有化变量，从而避免命名冲突和污染全局作用域。
闭包可以延长变量的生命周期，从而实现回调、事件处理等高级操作。
有的同学可能会联想到高阶函数，或许对高阶函数、闭包存在不清晰的认知，那么我们就再来讲一下高阶函数。
2.2 高阶函数
高阶函数指的是能够接受函数作为参数或返回函数作为结果的函数,如 Ar…]]></summary>
        <author>
            <name>只有一斤了呐</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[前端页面秒开的关键 - 小白也能看懂的同构渲染原理和实现（含nodejs服务端测试与优化，附PPT）]]></title>
        <id>https://juejin.cn/post/7289661061984501819</id>
        <link href="https://juejin.cn/post/7289661061984501819"/>
        <updated>2023-10-14T09:46:48.000Z</updated>
        <summary type="html"><![CDATA[theme: juejin
大概在昨年下半年，我利用同构渲染技术，把公司中一个需要7、8秒才能打开的vue3项目成功优化至秒开（当然除了同构之外也配合了一些其他手段），由于那段时间vue3推出不久，很多框架这部分功能还没有跟上，我便试着用vue和vite本身提供的api来完成同构，最终也了令人满意的效果，自己在这个过程中也获益匪浅。
如今各大框架的功能已经完善，如果你现在想做同构渲染，我推荐直接使用next.js（react）或nuxt.js(vue)来进行开发，而不是像我一样手动进行实现。本文主要是对于同构原理的描述，不涉及框架的使用。
为了让小白也能看懂，文章会包含很多特别基础的理论描述，如果觉得没必要了解，你可以通过标题跳转到自己感兴趣的部分。文章中的代码主要以vue为例，但是原理不局限于任何框架。
点击这里查看完整代码和PPT
1. 什么是同构渲染？为什么使用它？
1.1 什么是渲染?
以现在前端流行的react和vue框架为例。react中的jsx和vue里面的模板，都是是无法直接在浏览器运行的。将它们转换成可在浏览器中运行的html，这个过程被称为渲染。
1.2 什么是客户端渲染（client-side-render, 以下简称csr）
CSR是现在前端开发者最熟悉的渲染方式。利用vue-cli或create-react-app创建一个应用，不作任何额外配置直接打包的出来代码就是CSR。
你可以用如下的方法辨别一个web页面是否是CSR：打开chrome控制台 - 网络面板，查看第一条请求，就能看到当前页面向服务器请求的html资源；如果是CSR（如下图所示），这个html的body中是没有实际内容的。

那么页面内容是如何渲染出来的呢？仔细看上面的html，会发现存在一个script标签，打包器正是把整个应用都打包进了这个js文件里面。
当浏览器请求页面的时候…]]></summary>
        <author>
            <name>monet</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[🔥🔥🔥自从学会这些奇技淫巧，日常开发可以快乐地摸🐟了]]></title>
        <id>https://juejin.cn/post/7289662476730597436</id>
        <link href="https://juejin.cn/post/7289662476730597436"/>
        <updated>2023-10-14T06:07:09.000Z</updated>
        <summary type="html"><![CDATA[theme: smartblue
highlight: atelier-sulphurpool-light
前言
  大家好，我是沐浴在曙光下的贰货道士。在日常开发中，我们经常会面对各种挑战和繁琐的任务。不管是处理复杂的数据结构，还是解决棘手的编程问题，都可能让我们感到沮丧和无从下手。但是，幸运的是，有一些神奇的方法可以让我们的开发变得更加轻松、高效，甚至让我们在编码的过程中快乐地摸🐟。
  我们将介绍一些在日常开发中非常实用的方法，它们能够极大地提升我们的开发效率和幸福感。这些方法不仅仅是技术层面的技巧，更是关于如何优雅地解决问题、简化复杂性的智慧。通过掌握这些方法，我们能够更加从容地面对开发中的困难，并以更高的效率和质量完成我们的工作。有喜欢本文的朋友，欢迎一键三连哦。让我们一起快乐地摸🐟吧~
1. ⭐ toFixed方法的二次封装，解决toFixed精度问题
  在金钱计算中，精度问题是一个非常重要且常见的挑战。例如，当我们进行货币计算时，需要确保结果的精度准确，并且不出现舍入错误或精度损失。使用IEEE 754标准的JavaScript语言内置的toFixed方法，是处理小数精度的一种常见方式，它用于将数字保留指定的小数位数。然而，toFixed方法在某些情况下可能会导致精度问题，特别是在处理金钱计算时。例如，当进行复杂的浮点数运算时，toFixed可能会产生不准确的结果或舍入错误，这可能会对最终的计算结果产生意想不到的影响。
  具体会有哪些影响呢？js中存在一个最大安全整数，可以使用Number.MAX_SAFE_INTEGER获取。值为9007199254740991，即2的53次方减1。当js的数值超过这个最大安全整数，就会出现精度丢失问题(对于采用IEEE 754标准的数值，最好使用字符串去表示，才不会丢失精度)：
console.log(Number…]]></summary>
        <author>
            <name>沐浴在曙光下的贰货道士</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[大的来了，一波更新完效率提升X倍]]></title>
        <id>7289397650387025977</id>
        <link href="https://juejin.cn/pin/7289397650387025977"/>
        <updated>2023-10-14T03:06:29.000Z</updated>
        <summary type="html"><![CDATA[大的来了，一波更新完效率提升X倍]]></summary>
        <author>
            <name>Simon_He</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[🍀别找了！前端那些好用的网站都在这里了！]]></title>
        <id>https://juejin.cn/post/7289339080838627382</id>
        <link href="https://juejin.cn/post/7289339080838627382"/>
        <updated>2023-10-14T01:45:17.000Z</updated>
        <summary type="html"><![CDATA[🍀一、渐变神器Gradient
网站地址：
Gradient by ShapeFactory | Chromatic Gradient Generator
网站介绍：
Gradient是一款网页渐变设计工具，可以帮助用户轻松创建漂亮的渐变颜色样式，并将其应用到网页、APP等设计项目中。
网站示例：

🍀二、两款阴影工具在线网站
网站地址：
1、lingdaima在线阴影创建：在线创建可视化CSS阴影效果神器 
2、box-shadow阴影网站：CSS box shadow inspiration - Box Shadow
网站介绍：
1、lingdaima是一款在线阴影创建工具，可以帮助用户快速地生成各种类型的阴影效果，并且提供多种自定义选项和实时预览功能。以下是该工具的主要特点和使用方法：
特点：
界面简洁易用，支持拖拽、滑动等操作；
提供多种阴影类型，包括内部阴影、外部阴影、立体阴影等；
可以自定义阴影属性，如颜色、大小、模糊度、位置等；
支持将生成的阴影效果导出为CSS代码或PNG图片格式。

2、box-shadow阴影网站，在这个网站中会按照人们对各种阴影效果的喜爱程度进行排名，相信大多数人喜欢的阴影效果，如果用在你的网站上也一定会非常的好看的。

🍀三、网站UI配色宝藏网站UI Design Daily
网站地址：
UI Design Daily | Weekly FREE UI resources straight to your inbox
网站介绍：
UI Design Daily是一个专注于UI设计的在线社区，提供了大量优秀的设计素材和模板，以及许多实用的设计工具和资源。
特点：
提供丰富的UI设计素材和模板
可以按照类别、颜色、风格等属性进行筛选和浏览；
支持在线预览和下载设计素材和模板，以及查看其他设计师的作品；
网站配色难？不知道颜色如何搭配？那这个网站将为你提供源源不断的思路
网站示例：

🍀四、 Small Dev tools实用工具合集
网站地址：
Home - SmallDev.tools --- 首页 - 小型开发工具
网站介绍：
如果说前面几款网站的功能太单一的话，那么Small Dev tools这个网站可谓是一款集成了多种实用工具的在线开发者工具箱，可以帮助开发者们轻松地完成常见的开发任务和问题解决
这个网站包含了很多实用的功能，比如JSON解码器、JSON格式化程序、UTF8编码、Base64编码、Base64解码、CSS格式化程序、CSS压缩器等等，但是唯一不足的地方是这个网站的打开速度有点慢。
网站示例：

🍀五、 Glass Morphism 在线制作 CSS 玻璃风格神器
网站地址：
Glass Morphism (glassgenerator.netlify.app)
网站介绍：
Glass Morphism是一个有趣的在线CSS玻璃风格工具，可以帮助开发者们在UI设计中快速应用Glass Morphism风格，并且提供了多种自定义选项和实时预览功能
特点：
可以自定义UI元素的属性，如颜色、阴影、高光等；
支持实时预览效果，调整后立刻看到变化；
支持将生成的CSS代码导出为文件或直接复制。
网站示例：

🍀六、Keyframes 在线动画、阴影和颜色
网站地址：
Keyframes.app
网站介绍：
Keyframes是一个在线动画生成器，可以帮助用户快速创建各种类型的CSS3动画、阴影和使用颜色效果，并且提供多种自定义选项和实时预览功能。以下是该工具的主要特点和使用方法
特点:
界面简洁易用，支持拖拽、滑动等操作；
提供多种动画类型，包括旋转、平移、缩放、淡入淡出等；
可以自定义动画属性，如持续时间、延迟时间、曲线函数等；
支持实时预览效果，调整后立刻看到变化；
支持将生成的CSS代码导出为文件或直接复制。
网站示例：

🍀七、BGJar 在线SVG 背景
网站地址：
BGJar | Free svg background image generator for your websites
网站介绍：
BGJar是一个免费的在线背景生成器，提供了各种类型和风格的背景图像，并且支持实时预览和自定义选项。以下是该网站的主要特点和使用方法：
特点:
提供各种类型和风格的背景图像，包括渐变色、图案、纹理等；
可以自定义背景属性，如颜色、透明度、大小等；
支持实时预览效果，调整后立刻看到变化；
支持将生成的背景下载为PNG或SVG格式。
网站示例：]]></summary>
        <author>
            <name>泽南Zn</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[重庆市巴南区发布大雾黄色预警]]></title>
        <id>http://www.cneb.gov.cn/yjxx/huangsyj/20231013/t20231013_526450468.html</id>
        <link href="http://www.cneb.gov.cn/yjxx/huangsyj/20231013/t20231013_526450468.html"/>
        <updated>2023-10-13T15:28:00.000Z</updated>
        <summary type="html"><![CDATA[巴南区气象台2023年10月13日23时10分发布“大雾黄色预警信号”，预计14日5时至10时，我区李家沱街道、花溪街道、龙洲湾街道、莲花街道、鱼洞街道、界石镇、南泉街道、惠民街道、木洞镇、二圣镇、双河口镇、麻柳嘴镇、南彭街道、一品街道、丰盛镇、东温泉镇、姜家镇、天星寺镇将出现能见度小于500米的雾，局部地区能见度小于200米。请以上各地注意防范大雾天气可能造成的影响。]]></summary>
        <author>
            <name>国家预警信息发布中心</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[重庆市忠县发布大雾黄色预警]]></title>
        <id>http://www.cneb.gov.cn/yjxx/huangsyj/20231013/t20231013_526450428.html</id>
        <link href="http://www.cneb.gov.cn/yjxx/huangsyj/20231013/t20231013_526450428.html"/>
        <updated>2023-10-13T14:27:00.000Z</updated>
        <summary type="html"><![CDATA[忠县气象台2023年10月13日22时10分发布“大雾黄色预警信号”，预计10月13日22时至14日10时，双桂镇、新立镇、花桥镇、拔山镇、马灌镇、金鸡镇、三汇镇、石黄镇、兴峰乡、官坝镇、金声乡、汝溪镇、野鹤镇、涂井乡、石宝镇、黄金镇、复兴镇、白石镇、忠州街道、白公街道、新生街道、善广乡、永丰镇、任家镇、洋渡镇、石子乡、乌杨街道、磨子土家族乡、东溪镇将出现能见度小于500米的雾，局部地区能见度小于200米。请以上各地注意防范大雾天气可能造成的影响。]]></summary>
        <author>
            <name>国家预警信息发布中心</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[用 Rspack 替代 Webpack，提升五倍构建速度]]></title>
        <id>https://juejin.cn/post/7289282433661173760</id>
        <link href="https://juejin.cn/post/7289282433661173760"/>
        <updated>2023-10-13T12:33:29.000Z</updated>
        <summary type="html"><![CDATA[theme: smartblue
highlight: a11y-dark
前言
通过本文你将理解rspack，并快速实现Vue2、Vue3项目配置，提升5倍多的项目构建性能，快速提高工作效率。
Webpack 构建问题
原有大型后台系统项目 DEV 构建需要 3分钟以上；
自动化部署构建阶段需要10分钟以上；
生产打包构建需要2分钟；
Rspack 优化后
使用 Rspack 替代 Webpack 后：
DEV构建 3min -> 20s
自动化部署 6min -> 3min
打包速度 2min -> 20s
比 Webpack 更快 的 Rspack
Rspack 是基于 Rust 重写 Webpack，允许依赖 Webpack 的打包构建工具。
核心优势在于：
快速的 Dev 启动性能。是开发者每天需要运行很多次的命令，但大型项目每次都需要等待 10 分钟，这对于工程师来说非常痛苦，因此优化开发模式下启动的时间至关重要。npm run dev
高效的 Build 性能。经常在 CI/CD 环境中运行，它决定了应用生产交付的效率。有些应用在生产环境中需要 20 到 30 分钟的构建时间，如果能缩短这段时间，对开发流程也将非常有帮助。npm run build
灵活的配置。用户工程的配置非常灵活，不够统一。在之前的尝试中，将 Webpack 配置迁移到其他构建工具时，我们遇到了许多问题，因为其他构建工具的配置不如 Webpack 灵活。
生产环境的优化能力。在启用 Rspack 之前，我们尝试了社区内的各种方案，但它们都面临着一定程度的生产环境负优化，例如拆分包不够精细等。因此，优化生产环境的产物是我们不可放弃的功能。
————摘自Rspack官网
起步
安装依赖：
pnpm add @rspack/cli@0.3.4

配置npm脚本：
// package.json
…]]></summary>
        <author>
            <name>谦宇</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[基于微信测试号的AI机器人，支持谷歌搜索引擎插件：https://github.com/anhao/AIChatBot/]]></title>
        <id>7288992783582281728</id>
        <link href="https://juejin.cn/pin/7288992783582281728"/>
        <updated>2023-10-13T03:33:12.000Z</updated>
        <summary type="html"><![CDATA[基于微信测试号的AI机器人，支持谷歌搜索引擎插件：https://github.com/anhao/AIChatBot/]]></summary>
        <author>
            <name>Alone88</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[DevOps相对关注运维自动化,较少涉及复杂算法。 DevOps更专注基础架构和工程流程。 DevOps的工作重心在于搭建工程化系统,而不是产品功能或业务创新。 DevOps工程...]]></title>
        <id>7288964017351458857</id>
        <link href="https://juejin.cn/pin/7288964017351458857"/>
        <updated>2023-10-13T01:16:05.000Z</updated>
        <summary type="html"><![CDATA[DevOps相对关注运维自动化,较少涉及复杂算法。
DevOps更专注基础架构和工程流程。
DevOps的工作重心在于搭建工程化系统,而不是产品功能或业务创新。
DevOps工程师相对更专注技术展开,对商业策略和产品决策参与较少。
DevOps也主要在运维团队内部协作。和产品、设计等部门协作的机会较少。]]></summary>
        <author>
            <name>laofo</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[科技爱好者周刊（第 273 期）：任正非的三篇最新谈话]]></title>
        <id>http://www.ruanyifeng.com/blog/2023/10/weekly-issue-273.html</id>
        <link href="http://www.ruanyifeng.com/blog/2023/10/weekly-issue-273.html"/>
        <updated>2023-10-13T00:09:33.000Z</updated>
        <summary type="html"><![CDATA[这里记录每周值得分享的科技内容，周五发布。
本杂志开源，欢迎投稿。另有《谁在招人》服务，发布程序员招聘信息。合作请邮件联系（yifeng.ruan@gmail.com）。
封面图

9月26日，合肥骆岗中央公园正式开园，该处曾经是骆岗机场。机场的信标台，现在改成了60米的高台，成为公园地标，继续为飞机提供导航和定位。（via）
任正非的三篇最新谈话
上个月，华为连续放出了任正非的三篇最新谈话。

《与南开大学新闻与传播学院院长的谈话》，发生于2023年7月7日，发布于9月21日
《在高端技术人才使用工作组对标会上的讲话》，发生于2023年7月8日，发布于9月4日
《与国际大学生程序设计竞赛基金会、教练和金牌获得者的座谈》，发生于2023年8月21日和26日，发布于9月19日
这有点反常。以前，华为隔一段日子，才公开一篇任总的谈话，现在短时间内公开三篇，真的很少见。
联想到最近火爆无比的 Mate 60 系列手机，也是同一时间段发布的，我觉得华为变得高调了。不知道这是巧合，还是华为真的改变了策略。
任总的谈话，一向很有营养。网上曾经出现过一本《任正非文集》，收录了1994年到2018年间，他的400多篇谈话。我读了以后，获益良多。
这次的三篇谈话，我也仔细读了，很受启发。下面，我整理编辑了重点内容，跟大家分享。他主要涉及了两个部分：一个是华为的管理，另一个是教育问题。
华为的管理
1、招聘
华为有业务边界，招聘时要跟人才说清楚，必须在我们的边界内研究探索。高端人才只要同意这一点，我们就愿意要。
华为储备人才，不储备美元。
华为要的高端人才，全部是技术方面。管理类或其他行业的干部，走垂直循环、在实践中逐步成长的道路，一般不会破格提拔。
2、如何留住优秀人才
物质激励不是最主要的，最主要的是让人才找到自己热爱的岗位，兴趣爱好与工作机会相结合。
评价人才的时候，只需要识别他特殊能力…]]></summary>
        <author>
            <name>阮一峰的网络日志</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[发布了: 跑在手表上的游戏😵‍💫]]></title>
        <id>https://m.okjike.com/originalPosts/6527d811bb3e3660e85ce9b3</id>
        <link href="https://m.okjike.com/originalPosts/6527d811bb3e3660e85ce9b3"/>
        <updated>2023-10-12T11:27:13.000Z</updated>
        <summary type="html"><![CDATA[跑在手表上的游戏😵‍💫]]></summary>
        <author>
            <name>Barret李靖的即刻动态</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[发布了: Giffgaff 卡现在已经支持免费转为 eSIM 了，直接在软件上（Account -> SIM -> Replace my SIM -> Switch to a new eSIM）操作即可，立省一个卡槽，看到...]]></title>
        <id>https://m.okjike.com/originalPosts/6527ced5af95215b83c14b5d</id>
        <link href="https://m.okjike.com/originalPosts/6527ced5af95215b83c14b5d"/>
        <updated>2023-10-12T10:47:49.000Z</updated>
        <summary type="html"><![CDATA[Giffgaff 卡现在已经支持免费转为 eSIM 了，直接在软件上（Account -> SIM -> Replace my SIM -> Switch to a new eSIM）操作即可，立省一个卡槽，看到有推友操作成功了。
可惜我的手机不支持🙁，是因为国行么？]]></summary>
        <author>
            <name>Barret李靖的即刻动态</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[发布了: 在 Google Colab 上执行了一个爬虫任务，可以看出 AutoGen 框架的强大（https://web.okjike.com/originalPost/6527c452fb5ea50a73e2b33b），我做的事情...]]></title>
        <id>https://m.okjike.com/originalPosts/6527ca8eea72dfbaff6ee7df</id>
        <link href="https://m.okjike.com/originalPosts/6527ca8eea72dfbaff6ee7df"/>
        <updated>2023-10-12T10:29:34.000Z</updated>
        <summary type="html"><![CDATA[在 Google Colab 上执行了一个爬虫任务，可以看出 AutoGen 框架的强大（https://web.okjike.com/originalPost/6527c452fb5ea50a73e2b33b），我做的事情就是配置了 ChatGPT 的 api_key 以及定义了要做啥事情，剩下的都是程序干的了。
这是最简单的模式，也可以定义很多个 Assistant 和 UserProxy，例如搞三个角色，产品经理、程序员和设计师，让他们之间讨论如何实现一个产品原型，并给出 Demo 代码。
相比让一个 AI Agent 承担多重角色来执行复杂任务，多 Agents 的优势十分突出，最后的效果也要好很多很多。过程中人类可以随时介入，进行调优，也可以避免跑题。]]></summary>
        <author>
            <name>Barret李靖的即刻动态</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[《命运2》：Bungie 30 周年纪念组合包]]></title>
        <id>https://store.epicgames.com/zh-CN/p/destiny-2</id>
        <link href="https://store.epicgames.com/zh-CN/p/destiny-2"/>
        <updated>2023-10-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[《命运2》是发生在一个独立进化的世界中的一款免费的大型多人线上动作游戏。你可以在任何时间与任何地点和你的朋友们进行游戏。]]></summary>
        <author>
            <name>Bungie</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[jym，[呲牙]看看你们浏览器的收藏夹有啥有趣的网站，或者很实用的工具网站]]></title>
        <id>7288509436899934267</id>
        <link href="https://juejin.cn/pin/7288509436899934267"/>
        <updated>2023-10-11T07:44:37.000Z</updated>
        <summary type="html"><![CDATA[jym，[呲牙]看看你们浏览器的收藏夹有啥有趣的网站，或者很实用的工具网站]]></summary>
        <author>
            <name>荒唐的尼玛</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[[7210002980895916043#挑战每日一条沸点#] vscode插件fnMap（函数地图）v3.2.0发布 1，新增功能：可配置不同文件默认展开层级 2，新增功能：可配置不同文件哪些...]]></title>
        <id>7288229413035065402</id>
        <link href="https://juejin.cn/pin/7288229413035065402"/>
        <updated>2023-10-10T15:01:03.000Z</updated>
        <summary type="html"><![CDATA[[7210002980895916043#挑战每日一条沸点#] 
vscode插件fnMap（函数地图）v3.2.0发布
1，新增功能：可配置不同文件默认展开层级
2，新增功能：可配置不同文件哪些符号不展示
3，修复问题：插件关闭后符号缓存没有清空的问题
插件地址：https://marketplace.visualstudio.com/items?itemName=chensuiyi.fn-map]]></summary>
        <author>
            <name>陈随易</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[纯JS实现多个音频的拼接或者合并]]></title>
        <id>https://www.zhangxinxu.com/wordpress/?p=11022</id>
        <link href="https://www.zhangxinxu.com/wordpress/2023/10/js-audio-audiobuffer-concat-merge/"/>
        <updated>2023-10-10T14:53:25.000Z</updated>
        <summary type="html"><![CDATA[3年前有更新过JS剪裁audio音频，今天我们再讲讲如何使用原生的JS实现多个音频的拼接或合并，此文可是其他地方见不到的哟。]]></summary>
        <author>
            <name>张 鑫旭</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[jym，有无好用的png图片压缩网址，哪个杀千刀的举报了熊猫，打不开了，MD，剩下的能找到的全是要登录或者花钱的[酷拽][酷拽]]]></title>
        <id>7288151713373192253</id>
        <link href="https://juejin.cn/pin/7288151713373192253"/>
        <updated>2023-10-10T08:47:22.000Z</updated>
        <summary type="html"><![CDATA[jym，有无好用的png图片压缩网址，哪个杀千刀的举报了熊猫，打不开了，MD，剩下的能找到的全是要登录或者花钱的[酷拽][酷拽]]]></summary>
        <author>
            <name>送酒白衣人丶</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[每日打开 https://juejin.cn/post/7280435532986990647]]></title>
        <id>7287955337524314169</id>
        <link href="https://juejin.cn/pin/7287955337524314169"/>
        <updated>2023-10-10T07:12:51.000Z</updated>
        <summary type="html"><![CDATA[每日打开
https://juejin.cn/post/7280435532986990647]]></summary>
        <author>
            <name>Simon_He</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[https://java.bejson.com/generator/ 崩掉了。。[捂脸]]]></title>
        <id>7287914116286545955</id>
        <link href="https://juejin.cn/pin/7287914116286545955"/>
        <updated>2023-10-10T01:19:32.000Z</updated>
        <summary type="html"><![CDATA[https://java.bejson.com/generator/  崩掉了。。[捂脸]]]></summary>
        <author>
            <name>拜读生活</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[JS改变AudioBuffer音量并下载为新audio音频]]></title>
        <id>https://www.zhangxinxu.com/wordpress/?p=11026</id>
        <link href="https://www.zhangxinxu.com/wordpress/2023/10/js-web-audio-audiobuffer-volume/"/>
        <updated>2023-10-09T14:50:57.000Z</updated>
        <summary type="html"><![CDATA[本文介绍三种改变音频播放音量的方法，其中还有一种方法直接改变音频AudioBuffer数据源的音量，说不定你哪天就会用到。]]></summary>
        <author>
            <name>张 鑫旭</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[逆向开发的大佬这么稀缺吗[流泪]，有没有做逆向开发到高级工程师或者技术专家程度的大佬啊[流泪][7073670077790289956#求职面试交流bbs#]]]></title>
        <id>7287791555623092264</id>
        <link href="https://juejin.cn/pin/7287791555623092264"/>
        <updated>2023-10-09T09:53:41.000Z</updated>
        <summary type="html"><![CDATA[逆向开发的大佬这么稀缺吗[流泪]，有没有做逆向开发到高级工程师或者技术专家程度的大佬啊[流泪][7073670077790289956#求职面试交流bbs#]]]></summary>
        <author>
            <name>逆境之光</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[生成 java 实体类属性的工具 有推荐没得[发呆]]]></title>
        <id>7287757113401491490</id>
        <link href="https://juejin.cn/pin/7287757113401491490"/>
        <updated>2023-10-09T09:16:18.000Z</updated>
        <summary type="html"><![CDATA[生成 java 实体类属性的工具 有推荐没得[发呆]]]></summary>
        <author>
            <name>拜读生活</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[倪爽的阅读分享 – 2023年9月28日]]></title>
        <id>https://nishuang.net/?p=30853</id>
        <link href="https://nishuang.net/%e5%80%aa%e7%88%bd%e7%9a%84%e9%98%85%e8%af%bb%e5%88%86%e4%ba%ab-2023%e5%b9%b49%e6%9c%8828%e6%97%a5/"/>
        <updated>2023-09-28T14:42:38.000Z</updated>
        <summary type="html"><![CDATA[America’s Military Can’t Repair Its Own $1.7 Trillion Jet 美国军方无法修复自己价值1.7万亿美元的战机 美国的 F-35 战斗机昂贵且需要制造商干预才能维修，导致这些昂贵的战机仅有约一半时间可用于任务，因为它们需要等待维修部件。 F-35 战机维护成本高昂，总成本估计超过1.7万亿美元。 Microsoft is go …
  倪爽的阅读分享 – 2023年9月28日 查看全文 »]]></summary>
        <author>
            <name>Frank</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[倪爽的阅读分享 – 2023年9月27日]]></title>
        <id>https://nishuang.net/?p=30850</id>
        <link href="https://nishuang.net/%e5%80%aa%e7%88%bd%e7%9a%84%e9%98%85%e8%af%bb%e5%88%86%e4%ba%ab-2023%e5%b9%b49%e6%9c%8827%e6%97%a5/"/>
        <updated>2023-09-28T14:24:44.000Z</updated>
        <summary type="html"><![CDATA[To Understand the Burgess Shale’s 500-Million-Year-Old Fossils, We Imagined How They’d Taste 为了理解伯吉斯页岩中5亿年前的化石，我们想象了它们的味道。 加拿大的伯吉斯页岩遗址保存了 5 亿年前寒武纪时期的生物化石，为了探索古代生物与现代烹饪之间的联系，大厨分享了烹饪五种伯吉斯页岩古生物的想法。  …
  倪爽的阅读分享 – 2023年9月27日 查看全文 »]]></summary>
        <author>
            <name>Frank</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[设计 | UI 设计里，简单不等于容易使用设计]]></title>
        <id>https://nishuang.net/?p=30843</id>
        <link href="https://nishuang.net/%e8%ae%be%e8%ae%a1-ui-%e8%ae%be%e8%ae%a1%e9%87%8c%ef%bc%8c%e7%ae%80%e5%8d%95%e4%b8%8d%e7%ad%89%e4%ba%8e%e5%ae%b9%e6%98%93%e4%bd%bf%e7%94%a8%e8%ae%be%e8%ae%a1/"/>
        <updated>2023-09-28T07:52:48.000Z</updated>
        <summary type="html"><![CDATA[Google 将关闭 Google Podcasts，随便吧，反正我厌恶它🤷‍♂️ Google Podcasts 的 UI 设计有个特别奇怪的特征：UI 尤其是列表 UI 的设计很简洁，但缺乏好用、有用的感觉。 小结一下，Google Podcasts 界面设计最大的问题是：视觉元素缺乏层级关系（Hierarchy）。 或者更通俗一点说，界面里的标题、摘要、标签、图标、按钮等等不同视觉元素之间没 …
  设计 | UI 设计里，简单不等于容易使用设计 查看全文 »]]></summary>
        <author>
            <name>Frank</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[设计 | 脱离商业的设计，只是（无足轻重的）装饰]]></title>
        <id>https://nishuang.net/?p=30814</id>
        <link href="https://nishuang.net/%e8%ae%be%e8%ae%a1-%e8%84%b1%e7%a6%bb%e5%95%86%e4%b8%9a%e7%9a%84%e8%ae%be%e8%ae%a1%ef%bc%8c%e5%8f%aa%e6%98%af%ef%bc%88%e6%97%a0%e8%b6%b3%e8%bd%bb%e9%87%8d%e7%9a%84%ef%bc%89%e8%a3%85%e9%a5%b0/"/>
        <updated>2023-09-26T13:34:24.000Z</updated>
        <summary type="html"><![CDATA[全世界设计师都追看了 Figma Config 2023 大会的演讲视频，其中最被忽视的，大概是这个名为“脱离商业的设计，只是装饰”的演讲，演讲者是 Netflix 网飞的设计 VP。 他用简单的故事介绍了商业在设计中的意义，并介绍了几个小策略，帮助设计师在做设计时更接近商业： 多数设计师可能不理解上面这些到底在说什么，我换个说法，大家就理解了： 几乎每个设计师，不管是小公司的新设计师、还是成熟公 …
  设计 | 脱离商业的设计，只是（无足轻重的）装饰 查看全文 »]]></summary>
        <author>
            <name>Frank</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Remix ｜ 使用喷气发动机的复古未来主义汽车，Chrysler Turbine]]></title>
        <id>https://nishuang.net/?p=30800</id>
        <link href="https://nishuang.net/remix-%ef%bd%9c-%e4%bd%bf%e7%94%a8%e5%96%b7%e6%b0%94%e5%8f%91%e5%8a%a8%e6%9c%ba%e7%9a%84%e5%a4%8d%e5%8f%a4%e6%9c%aa%e6%9d%a5%e4%b8%bb%e4%b9%89%e6%b1%bd%e8%bd%a6%ef%bc%8cchrysler-turbine/"/>
        <updated>2023-09-26T07:16:30.000Z</updated>
        <summary type="html"><![CDATA[克莱斯勒从 1963 年到 1964 年，制造了 55 辆使用喷气发动机/燃气轮机的双门硬顶跑车 Chrysler Turbine，并把它们免费借给普通美国人试驾。这些时髦、酷炫、高科技、超现实的小车改变了试驾者的生活，但燃气轮机汽车永远离开了我们。 Hagerty Drivers Foundation 拍了一部 70 分钟的纪录片，介绍这段奇妙的历史。 克莱斯勒组织了庞大的用户试驾活动，来自美国 …
  Remix ｜ 使用喷气发动机的复古未来主义汽车，Chrysler Turbine 查看全文 »]]></summary>
        <author>
            <name>Frank</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[倪爽的阅读分享 – 2023年9月24日]]></title>
        <id>https://nishuang.net/?p=30791</id>
        <link href="https://nishuang.net/%e5%80%aa%e7%88%bd%e7%9a%84%e9%98%85%e8%af%bb%e5%88%86%e4%ba%ab-2023%e5%b9%b49%e6%9c%8824%e6%97%a5/"/>
        <updated>2023-09-25T04:58:08.000Z</updated>
        <summary type="html"><![CDATA[Color for brand designers working with product teams 品牌设计师与产品团队合作的色彩管理 品牌设计师在数字空间中面临挑战，因为他们的品牌颜色可能无法在产品设计中效果不佳，产品团队不得不进行调整。 主要原因是品牌指南没有考虑到可访问性和规模。文章介绍了解决这种问题的几个方法。 Get it shipped — building better rel …
  倪爽的阅读分享 – 2023年9月24日 查看全文 »]]></summary>
        <author>
            <name>Frank</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[倪爽的阅读分享 – 2023年9月23日]]></title>
        <id>https://nishuang.net/?p=30767</id>
        <link href="https://nishuang.net/%e5%80%aa%e7%88%bd%e7%9a%84%e9%98%85%e8%af%bb%e5%88%86%e4%ba%ab-2023%e5%b9%b49%e6%9c%8823%e6%97%a5/"/>
        <updated>2023-09-23T15:44:12.000Z</updated>
        <summary type="html"><![CDATA[「你要的都有了！」致敬FM2的經典造型，方便攜帶的全片幅相機 – Nikon 全新 Zf 單眼相機 – EVERYDAY OBJECT Nikon Zf相机还配备了一块3.2英寸的可翻转触摸屏，方便用户进行取景和操作。同时，相机还支持Wi-Fi和蓝牙连接，可以方便地与智能设备进行无线传输和分享照片。此外，相机还具备防尘防滴功能，保证在恶劣环境下的可靠性和耐用性。 总体来说， …
  倪爽的阅读分享 – 2023年9月23日 查看全文 »]]></summary>
        <author>
            <name>Frank</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[学习 | 把思维碰撞变成创新利器]]></title>
        <id>https://nishuang.net/?p=30722</id>
        <link href="https://nishuang.net/%e6%8a%8a%e6%80%9d%e7%bb%b4%e7%a2%b0%e6%92%9e%e5%8f%98%e6%88%90%e5%88%9b%e6%96%b0%e5%88%a9%e5%99%a8/"/>
        <updated>2023-09-22T19:41:03.000Z</updated>
        <summary type="html"><![CDATA[乔布斯为什么强迫所有员工用一个厕所 智者乔布斯认为：智慧的火花常常是偶然交流碰撞产生的。 为了促进员工之间的交流，当初乔布斯为动画制作公司皮克斯设计总部大楼时，设想了一项创新性的设计：取消分布于各个楼层和区域的洗手间，只设置一个大型共用洗手间，而且把它放在大楼大厅的中央！ – 每个人都得上厕所吧？这个集中式洗手间，将能提高员工相互碰面和交流的机会。 还好最后这个疯狂的设想没有实施。 乔 …
  学习 | 把思维碰撞变成创新利器 查看全文 »]]></summary>
        <author>
            <name>Frank</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[设计 | 为什么要自己动手雕刻一只小熊？]]></title>
        <id>https://nishuang.net/?p=30680</id>
        <link href="https://nishuang.net/%e8%ae%be%e8%ae%a1-%e4%b8%ba%e4%bb%80%e4%b9%88%e8%a6%81%e8%87%aa%e5%b7%b1%e5%8a%a8%e6%89%8b%e9%9b%95%e5%88%bb%e4%b8%80%e5%8f%aa%e5%b0%8f%e7%86%8a%ef%bc%9f/"/>
        <updated>2023-09-22T07:38:29.000Z</updated>
        <summary type="html"><![CDATA[很多独立开发者、小微技术团队，明明没有设计常识，也会为了省钱而自己做设计，一般他们会自我安慰：“这有什么难”、“反正有免费工具”、“有 Tailwind、还有现成的模板”… 说个我的真实例子，让大家体会一下这个常识：不懂设计的外行“自己做设计”，这种想法很愚昧。 话说我们家院子里装饰用的木刻小熊，日晒雨淋变成了幽灵小熊，需要再买一个。 某天开车看到卖木雕的小店，在路边排了十几只木雕小熊，大叔正在拿 …
  设计 | 为什么要自己动手雕刻一只小熊？ 查看全文 »]]></summary>
        <author>
            <name>Frank</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[设计 | 重新认识线框图]]></title>
        <id>https://nishuang.net/?p=30670</id>
        <link href="https://nishuang.net/%e8%ae%be%e8%ae%a1-%e9%87%8d%e6%96%b0%e8%ae%a4%e8%af%86%e7%ba%bf%e6%a1%86%e5%9b%be/"/>
        <updated>2023-09-22T06:55:28.000Z</updated>
        <summary type="html"><![CDATA[线框图被产品经理奉为圭臬，但对设计师而言，线框图的存在则是面目模糊。在整个产品设计流程里，线框图是一种很好的产品工具，而不是一个可行的 UX 设计和 UI 设计工具。 前 Google 设计师 Alex Socoloff 在推特上说：“Unpopular opinion: Low-fi wireframes are just a waste of time.”，意思是“非主流的观点：（产品设计过程 …
  设计 | 重新认识线框图 查看全文 »]]></summary>
        <author>
            <name>Frank</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[设计 | Arc 浏览器怎么确定产品需求？]]></title>
        <id>https://nishuang.net/?p=30657</id>
        <link href="https://nishuang.net/%e8%ae%be%e8%ae%a1-arc-%e6%b5%8f%e8%a7%88%e5%99%a8%e6%80%8e%e4%b9%88%e7%a1%ae%e5%ae%9a%e4%ba%a7%e5%93%81%e9%9c%80%e6%b1%82%ef%bc%9f/"/>
        <updated>2023-09-22T04:57:12.000Z</updated>
        <summary type="html"><![CDATA[从客观的市场调研到主观地大胆创意，从保守的数据分析到激进地用补贴来制造需求……每个团队都有自己的方式来确定产品需求。 Arc 浏览器有很多奇妙、奇特、奇怪的功能，很难想象他们的产品需求是从哪儿来的。 他们拍了视频介绍他们的做法。 这其实是很多技术背景的创业公司、独立开发者的常规做法 – 试试再说！ 只要设计原型和开发原型的成本足够低，尝试出来的功能、往往是最好的功能。 而大公司、一般团 …
  设计 | Arc 浏览器怎么确定产品需求？ 查看全文 »]]></summary>
        <author>
            <name>Frank</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[学习 | 为什么上司会问不重要的小细节]]></title>
        <id>https://nishuang.net/?p=30652</id>
        <link href="https://nishuang.net/%e5%ad%a6%e4%b9%a0-%e4%b8%ba%e4%bb%80%e4%b9%88%e4%b8%8a%e5%8f%b8%e4%bc%9a%e9%97%ae%e4%b8%8d%e9%87%8d%e8%a6%81%e7%9a%84%e5%b0%8f%e7%bb%86%e8%8a%82/"/>
        <updated>2023-09-22T03:46:22.000Z</updated>
        <summary type="html"><![CDATA[老板、上司、老员工会吹毛求疵，说你文档里写了错别字。这不是比“直升机老板”、“微管理”还烦人么？ 我以前经常会直接纠正同事的小细节错误。 比如我经常要解释“登录”是 Log in 的翻译、所以不是“登陆”，用户的“账户”是 Account 的翻译、所以不是“帐户”…跟纠正“的地得”差不多。还好我在工作场合属于比较 nice 的人，即使口无遮拦，同事也知道我没什么恶意、不会多计较。 随着工作中管理职 …
  学习 | 为什么上司会问不重要的小细节 查看全文 »]]></summary>
        <author>
            <name>Frank</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[倪爽的阅读分享 – 2023年9月22日]]></title>
        <id>https://nishuang.net/?p=30625</id>
        <link href="https://nishuang.net/%e5%80%aa%e7%88%bd%e7%9a%84%e9%98%85%e8%af%bb%e5%88%86%e4%ba%ab-2023%e5%b9%b49%e6%9c%8822%e6%97%a5/"/>
        <updated>2023-09-22T00:44:16.000Z</updated>
        <summary type="html"><![CDATA[So AI can make optical illusions now 现在人工智能可以制造视觉错觉了 Stable Diffusion 用户分享了看起来像普通人物照片的图像。然而，仔细观察后，就会发现这些图像实际上是由字词和信息组成的。例如这个蹲在湿地上的女人，仔细观察后，她展示了一个比特币的标志。 This beer-powered puffer jacket is the coolest  …
  倪爽的阅读分享 – 2023年9月22日 查看全文 »]]></summary>
        <author>
            <name>Frank</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[科技爱好者周刊（第 272 期）：Unity 的安装费，游戏业的缩影]]></title>
        <id>http://www.ruanyifeng.com/blog/2023/09/weekly-issue-272.html</id>
        <link href="http://www.ruanyifeng.com/blog/2023/09/weekly-issue-272.html"/>
        <updated>2023-09-22T00:07:00.000Z</updated>
        <summary type="html"><![CDATA[这里记录每周值得分享的科技内容，周五发布。（[通知] 十一假期，周刊休息，节后再见。）
本杂志开源，欢迎投稿。另有《谁在招人》服务，发布程序员招聘信息。合作请邮件联系（yifeng.ruan@gmail.com）。
封面图

哥伦比亚最著名的艺术家费尔南多·博特罗 （Fernando Botero）本月去世，享年91岁。他喜欢创作胖乎乎的、有滑稽感的人物和动物，上图是他的雕塑《猫》。2016年，他来中国开作品展，我还去看了。（via）
Unity 的安装费，游戏业的缩影
Unity 是一个顶级的游戏引擎，很多著名的手机游戏和网页游戏都用它开发，比如《王者荣耀》和《原神》。

它的官网这样说："排名前1000名的手机游戏开发商，70%选择了 Unity"。

它按月收费，只要游戏的年收入超过20万美元，就要向它付费，游戏收入越高，费用越多。
9月12日，它突然宣布，改变收费政策。从明年元旦开始，除了原有费用，还增加了一笔安装费。

游戏年收入超过20万美元，并且用户安装超过20万次以后，每次新的安装都要向 Unity 付费0.20美元。
简单计算一下，这会让游戏公司增加多少支出。如果一个游戏每年有100万次下载，那么扣除前20万次，剩下的要向 Unity 支付16万美元的安装费。要是游戏年收入为30万美元，就等于超过一半的收入没了。
这项费用对于小型游戏公司，打击尤其严重。因为它们往往采用免费游戏和云游戏模式，依靠广告为生。根据一项统计，游戏里面的每次广告展示，平均收入为0.02美元，如果想要覆盖0.2美元的安装费，就意味着，每一位玩家都必须多看至少10次广告。
难怪 Unity 的收费公告一发布，开发者顿时群情激愤，纷纷谴责 Unity 太过份，杀鸡取卵，大家开始研究怎么从 Unity 迁移到其他引擎。

我看到的评论里面，只有一篇文章为 Unity 说话（下图），认为它也…]]></summary>
        <author>
            <name>阮一峰的网络日志</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Remix | 为什么美国人看电视、看电影也要英文字幕？]]></title>
        <id>https://nishuang.net/?p=30618</id>
        <link href="https://nishuang.net/remix-%e4%b8%ba%e4%bb%80%e4%b9%88%e7%be%8e%e5%9b%bd%e4%ba%ba%e7%9c%8b%e7%94%b5%e8%a7%86%e3%80%81%e7%9c%8b%e7%94%b5%e5%bd%b1%e4%b9%9f%e8%a6%81%e8%8b%b1%e6%96%87%e5%ad%97%e5%b9%95%ef%bc%9f/"/>
        <updated>2023-09-21T19:04:55.000Z</updated>
        <summary type="html"><![CDATA[Vox 拍了一部短片，说美国人看电影、看电视也听不清台词，也需要看字幕来理解台词。结果短片引起共鸣、被播放超过 1000 万次。 各种听不清的台词里，最被人诟病的来自大导演诺兰的电影，他说这是刻意的，他希望你去电影院听 128 声道专业级音效，手机上听不清台词算你活该。 观众听不清台词的另一个原因，反而是因为技术的进化。具体来说，现在的麦克风太灵敏了，演员学会了很低声地说话。30 Rock 男主角 …
  Remix | 为什么美国人看电视、看电影也要英文字幕？ 查看全文 »]]></summary>
        <author>
            <name>Frank</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[学习 | 怎么在 X/推特 获取优质信息]]></title>
        <id>https://nishuang.net/?p=30607</id>
        <link href="https://nishuang.net/%e5%ad%a6%e4%b9%a0-%e6%80%8e%e4%b9%88%e5%9c%a8-x-%e6%8e%a8%e7%89%b9-%e8%8e%b7%e5%8f%96%e4%bc%98%e8%b4%a8%e4%bf%a1%e6%81%af/"/>
        <updated>2023-09-21T07:08:40.000Z</updated>
        <summary type="html"><![CDATA[推特是获取信息最快的社交网络，如果掌握一定技巧，推特也能获取最有价值的信息。 推特是个奇特的社交网站，你可以在这里获取一手信息，和各个领域的高人直接沟通，同时你也会在这里看到各种垃圾信息，各种居心不良的人在这里别有目的。 如果你想在推特获得优质的、有价值的信息，或者学习 AI 之类的新知识，那就需要技巧来过滤垃圾信息、放大优质信息。 没耐心的人直接跳到 Part 3。 Part 1：过滤垃圾信息  …
  学习 | 怎么在 X/推特 获取优质信息 查看全文 »]]></summary>
        <author>
            <name>Frank</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[设计 | 察言观色也有东西方文化差异]]></title>
        <id>https://nishuang.net/?p=30600</id>
        <link href="https://nishuang.net/%e8%ae%be%e8%ae%a1-%e5%af%9f%e8%a8%80%e8%a7%82%e8%89%b2%e4%b9%9f%e6%9c%89%e4%b8%9c%e8%a5%bf%e6%96%b9%e6%96%87%e5%8c%96%e5%b7%ae%e5%bc%82/"/>
        <updated>2023-09-21T06:06:10.000Z</updated>
        <summary type="html"><![CDATA[看看下面的图片，你觉得画面中间的这两个人是什么心情？ 来自加拿大 University of Alberta 的研究人员，找了加拿大学生和日本学生做对比测试，研究结果表明： 研究结果说东方人察言观色时更具备集体意识。 中国文化和日本文化都属于典型的东亚文化，你可以拿这个结论对比一下自己的观察结果，看看你是只看中间人物表情、还是无意识地观察了所有人的表情。 心理学研究说这种差异来自东西方文化的差异， …
  设计 | 察言观色也有东西方文化差异 查看全文 »]]></summary>
        <author>
            <name>Frank</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[学习 | 为什么笔记工具不会让我们更聪明]]></title>
        <id>https://nishuang.net/?p=30591</id>
        <link href="https://nishuang.net/%e5%ad%a6%e4%b9%a0-%e4%b8%ba%e4%bb%80%e4%b9%88%e7%ac%94%e8%ae%b0%e5%b7%a5%e5%85%b7%e4%b8%8d%e4%bc%9a%e8%ae%a9%e6%88%91%e4%bb%ac%e6%9b%b4%e8%81%aa%e6%98%8e/"/>
        <updated>2023-09-21T05:50:59.000Z</updated>
        <summary type="html"><![CDATA[因为笔记善于存储而无法激发思考，AI 人工智能也改不了这一点。 前几天读了一篇资深记者写的文章，他说出了我一直的观点：笔记工具只是帮你记录更多信息，并不能自动帮你学习。 作者因为工作原因要处理大量信息，他尝试了 Roam Research、Obsidian、Mem 等不同的笔记工具，但标签、双向链接这些知识管理功能，并不能阻止我们工作时分心，工作效率不会有什么提升。 同时，Notion AI、Ch …
  学习 | 为什么笔记工具不会让我们更聪明 查看全文 »]]></summary>
        <author>
            <name>Frank</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[倪爽的阅读分享 – 2023年9月21日]]></title>
        <id>https://nishuang.net/?p=30587</id>
        <link href="https://nishuang.net/%e5%80%aa%e7%88%bd%e7%9a%84%e9%98%85%e8%af%bb%e5%88%86%e4%ba%ab-2023%e5%b9%b49%e6%9c%8821%e6%97%a5/"/>
        <updated>2023-09-21T04:43:42.000Z</updated>
        <summary type="html"><![CDATA[More than half of Americans plan to get updated COVID shot 超过一半的美国人计划接种更新的COVID疫苗 根据最近的一项调查，超过半数的美国成年人计划接种最新的 COVID-19 疫苗。该疫苗针对omicron亚变种XBB.1.5。 What’s in the US military’s historic lost and fou …
  倪爽的阅读分享 – 2023年9月21日 查看全文 »]]></summary>
        <author>
            <name>Frank</name>
        </author>
    </entry>
</feed>