<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>urn:2024-03-22T09:52:17.738Z</id>
    <title>Lainbo's RSS</title>
    <updated>2024-03-22T09:52:17.738Z</updated>
    <generator>osmosfeed 1.15.1</generator>
    <link rel="alternate" href="index.html"/>
    <entry>
        <title type="html"><![CDATA[发布了: 个人比较期待的两个 AI 硬件: 戒指和眼镜 ━━━━━━━━━━━━━━ - 戒指 + 轻巧无感 + 指标: 身体指标检测, 心率,睡眠,运动 + 录音: 自动录音并...]]></title>
        <id>https://m.okjike.com/originalPosts/65fd2b43de5f287348d94de3</id>
        <link href="https://m.okjike.com/originalPosts/65fd2b43de5f287348d94de3"/>
        <updated>2024-03-22T06:54:59.000Z</updated>
        <summary type="html"><![CDATA[个人比较期待的两个 AI 硬件: 戒指和眼镜
━━━━━━━━━━━━━━
- 戒指
  + 轻巧无感
  + 指标: 身体指标检测, 心率,睡眠,运动
  + 录音: 自动录音并生成当天总结(数字人生)
  + 提醒: 聊天工具的新消息通过戒指的震动来提醒
- 眼镜
  + 近视率高, 配戴无感
  + AR: 识别当前观看之物,并提供相关解读信息
  + 电话: 包含并替代掉无线耳机功能, 直接接打电话]]></summary>
        <author>
            <name>李继刚的即刻动态</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[jym，有没有好用的 便宜的 稳定的 ti zi 可否推荐下[流泪]]]></title>
        <id>7348832432081518643</id>
        <link href="https://juejin.cn/pin/7348832432081518643"/>
        <updated>2024-03-22T06:51:05.000Z</updated>
        <summary type="html"><![CDATA[jym，有没有好用的 便宜的 稳定的 ti zi 可否推荐下[流泪]]]></summary>
        <author>
            <name>gitboyzcf</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[发布了: 带着同事们出来吃饭，干坐了半小时，点了没上菜。 我就知道是我二逼了😂]]></title>
        <id>https://m.okjike.com/originalPosts/65fd0f9a3624666324362d47</id>
        <link href="https://m.okjike.com/originalPosts/65fd0f9a3624666324362d47"/>
        <updated>2024-03-22T04:56:58.000Z</updated>
        <summary type="html"><![CDATA[带着同事们出来吃饭，干坐了半小时，点了没上菜。
我就知道是我二逼了😂]]></summary>
        <author>
            <name>Barret李靖的即刻动态</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[体验资格来了，抓紧试试 Arc for Windows beta]]></title>
        <id>7348797898492641314</id>
        <link href="https://juejin.cn/pin/7348797898492641314"/>
        <updated>2024-03-22T04:23:21.000Z</updated>
        <summary type="html"><![CDATA[体验资格来了，抓紧试试 Arc for Windows beta]]></summary>
        <author>
            <name>吴楷鹏</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[什么是长尾效应？ 在SEO优化项目中，新站可以优先考虑优化KD比较低，也更加精准的的长尾关键词，获取更快的关键词排名。]]></title>
        <id>7348824894157029402</id>
        <link href="https://juejin.cn/pin/7348824894157029402"/>
        <updated>2024-03-22T04:16:23.000Z</updated>
        <summary type="html"><![CDATA[什么是长尾效应？
在SEO优化项目中，新站可以优先考虑优化KD比较低，也更加精准的的长尾关键词，获取更快的关键词排名。]]></summary>
        <author>
            <name>小王子的外贸笔记</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[发布了: 𝐧𝐨 𝐫𝐢𝐬𝐤, 𝐧𝐨 𝐬𝐭𝐨𝐫𝐲.]]></title>
        <id>https://m.okjike.com/originalPosts/65fd006aa922aa28d093a220</id>
        <link href="https://m.okjike.com/originalPosts/65fd006aa922aa28d093a220"/>
        <updated>2024-03-22T03:52:10.000Z</updated>
        <summary type="html"><![CDATA[𝐧𝐨 𝐫𝐢𝐬𝐤, 𝐧𝐨 𝐬𝐭𝐨𝐫𝐲.]]></summary>
        <author>
            <name>李继刚的即刻动态</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[之前开发了一个截图美化在线应用，并在掘金宣传了一下：https://juejin.cn/post/7331584783610855460，最近这个工具被我移植到了国产的效率工具 uTools 平台上，...]]></title>
        <id>7348864869229805587</id>
        <link href="https://juejin.cn/pin/7348864869229805587"/>
        <updated>2024-03-22T03:40:18.000Z</updated>
        <summary type="html"><![CDATA[之前开发了一个截图美化在线应用，并在掘金宣传了一下：https://juejin.cn/post/7331584783610855460，最近这个工具被我移植到了国产的效率工具 uTools 平台上，和系统的截图功能集成，体验更好！]]></summary>
        <author>
            <name>SleepyZone</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[jym,四千出头预算台式机有没有配置推荐，基本玩101和瓦，偶尔玩3A（能低画质带就行）]]></title>
        <id>7348709938024202280</id>
        <link href="https://juejin.cn/pin/7348709938024202280"/>
        <updated>2024-03-22T02:42:41.000Z</updated>
        <summary type="html"><![CDATA[jym,四千出头预算台式机有没有配置推荐，基本玩101和瓦，偶尔玩3A（能低画质带就行）]]></summary>
        <author>
            <name>用户753800550358</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[使用Earthly快速构建项目]]></title>
        <id>7348703569053057061</id>
        <link href="https://juejin.cn/pin/7348703569053057061"/>
        <updated>2024-03-22T01:01:09.000Z</updated>
        <summary type="html"><![CDATA[使用Earthly快速构建项目]]></summary>
        <author>
            <name>壹砂木木</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[科技爱好者周刊（第 294 期）：崖门海战的感想]]></title>
        <id>http://www.ruanyifeng.com/blog/2024/03/weekly-issue-294.html</id>
        <link href="http://www.ruanyifeng.com/blog/2024/03/weekly-issue-294.html"/>
        <updated>2024-03-22T00:11:26.000Z</updated>
        <summary type="html"><![CDATA[这里记录每周值得分享的科技内容，周五发布。
本杂志开源，欢迎投稿。另有《谁在招人》服务，发布程序员招聘信息。合作请邮件联系（yifeng.ruan@gmail.com）。
封面图

上海徐家汇的美罗城，在球形屏幕上播放漫画作品《七龙珠》的图像，纪念本月去世的日本漫画家鸟山明。（via）
崖门海战的感想
前一段日子，我在广东旅行，路过江门市。
我偶然发现，著名的崖门海战发生在这里，就去参观了。

如果你不知道，崖门海战是南宋军队最后被元军歼灭的地方，也就是南宋灭亡之地，位于今天的江门市新会区古井镇官冲村。具体时间是1279年3月19日，本周正好是745周年。
那个地方可真远，我先从江门市区到了新会，它距离新会城区还有30多公里，公共交通只有一部从古井镇出发的、班次很少的郊区客运，基本上你只能自驾或打的前往。
即使按照今天的标准，它都属于偏远，何况当年。南宋朝廷是何等窘迫，要逃到这种地方落脚。

（图片说明：景区没有多少留存的古迹，只有重建的崖山祠。）
参观后，我浮想联翩，觉得真是不可思议，南宋军队犯了那么多低级错误，才导致灭亡。
下面，我分享我看到的一些细节，好像没有人说过。
首先，崖门海战不是发生在海里。
我一直以为，既然是海战，那一定是在海边。错了！战场遗址是在一个陆上水道，距离大海至少还有十几公里。

上面是百度地图的截图，可以看到战场距离入海口还有很长一段路。
虽然古代的海岸线跟今天不一样，但是根据古代地图（下图）以及纪念馆的沙盘（下图），战场确实是在水道里面，不是在开阔海域。


下面是我拍的实地照片，虽然天气不好，灰蒙蒙的，但是能看清水道其实很狭窄。

你能相信吗，20万人、上千艘船就在这么一条狭窄的水道里面厮杀？
这么一点点地方，根本无法施展，不要说战术，恐怕布阵都困难，完全就是混战。加之两岸都是平滩，也无法陆上支援，防守的一方基本上就是听人宰割，这也是当天实际…]]></summary>
        <author>
            <name>阮一峰的网络日志</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[CSS initial-letter属性，嗯……也就这样吧]]></title>
        <id>https://www.zhangxinxu.com/wordpress/?p=11142</id>
        <link href="https://www.zhangxinxu.com/wordpress/2024/03/css-initial-letter/"/>
        <updated>2024-03-21T15:34:35.000Z</updated>
        <summary type="html"><![CDATA[带大家快速了解下CSS initial-letter属性，可以更好地设置首字母的排版效果。]]></summary>
        <author>
            <name>张 鑫旭</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[《Call of the Wild: The Angler™》]]></title>
        <id>https://store.epicgames.com/zh-CN/p/call-of-the-wild-the-angler</id>
        <link href="https://store.epicgames.com/zh-CN/p/call-of-the-wild-the-angler"/>
        <updated>2024-03-21T15:00:00.000Z</updated>
        <summary type="html"><![CDATA[《猎人：荒野的召唤》游戏的创作者们带来了身临其境的颠覆性钓鱼体验！探索辽阔的开放世界，找寻绝佳的钓鱼地点。单人游戏或与好友一起，尽享在开放水域钓鱼的乐趣。赶快出发，踏上钓鱼大师的成长旅途。

Free Now to 2024-03-28T15:00:00.000Z]]></summary>
        <author>
            <name>Expansive Worlds AB</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Invincible Presents: Atom Eve]]></title>
        <id>https://store.epicgames.com/zh-CN/p/atom-eve-ff090d</id>
        <link href="https://store.epicgames.com/zh-CN/p/atom-eve-ff090d"/>
        <updated>2024-03-21T15:00:00.000Z</updated>
        <summary type="html"><![CDATA[Become Atom Eve and take control of your own path as one of the most powerful superheroes in the Invincible universe! Unravel a mystery and balance the dangers and responsibilities of being a superhero with the relatable challenges of everyday life.

Free Now to 2024-03-28T15:00:00.000Z]]></summary>
        <author>
            <name>Skybound Game Studios, Inc.</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[发布了: 明朝学者崔铣的《听松堂语镜》中有著名的修身养性的“六然训”，认为人生在世要做到“六然”——自处超然、处人蔼然、有事斩然、无事澄然、得意淡然、失...]]></title>
        <id>https://m.okjike.com/originalPosts/65fc21723b9c66cae44a90d3</id>
        <link href="https://m.okjike.com/originalPosts/65fc21723b9c66cae44a90d3"/>
        <updated>2024-03-21T12:00:50.000Z</updated>
        <summary type="html"><![CDATA[明朝学者崔铣的《听松堂语镜》中有著名的修身养性的“六然训”，认为人生在世要做到“六然”——自处超然、处人蔼然、有事斩然、无事澄然、得意淡然、失意泰然。]]></summary>
        <author>
            <name>李继刚的即刻动态</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[发布了: 什么叫以用户为中心? 你成功与否, 不在于你做的好与坏, 多与少, 而在于用户是否买单。 你产品功能更多，UI 更好看， 速度更快, 这些重要也不那么重要, ...]]></title>
        <id>https://m.okjike.com/originalPosts/65fc16009185c305d17b269e</id>
        <link href="https://m.okjike.com/originalPosts/65fc16009185c305d17b269e"/>
        <updated>2024-03-21T11:12:00.000Z</updated>
        <summary type="html"><![CDATA[什么叫以用户为中心?
你成功与否, 不在于你做的好与坏, 多与少, 而在于用户是否买单。
你产品功能更多，UI 更好看， 速度更快, 这些重要也不那么重要, 最关键的取决于用户当下是否需要那些东西。
是否做一个功能, 资源投在哪个指标优化上, 是否打败竞争对手, 都不是胜负手。用户当下需要什么才是。]]></summary>
        <author>
            <name>李继刚的即刻动态</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[发布了: 交流群的信躁比指标 ━━━━━━━━━━━━━━ 信躁比 = 信息 / 躁声 群信息 = 信息 + 躁声 - 信息: 降低不确定性的内容 比如, 新观点, 科学最新研...]]></title>
        <id>https://m.okjike.com/originalPosts/65fc0c2d9185c305d17a444c</id>
        <link href="https://m.okjike.com/originalPosts/65fc0c2d9185c305d17a444c"/>
        <updated>2024-03-21T10:30:05.000Z</updated>
        <summary type="html"><![CDATA[交流群的信躁比指标
━━━━━━━━━━━━━━
信躁比 = 信息 / 躁声
群信息 = 信息 + 躁声
- 信息: 降低不确定性的内容
  比如, 新观点, 科学最新研究, 一个优秀的示例, 实践中获得的心得等等, 越多越好.
- 躁声: 没有降低不确定性的内容
  比如, 新人介绍, 发红包, 排队点赞， 列队感谢, 口水闲聊, 越少越好.
当然, 信躁比不应是评判所有群的唯一标准, 山南海北侃大山的放松交流群也有其风趣幽默之美, 但是, 你应有一个信躁比极高的群, 当你想要降低信息熵, 再学点新东西的时候, 你知道地方。]]></summary>
        <author>
            <name>李继刚的即刻动态</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[有没有jy知道 安卓可以模拟设备id的app呀]]></title>
        <id>7348384849403609140</id>
        <link href="https://juejin.cn/pin/7348384849403609140"/>
        <updated>2024-03-21T08:12:01.000Z</updated>
        <summary type="html"><![CDATA[有没有jy知道 安卓可以模拟设备id的app呀]]></summary>
        <author>
            <name>逃离地球的太阳</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[[7073670907851440160#新人报道#]大家好，新人多关照]]></title>
        <id>7348466339361521715</id>
        <link href="https://juejin.cn/pin/7348466339361521715"/>
        <updated>2024-03-21T07:06:15.000Z</updated>
        <summary type="html"><![CDATA[[7073670907851440160#新人报道#]大家好，新人多关照]]></summary>
        <author>
            <name>有为563</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[写了一个符号映射的插件，预设了一些中文符号转英文的规则，有兴趣的可以了解一下，代码也很简单几十行，涵盖了指令，底部栏，config以及一些事件的监听和状态的...]]></title>
        <id>7348485761467285558</id>
        <link href="https://juejin.cn/pin/7348485761467285558"/>
        <updated>2024-03-21T06:11:38.000Z</updated>
        <summary type="html"><![CDATA[写了一个符号映射的插件，预设了一些中文符号转英文的规则，有兴趣的可以了解一下，代码也很简单几十行，涵盖了指令，底部栏，config以及一些事件的监听和状态的更新，可以作为不错的学习 vscode 插件的学习项目👀]]></summary>
        <author>
            <name>Simon_He</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[发布了: 文章憎命达 ━━━━━━━━━━━━━━ 在很多地方看到"成功"人士表达过类似的意思: 以前一穷二白的时候, 没有其它念想, 只有一个念头，拼了命的创作...]]></title>
        <id>https://m.okjike.com/originalPosts/65fbc58e9185c305d173e19b</id>
        <link href="https://m.okjike.com/originalPosts/65fbc58e9185c305d173e19b"/>
        <updated>2024-03-21T05:28:46.000Z</updated>
        <summary type="html"><![CDATA[文章憎命达
━━━━━━━━━━━━━━
在很多地方看到"成功"人士表达过类似的意思: 以前一穷二白的时候, 没有其它念想, 只有一个念头，拼了命的创作, 把自己的生命注入到创作中，满腔悲愤喷涌而出。 作品质量既好，数量还非常多。
周杰伦， 脱口秀演员（坐地铁那个，说你呢）， 等等， 皆是如此。
可能这就是乔布斯所说的 Stay hungry 吧。
但那么多高质量的作品，他们终究会成功冒出来, 功成名就, 名利双收。生活美满惬意，没有悲愤，没有共情， 创作出来的东西，开始花团锦绣，再也不能像穷小子的时候那样疯狂输出了。
后浪的穷小子，正挤在满当的地铁上，构思着他对这个世界想说的话。
文章憎命达，循环往复。]]></summary>
        <author>
            <name>李继刚的即刻动态</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[发布了: 大模型水平突飞猛进，以后拉开人与人差距的那个要素会是什么？ 我目前觉得有两个会比较关键： 逻辑和审美。 使用大模型的技巧，属于术，好学，且只会愈...]]></title>
        <id>https://m.okjike.com/originalPosts/65fbb19312ed2fda68f98a58</id>
        <link href="https://m.okjike.com/originalPosts/65fbb19312ed2fda68f98a58"/>
        <updated>2024-03-21T04:03:31.000Z</updated>
        <summary type="html"><![CDATA[大模型水平突飞猛进，以后拉开人与人差距的那个要素会是什么？
我目前觉得有两个会比较关键： 逻辑和审美。
使用大模型的技巧，属于术，好学，且只会愈发易学。
逻辑和审美，属于道，不是短期内可以快速突击掌握的东西，需要长时间的浸淫温养。]]></summary>
        <author>
            <name>李继刚的即刻动态</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[jym，分享一个羊毛，百度AI编码插件，现在扫码登录，使用下插件就可以获取100积分，300积分就可以兑换京东E卡，https://comate.baidu.com/?inviteCode=ab2ras39]]></title>
        <id>7348414849397227558</id>
        <link href="https://juejin.cn/pin/7348414849397227558"/>
        <updated>2024-03-21T03:06:33.000Z</updated>
        <summary type="html"><![CDATA[jym，分享一个羊毛，百度AI编码插件，现在扫码登录，使用下插件就可以获取100积分，300积分就可以兑换京东E卡，https://comate.baidu.com/?inviteCode=ab2ras39]]></summary>
        <author>
            <name>米粒变胖了</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[有什么开发golang的比较好的开发工具，轻量级的，除了goland]]></title>
        <id>7348363874964553728</id>
        <link href="https://juejin.cn/pin/7348363874964553728"/>
        <updated>2024-03-21T03:03:15.000Z</updated>
        <summary type="html"><![CDATA[有什么开发golang的比较好的开发工具，轻量级的，除了goland]]></summary>
        <author>
            <name>重启猫_kid</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[没想到三天10KStar的营销利器MediaCrawler开源作者已经删库了]]></title>
        <id>https://juejin.cn/post/7348349574413467674</id>
        <link href="https://juejin.cn/post/7348349574413467674"/>
        <updated>2024-03-21T01:45:12.000Z</updated>
        <summary type="html"><![CDATA[theme: nico
highlight: androidstudio
前言
一站式社交平台数据抓取利器，带你玩转小红书、抖音、快手、B站和微博数据分析
不经意间，来查看MediaCrawler仓库源码，发现作者已经删库了。看来是领奖了。才几天不到的时间Star数量已经直逼10K了，增长速度近乎疯狂。
前两天只是将代码下载下来了，还没认真的玩。还好代码本地已经有了。如果有兴趣的也可以来找我要，免费的哟。

作者在这里也明显进行了标注使用了无头浏览器

那到底什么事无头浏览器呢？
无头浏览器（Headless Browser）是一种浏览器程序，没有图形用户界面（GUI），但能够执行与普通浏览器相似的功能。无头浏览器能够加载和解析网页，执行JavaScript代码，处理网页事件，并提供对DOM（文档对象模型）的访问和操作能力。
与传统浏览器相比，无头浏览器的主要区别在于其没有可见的窗口或用户界面。这使得它在后台运行时，不会显示实际的浏览器窗口，从而节省了系统资源，并且可以更高效地执行自动化任务。
常见的无头浏览器包括Headless Chrome（Chrome的无头模式）、PhantomJS、Puppeteer（基于Chrome的无头浏览器库）、playwright等。它们提供了编程接口，使开发者能够通过代码自动化控制和操作浏览器行为。

如果您比较Playwright和 Puppeteer的贡献者页面 ，您会注意到Puppeteer的前两个贡献者现在在 Playwright 上工作。Puppeteer 团队实质上是从 Google 转移到 Microsoft 并成为 Playwright 团队。
因此，Playwright 在很多方面与 Puppeteer 非常相似。API 方法在大多数情况下是相同的，并且默认情况下 Playwright 还捆绑了兼容的浏览器。
Playwright 最大的区别在于跨浏览器支持。它可以驱动 Chromium、WebKit（Safari 的浏览器引擎）和 Firefox。
无头浏览器其实就是看不见的浏览器，所有的操作都要通过代码调用 API 来控制，所以浏览器能干的事儿，无头浏览器都能干，而且很多事儿做起来比标准的浏览器更简单。
能够干什么呢？
我举几个常用的功能来说明一下无头浏览器的主要使用场景
自动化测试： 无头浏览器可以模拟用户行为，执行自动化测试任务，例如对网页进行加载、表单填写、点击按钮、检查页面元素等。
数据抓取： 无头浏览器可用于爬取网页数据，自动访问网站并提取所需的信息，用于数据分析、搜索引擎优化等。
屏幕截图： 无头浏览器可以加载网页并生成网页的截图，用于生成快照、生成预览图像等。
服务器端渲染： 无头浏览器可以用于服务器端渲染（Server-side Rendering），将动态生成的页面渲染为静态HTML，提供更好的性能和搜索引擎优化效果。
生成 PDF 文件：使用浏览器自带的生成 PDF 功能，将目标页面转换成 PDF 。
这个仓库如何使用呢
首先这是一个Python库，当然要安装必要的Python环境，这个我就不多说了，通过GPT或者在网上搜索都可以进行安装好。
接下来就是拿到代码后如何使用，这个其实作者也是非常的友好了，直接看README。

最后运行命令后，会出现一个二维码，比如这里我测试的是小红书，出现二维码之后，我们用小红书App来扫描，并进行确认身份，这样无头浏览器就能识别并记住我们的身份信息，后续就可以通过该身份进行抓取一些数据了。

这里我配置了一条小红书的笔记ID,这里是个数据可以配置多个的。
好了，OK ,数据就被这么简单的抓取下来了。


作者还特意对数据存储做了封装，如果数据量大的时候存储起来可能就非常的方便了。
如果需求量很大，还可以对其源码进行研究改造，好了今天的学习就到这里了。]]></summary>
        <author>
            <name>那个曾经的少年回来了</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[发布了: 公司马路对面找到的碳水，以后早餐有着落了]]></title>
        <id>https://m.okjike.com/originalPosts/65fb857c12ed2fda68f56ba3</id>
        <link href="https://m.okjike.com/originalPosts/65fb857c12ed2fda68f56ba3"/>
        <updated>2024-03-21T00:55:24.000Z</updated>
        <summary type="html"><![CDATA[公司马路对面找到的碳水，以后早餐有着落了]]></summary>
        <author>
            <name>Barret李靖的即刻动态</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[#写作工具 写完博客后，都需要在文章前后写些固定内容，打一打广告，每次重复添加都挺烦的 写了个小工具，拼接文章前后固定文本，并且做了缓存，这样每次只需要...]]></title>
        <id>7348275757800570895</id>
        <link href="https://juejin.cn/pin/7348275757800570895"/>
        <updated>2024-03-20T13:40:10.000Z</updated>
        <summary type="html"><![CDATA[#写作工具 写完博客后，都需要在文章前后写些固定内容，打一打广告，每次重复添加都挺烦的
写了个小工具，拼接文章前后固定文本，并且做了缓存，这样每次只需要粘贴正文即可
👉 工具地址：https://wukaipeng.com/sandwich]]></summary>
        <author>
            <name>吴楷鹏</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[发布了: 慎重对待你选择的比喻对象 ━━━━━━━━━━━━━━ 当遇到一个陌生问题, 一个非常自然的思考方式就是将它归约类比到一个熟悉问题上。 这种方式经...]]></title>
        <id>https://m.okjike.com/originalPosts/65fac5f912ed2fda68e9c1e9</id>
        <link href="https://m.okjike.com/originalPosts/65fac5f912ed2fda68e9c1e9"/>
        <updated>2024-03-20T11:18:17.000Z</updated>
        <summary type="html"><![CDATA[慎重对待你选择的比喻对象
━━━━━━━━━━━━━━
当遇到一个陌生问题, 一个非常自然的思考方式就是将它归约类比到一个熟悉问题上。
这种方式经常生效，确实好用。在比喻的过程中，自觉不自觉地完成了：剥离不重要元素，抽象内核， 寻找类似内核的喻体的过程。 用的好，就是在应用 80/20 原则，就是在寻找各类事物背后的一。
但这里有个需要注意的点，你的比喻对象太关键了， 它会影响你的后续思考和行动。
当你把一个复杂的事情，比喻成一团"乱麻"时，你想的是怎么去找那个"线头", 源头是什么,在哪里。
当你把这个复杂的事情联想到上下游产业角色时, 会把它比喻成一条河流, 你想的是上游角色有几层, 各自拦截多少水流, 你又准备放多少水流给到下游。
一旦使用了这个思考方式, 但又选择了错误的比喻对象, 很有可能就抓着你的喻体中的重点使劲操作， 但离真实的主要矛盾甚远。
这里的对象选择，感觉有点像艺术。没有太好的实践方法论可以总结。]]></summary>
        <author>
            <name>李继刚的即刻动态</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[发布了: 有一个角度可以把人分为两类: 1/ in box： 相信当前局面是多方博弈后的自然状态, 自己需要做的, 可以做的, 就是在这个局面中找到自己最舒服的位置, 适应...]]></title>
        <id>https://m.okjike.com/originalPosts/65faacf237f7165b215e8576</id>
        <link href="https://m.okjike.com/originalPosts/65faacf237f7165b215e8576"/>
        <updated>2024-03-20T09:31:30.000Z</updated>
        <summary type="html"><![CDATA[有一个角度可以把人分为两类:
1/ in box： 相信当前局面是多方博弈后的自然状态, 自己需要做的, 可以做的, 就是在这个局面中找到自己最舒服的位置, 适应当下的环境。
2/ out of box: 相信当前局面并不是最优解。基于现有的条件，只要改变组合或者权重，可以进一步优化，提升整体环境。
很多时候，这两者的区别，不是逻辑，不是事实，就是一个底层的信念。
因为相信，所以看见。]]></summary>
        <author>
            <name>李继刚的即刻动态</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[面经：给你300一天，你来不来？已offer]]></title>
        <id>https://juejin.cn/post/7348275757800030223</id>
        <link href="https://juejin.cn/post/7348275757800030223"/>
        <updated>2024-03-20T08:59:47.000Z</updated>
        <summary type="html"><![CDATA[theme: cyanosis
highlight: a11y-dark
这一次面试真的是我觉得非常非常遗憾和纠结的一次经历，面试大约1个小时多，一开始hr小姐姐告诉我通过面试其实我很开心，因为面试官其实和我很聊得来，面试过程也是十分愉悦，一开始是给我开了200/天的工资，可是因为自己的原因，不得不拒掉，最后，最让我觉得遗憾的是面试真的很看好我，我也很喜欢和面试官的这种交流方式，甚至是给我开到了300/天，希望我留下来。而且hr小姐姐说他们只招一个实习生，当时我真的就想立马飞过去了。可是最后真的真的很遗憾，我还是不得不拒掉了。一些原因，我也不太方便透露了。
下面我总结一下这次面试！
自我介绍
首先也是一个简单的自我介绍！介绍自己学业情况，什么时候开始学前端，学了哪些技术栈等等
介绍项目中难点
简单的介绍了自己是如何做的简历上面的练手项目，具体做了哪些内容。
我说了当时碰到的跨域问题
我们自己写的后端和前端之间的通信是会被浏览器的同源策略拦截，我们需要进行对这种情况进行处理！我是安装了一个Cors2直接use一下就解决了这个问题。
你了解解决跨越的方式吗
因为当时我还没有具体去了解怎么解决跨越，我只说了JSONP的方式！
当然，解决跨域有很多方式：jsonp ，Cors，node代理，nginx代理等等
前端让你感觉有点困难的点
我当时是说了一下，因为自己的练手项目可能不太符合实际上的业务需求，自己没有做过，这方面可能自己想要去进入一个实习学习一下，然后就是一些算法也没有掌握，然后就是vue很多源码还没有具体去看等等。
如果让你做什么内容让你感觉会有点挑战
切页面对前端来说不是什么问题，我说了一下可能有一些公司要求vue3转React这些，还有一些新的组件库没有使用可能需要我自己去了解一下，总结一下就是一些没接触的内容可能需要我们去适应！
vue的组件通信
介绍了一下vue是…]]></summary>
        <author>
            <name>Aidan路修远i</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[发布了: 不知道"轻言敬字"是不是世界通病, 嘴上聊的时候, 满嘴跑火车好像非常轻松自然, 但当要白纸黑字写下来发出去的时候, 心紧手慢。 于己而言，可养成一个习...]]></title>
        <id>https://m.okjike.com/originalPosts/65fa5b02164d89e6018549da</id>
        <link href="https://m.okjike.com/originalPosts/65fa5b02164d89e6018549da"/>
        <updated>2024-03-20T03:41:54.000Z</updated>
        <summary type="html"><![CDATA[不知道"轻言敬字"是不是世界通病, 嘴上聊的时候, 满嘴跑火车好像非常轻松自然, 但当要白纸黑字写下来发出去的时候, 心紧手慢。
于己而言，可养成一个习惯：每参加一次商业交谈，会后发送给对方你整理的交流纪要。]]></summary>
        <author>
            <name>李继刚的即刻动态</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[还在用tinypng？过时了！]]></title>
        <id>https://juejin.cn/post/7348004403016794147</id>
        <link href="https://juejin.cn/post/7348004403016794147"/>
        <updated>2024-03-20T02:30:06.000Z</updated>
        <summary type="html"><![CDATA[theme: cyanosis
还在用tinypng在线压缩？不如试试这个vscode插件！
vscode-image-manager 比tinypng更快，功能更多，更方便！
压缩效率对比
同一张图片，tinypng压缩结果为136kb，时间大概5s；
而image-manager压缩效果为 92kb，不到1s！
如果把上传图片、下载图片这些繁琐的操作加到一起，或许vscode插件的效率要高上10倍有余



支持格式对比
tinypng仅支持 png,webp,jpeg
而image-manager支持这么多
并且支持每个格式之间的转换
压缩限制对比
tinypng一次性最多20张，一张最大5MB
而image-manager一次性不限量，且一张最大20MB

浏览方便
vscode-image-manager支持3种文件结构展示方式
按目录分组（也就是咱们的文件夹概念）
按文件类型分组
平铺，一次性全部展示
按目录分组

按文件类型分组
平铺

同时，为了更方便查看，也支持两种文件夹展示方式
嵌套，一层一层的目录，不做空目录处理
紧凑，把空目录处理至同一层级
紧凑型

嵌套型

哪个喜欢，您就选哪个～
图片排序
目前支持两种排序方式
按图片大小排序
按图片名称排序

图片过滤
插件也支持根据条件过滤图片，目前支持这些条件

图片查找
像在vscode里面搜代码一样，搜索图片！支持模糊匹配、全词匹配等等！

主题色
插件本身主题色是继承的vscode主题，所以看起来不会有突兀的感觉，但是你也可以切换主题色或者暗黑模式，以应对不同的办公场景～
自定义主题色

暗黑模式

亮色模式

国际化
全世界都在说中国话～
插件支持英语、简体中文，默认是vscode的语言哦，可以在右上角设置中切换语言

裁剪
有了裁剪功能，咱也不依赖UI了，哼！

裁剪主要分两个功能区
配置
操作

裁剪完成后保存即可！


不能说方便，只能说十分方便！
更多功能
右键图片，即可唤出菜单

右键文件夹，唤出菜单

图片详情

最后
目前正在开发图片OCR，相似图片去重功能，敬请期待！～
快去试试插件吧！免费开源，用了不吃亏，用了不上当！！✌️]]></summary>
        <author>
            <name>minko</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Rust 的风，终究还是吹到了前端]]></title>
        <id>https://juejin.cn/post/7347962680608653366</id>
        <link href="https://juejin.cn/post/7347962680608653366"/>
        <updated>2024-03-20T02:16:53.000Z</updated>
        <summary type="html"><![CDATA[theme: awesome-green
🍄  大家好，我是风筝
🌍 个人博客：【古时的风筝】。
本文目的为个人学习记录及知识分享。如果有什么不正确、不严谨的地方请及时指正，不胜感激。
每一个赞都是我前进的动力。
公众号：「古时的风筝」
大家好，我是风筝
前些天有一个叫做Rolldown的工具悄悄开源了，做前端开发的同学可能已经了解到了。到文章发布的时候 star 数量已经是 5.8k 了。而此工具的开源作者正是前端大佬，Vue 创始人尤雨溪。

要说这个工具有什么特点吗？那可能有这么几个特点：
使用 Rust 语言编写；
性能更好，当然也得益于第1点；
主要开发者都是前端程序员，而且还有很多贡献者也是前端开发者。当然了，对于大佬们来说，语言只是实现功能的一个工具，用哪个都可以；
Rolldown 是什么
Rolldown 是一个用 Rust 编写的 JavaScript bundler，旨在未来作为 Vite 中的 bundler 使用。
现在写前端几乎都是用框架了，最流程的就是 Vue、React 了。基本上都采用模块化开发了，很少有用原生js、JQuery 来开发的项目了。相比于后端而言，一个大的前端项目一点也不比后端的文件少，甚至更多。
而一个用模块化方式编写的项目，想要在浏览器上运行，还需要做一些额外的工作。其中一个非常重要的工作就是将多个JS或者 TS 文件合并到一个文件中，而这个文件，浏览器能直接支持。这个过程就是 bundler（捆绑器）所要做的工作。
当然，现代浏览器对模块化已经支持的很好了，但是现在的打包服务还是会使用 bundler 打包成一个或几个js文件来用作线上环境。因为这样能最大限度的提高性能，尤其是减少网络方面的开销。
Rolldown 就是用来实现以上所说的功能的。
Rust 出手，要的就是快
现在主流的前端编译工具有 Webpack 和 Vite。Webpack 是比较老牌的了，功能丰富。还有最近比较火的 Vite，Vite 也是 Vue 团队开发的，功能对标 Webpack，只是性能要比 Webpack 高不少。
前端编译工具所说的性能好主要体现在几个方面：
打包速度快，如果一个项目巨大的话，性能差的打包工具可能要好几分钟；
开发调试响应快，改完一个文件，马上就能看到效果，而不是等上半天；
除了这两个功能最丰富的工具外，还有功能简单，专门用做 bundler 的 esbuild，用 Go 开发，性能极好。下面是几个常见工具打包一个简易项目的时间。

现在 Vite 中用的 bundler 就是倒数第二的这个 Rollup，所以这次尤雨溪大佬开发 Rolldown 也就是为了将这一部分的性能提上来。看名字也很有意思，一个 up，一个down。
前两天尤雨溪发的博文中说到，Rolldown 比 esbuild 还要快1.4~2倍，而且功能更丰富。果然大佬不用选择，既要性能好又要功能丰富，没有的话，那就自己开发。就是这么任性。

我看到 Hacker News 上，关于 Rolldown 有一个讨论，有一条是这么说的。

这是一个有趣的临界质量案例。几年前，Rust 是一种不太适合启动 JavaScript 工具（或 Python）的语言。然而，一些疯狂的人并不在意，只是继续这样做。随着时间的推移，对工具的基本投资水平突然意味着有很多可以利用的东西，它从一种晦涩的语言选择变成了一种相当合理的语言选择。
Rust 的风吹呀吹
不只是Rolldown，还有很多前端的工具正在被用 Rust 改写。
比如 Tailwind CSS ，在最新的 4.0 版进展公告中，也有写到关于 Rust 的一些应用。
Rust where it counts — we’ve migrated some of the most expensive and parallelizable parts of the framework to Rust, while keeping the core of the framework in TypeScript for extensibility.
Rust 发挥了重要作用——我们已将框架中一些最昂贵且可并行的部分迁移到 Rust，同时将框架的核心保留在 TypeScript 中以实现可扩展性。
前些天写过一篇文章 Rust 这么厉害吗，为什么连前端都在卷它，那时候风刚要吹起来。随着Rolldown 的开源，Rust 的影响力必然会影响到更多的前端工具。
还可以看看风筝往期文章
# 一千个微服务之死
# 我患上了空指针后遗症
# Java 把 CPU 干爆了，教你两种方法分分钟定位代码问题]]></summary>
        <author>
            <name>古时的风筝</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[发布了: 永远要相信没有绝对的稳操胜券，我们只不过在自己所掌握的信息框架内给出了有限的判断，放入一个更宏观的视角，或者引入更多的决策因子，事情的结果可能...]]></title>
        <id>https://m.okjike.com/originalPosts/65fa3a5237f7165b2153f844</id>
        <link href="https://m.okjike.com/originalPosts/65fa3a5237f7165b2153f844"/>
        <updated>2024-03-20T01:22:26.000Z</updated>
        <summary type="html"><![CDATA[永远要相信没有绝对的稳操胜券，我们只不过在自己所掌握的信息框架内给出了有限的判断，放入一个更宏观的视角，或者引入更多的决策因子，事情的结果可能就变得不一样了。]]></summary>
        <author>
            <name>Barret李靖的即刻动态</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[发布了: 追求卓越，就注定了要去突破极限，这是一件令人感到痛苦的事情，一旦达到了某个度，人就可能会崩溃。 在几近崩溃的那一刻，或许会认为自己已经失败了。...]]></title>
        <id>https://m.okjike.com/originalPosts/65fa2dae6d9f190631d0909f</id>
        <link href="https://m.okjike.com/originalPosts/65fa2dae6d9f190631d0909f"/>
        <updated>2024-03-20T00:28:30.000Z</updated>
        <summary type="html"><![CDATA[追求卓越，就注定了要去突破极限，这是一件令人感到痛苦的事情，一旦达到了某个度，人就可能会崩溃。
在几近崩溃的那一刻，或许会认为自己已经失败了。其实，并没有。当痛苦消散之后，所经历的一切，都会更大概率提升未来成功的可能性。
上次在黄山宏村见到一位老朋友，他是赶去参加 60km 越野赛的，我用“生猛”两个字形容他，毕竟马拉松 42km 就已经不是一般人可以承受的了，但他告诉我，60km 是他目标路上的热身赛，接下来要去突破 100km，那可能会有危险，但是他想去尝试。]]></summary>
        <author>
            <name>Barret李靖的即刻动态</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[发布了: 学习。]]></title>
        <id>https://m.okjike.com/originalPosts/65f993463624666324f5ee52</id>
        <link href="https://m.okjike.com/originalPosts/65f993463624666324f5ee52"/>
        <updated>2024-03-19T13:29:42.000Z</updated>
        <summary type="html"><![CDATA[学习。]]></summary>
        <author>
            <name>Barret李靖的即刻动态</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[一个vue页面复用方案]]></title>
        <id>https://juejin.cn/post/7347973138787467274</id>
        <link href="https://juejin.cn/post/7347973138787467274"/>
        <updated>2024-03-19T12:54:38.000Z</updated>
        <summary type="html"><![CDATA[前言
问大家一个问题，曾经的你是否也遇到过，一个项目中有好几个页面长得基本相同，但又差那么一点，想用 vue extends 继承它又不能按需继承html模板部分，恰好 B 页面需要用的 A 页面 80% 的模板，剩下的 20% 由 B 页面自定义，举个栗子：

我们假设这是两个页面，B页面比A页面多了个p标签，剩余的东西都一样，难道仅仅是因为这一个 p标签就要重新写一份模板吗？相信大部分伙伴解决方式是把公共部分抽成一个组件来用，这是一个好的做法。没错，但是来了，老板让你在 标题1、标题2下面分别插入一段内容，这会儿你是不是头大了？难道只能重写一份了吗？当然不是，来开始我们的填坑之路~（请大家看待问题不要局限于我举的例子,实际运用场景必然是不会这么简单的）
准备工作
准备以下工具包：
node-html-parser:  将html生成dom树 官网
npm install --save node-html-parser

思路
子页面提供继承的父页面的路径，如下：
<template extend="./xxx.vue">
</template>

子页面需要通过一个自定义标签（假设是 extend）的方式，来决定如何拓展父页面，如下就应该是一个替换的操作,它最少应该具备拓展类型 type 与目标节点 target 属性。
<template extend="./xxx.vue">
  <div>
    <extend type="replace" target="#div_1">
      <a>通过replace替换掉父页面下id为div_1的元素 </a>
    </extend>
  </div>
</template>

最终它生成的应该是除了 id 为 div_1元素被<a>通过replace替换掉父页面下id为div_1的元素 </a>替换掉之外，剩下…]]></summary>
        <author>
            <name>小小小小_柏</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[⭐收集有特色的库]]></title>
        <id>https://lainbo.com/article/collection</id>
        <link href="https://lainbo.com/article/collection"/>
        <updated>2024-03-19T12:01:37.000Z</updated>
        <summary type="html"><![CDATA[日常看见一些有特色的库会收集下来，持续收集中]]></summary>
        <author>
            <name>Lainbo's Blog</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Next.js v14 实现乐观更新，面向未来的 UI 更新方式，你可以不去做，但你不应该不了解]]></title>
        <id>https://juejin.cn/post/7347957960884355113</id>
        <link href="https://juejin.cn/post/7347957960884355113"/>
        <updated>2024-03-19T10:03:43.000Z</updated>
        <summary type="html"><![CDATA[本文为稀土掘金技术社区首发签约文章，30天内禁止转载，30天后未获授权禁止转载，侵权必究！
前言
所谓乐观更新，举个例子，当用户在 ToDoList  中添加一项 ToDo 的时候，传统的做法是等待接口返回成功时再更新 UI。乐观更新是先更新 UI，同时发送数据请求。如果数据请求成功，相安无事，用户感受到流畅的操作，提升了用户体验，数据也得到更新。如果更新失败，则视情况对错误进行处理。
一种交互效果如下：

React 为了实现乐观更新，提供了 useOptimistic 这个官方 hook（目前已经在 Canary 和实验阶段了），本篇我们不仅会介绍 useOptimistic，还会用 Next.js v14，结合最新的 Server Actions 特性来实现乐观更新。
同时我们会讲解在出现错误的时候，如何进行撤回或者重置。以及处理一个有意思的问题：乐观更新的时候，用户要关闭网页怎么办？
PS：其实乐观更新并不是一个新潮的思想，很多年前就有人开始做了，但是大家普遍不会去实现乐观更新，一是产品、设计不会过多考虑网速慢的情况，二是就算手动实现乐观更新，虽然并不复杂，但是有一些麻烦，接口那么多，我都加个乐观更新，代码写着写着也可能乱糟糟了，何必去实现呢？
归根到底还是实现成本太高。所以 本篇会结合 Next.js 和 useOptimistic 讲解如何低成本并考虑全面的实现一个乐观更新。 欢迎收藏点赞本篇文章，万一以后用到了呢？如果有关于乐观更新的经验和看法，欢迎留言评论！
PS：学习 Next.js，欢迎入手小册《Next.js 开发指南》。基础篇、实战篇、源码篇、面试篇四大篇章带你系统掌握 Next.js！
废话不多说，让我们直接开始吧！
创建 Next.js 项目
使用 Next.js 官方脚手架创建项目：
npx create-next-app@latest

运行…]]></summary>
        <author>
            <name>冴羽</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[重庆市忠县发布大雾黄色预警]]></title>
        <id>http://www.cneb.gov.cn/yjxx/huangsyj/20240319/t20240319_526632099.html</id>
        <link href="http://www.cneb.gov.cn/yjxx/huangsyj/20240319/t20240319_526632099.html"/>
        <updated>2024-03-19T06:48:00.000Z</updated>
        <summary type="html"><![CDATA[忠县气象台2024年3月19日14时30分继续发布“大雾黄色预警信号”，预计3月19日23时至20日10时，忠州街道、白公街道、乌杨街道、新生街道、涂井乡、石宝镇、汝溪镇、金声乡、野鹤镇、磨子土家族乡、石子乡、复兴镇、东溪镇、黄金镇、永丰镇、花桥镇、三汇镇、马灌镇、官坝镇、金鸡镇、石黄镇、兴峰乡、白石镇、任家镇、双桂镇、拔山镇、洋渡镇、善广乡、新立镇可能出现能见度小于500米的雾，局地能见度小于200米。请以上各地注意防范大雾天气可能造成的影响。]]></summary>
        <author>
            <name>国家预警信息发布中心</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[掘友们，问一下大家mac上用啥建模工具来设计数据库表的，之前Windows用习惯了power designer，mac没找到好用的，有推荐的吗]]></title>
        <id>7347904631294525492</id>
        <link href="https://juejin.cn/pin/7347904631294525492"/>
        <updated>2024-03-19T03:15:56.000Z</updated>
        <summary type="html"><![CDATA[掘友们，问一下大家mac上用啥建模工具来设计数据库表的，之前Windows用习惯了power designer，mac没找到好用的，有推荐的吗]]></summary>
        <author>
            <name>mharvay</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[【动画进阶】极具创意的鼠标交互动画]]></title>
        <id>https://juejin.cn/post/7347626854617202724</id>
        <link href="https://juejin.cn/post/7347626854617202724"/>
        <updated>2024-03-19T02:26:05.000Z</updated>
        <summary type="html"><![CDATA[本文为稀土掘金技术社区首发签约文章，30天内禁止转载，30天后未获授权禁止转载，侵权必究！
最近，群里在讨论这么一个有趣的交互效果，来源于：vueflow.dev：

通过审查元素，发现原效果借助了 Canvas 实现。
思索了一番，觉得这个效果利用 CSS 配合部分 Javascript 代码完全也是可以做到的。
于是动手尝试了一番，最终完美的复刻了该效果：

过程中还是有非常多有意思的技巧存在的，因此，本文将带大家一起，从 0 到 1 实现这个有趣的交互效果。
利用混合模式实现叠加效果
整个效果，比较核心的一块便是当鼠标 Hover 上去时，整个元素叠加上一层黑色图层，但是呈现了不一样的叠加效果。
这个了解混合模式（mix-blend-mode）的同学应该一下就能想到。
在之前，我们也有多篇文章讲解过混合模式，感兴趣的可以随意快速浏览一下，下面是我写过的 15 篇与混合模式相关的合集链接：
iCSS - 混合模式
在这里，我们也快速过一下效果中需要用到的混合模式。
正常而言，假设我们有这么一个 UI 效果：
<div>Lorem ipsum dolor sit amet, consectetur adipisicing elit.....</div>

body {
    background: #eee;
}
div {
    width: 400px;
    background: #42b983;
    color: #fff;
    border: 3px solid #333;
    border-radius: 5px;
}

效果如下：

我们利用 div 的伪元素，在其元素本身上叠加一个纯白色块：
div::before {
  content: "";
  position: absolute;
  inset: -10px;
  back…]]></summary>
        <author>
            <name>Chokcoco</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[发布了: 在个人管理和团队协同中，我理解的周报和月报的作用： - 周报：从简、可不写；是对过程中问题和风险的把控 - 月报：有数据、有里程碑、有感想；是对阶段...]]></title>
        <id>https://m.okjike.com/originalPosts/65f8ee09164d89e601697b01</id>
        <link href="https://m.okjike.com/originalPosts/65f8ee09164d89e601697b01"/>
        <updated>2024-03-19T01:44:41.000Z</updated>
        <summary type="html"><![CDATA[在个人管理和团队协同中，我理解的周报和月报的作用：
- 周报：从简、可不写；是对过程中问题和风险的把控
- 月报：有数据、有里程碑、有感想；是对阶段性结果的把控
过去工作十年，个人也一直保持着写周报和月报的习惯，周报五分钟解决，月报半小时，大部分情况是给自己看，偶尔翻起，也能看到自己在事中的变化和成长。
但觉得最有价值的，还是年报。每年都会维护一篇文档，上面记录了一年内所有的动态目标和达成情况，也包括每个月结束时的感想和思考。
茫然时会翻开这篇文档，很容易找到下一脚要踏在什么地方，例如下个月要开启一项挑战，但技能树尚未点满；再例如这个月有带家人出行的计划，去踏春放风筝，行程需要规划起来了。
还有一份文档，它记录了每隔五年的个人规划和成长方向。一年太短，十年太长，我习惯把五年作为一个规划周期，它时刻提醒自己要去到哪里，要成为怎样的人。这篇文档看的就比较少了，一年最多看两三回，每次去看，都会多一份焦虑，焦虑这一个五年走的太慢，焦虑下一个五年走向何方。]]></summary>
        <author>
            <name>Barret李靖的即刻动态</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[重庆市云阳县发布大雾黄色预警]]></title>
        <id>http://www.cneb.gov.cn/yjxx/huangsyj/20240319/t20240319_526631739.html</id>
        <link href="http://www.cneb.gov.cn/yjxx/huangsyj/20240319/t20240319_526631739.html"/>
        <updated>2024-03-19T01:02:00.000Z</updated>
        <summary type="html"><![CDATA[云阳县气象台2024年3月19日8时50分发布“大雾黄色预警信号”，预计未来6小时，云安镇、南溪镇、江口镇、鱼泉镇、沙市镇、双土镇、外郎乡、龙角镇、普安乡、凤鸣镇、宝坪镇、新津乡、养鹿镇、渠马镇、高阳镇、黄石镇、洞鹿乡、平安镇等乡镇将出现能见度小于500米的雾，局地能见度小于200米。请以上各乡镇注意防范大雾天气可能造成的影响。]]></summary>
        <author>
            <name>国家预警信息发布中心</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[发布了: 确定自己想要什么，以及真正想获得的是什么，然后再去制定自己的奋斗计划。当已经拥有了实现自己目标所需的金钱时，金钱就不再是一个有效的决策要素。换...]]></title>
        <id>https://m.okjike.com/originalPosts/65f8e18c595d881efaa8501b</id>
        <link href="https://m.okjike.com/originalPosts/65f8e18c595d881efaa8501b"/>
        <updated>2024-03-19T00:51:24.000Z</updated>
        <summary type="html"><![CDATA[确定自己想要什么，以及真正想获得的是什么，然后再去制定自己的奋斗计划。当已经拥有了实现自己目标所需的金钱时，金钱就不再是一个有效的决策要素。换句话说，从最开始，挣钱就不是一个正确的目标。]]></summary>
        <author>
            <name>Barret李靖的即刻动态</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[重庆市秀山土家族苗族自治县发布大雾黄色预警]]></title>
        <id>http://www.cneb.gov.cn/yjxx/huangsyj/20240319/t20240319_526631649.html</id>
        <link href="http://www.cneb.gov.cn/yjxx/huangsyj/20240319/t20240319_526631649.html"/>
        <updated>2024-03-18T23:10:00.000Z</updated>
        <summary type="html"><![CDATA[秀山县气象台2024年3月19日6时40分发布“大雾黄色预警信号”，预计19日7时至12时，平凯街道、隘口镇、钟灵镇、清溪场街道、龙凤坝镇、膏田镇、溶溪镇、溪口镇、梅江镇、官庄街道、龙池镇、涌洞镇等乡镇街道可能出现能见度小于500米的雾，局地能见度小于200米。请以上各地注意防范大雾天气可能造成的影响。]]></summary>
        <author>
            <name>国家预警信息发布中心</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[重庆市忠县发布大雾黄色预警]]></title>
        <id>http://www.cneb.gov.cn/yjxx/huangsyj/20240319/t20240319_526631634.html</id>
        <link href="http://www.cneb.gov.cn/yjxx/huangsyj/20240319/t20240319_526631634.html"/>
        <updated>2024-03-18T22:46:00.000Z</updated>
        <summary type="html"><![CDATA[忠县气象台2024年3月19日6时30分发布“大雾黄色预警信号”，预计19日6时至11时，忠州街道、白公街道、新生街道、乌杨街道、东溪镇、磨子土家族乡、涂井乡、复兴镇、石宝镇、野鹤镇、汝溪镇、金声乡、兴峰乡、黄金镇、官坝镇、石黄镇、金鸡镇、三汇镇、马灌镇、新立镇、花桥镇、双桂镇、拔山镇、白石镇、永丰镇、善广乡、任家镇、洋渡镇、石子乡可能出现能见度小于500米的雾，局地能见度小于200米。请以上各地注意防范大雾天气可能造成的影响。]]></summary>
        <author>
            <name>国家预警信息发布中心</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[重庆市开州区发布大雾黄色预警]]></title>
        <id>http://www.cneb.gov.cn/yjxx/huangsyj/20240319/t20240319_526631631.html</id>
        <link href="http://www.cneb.gov.cn/yjxx/huangsyj/20240319/t20240319_526631631.html"/>
        <updated>2024-03-18T22:38:00.000Z</updated>
        <summary type="html"><![CDATA[开州区气象局2024年3月19日06时30分发布“大雾黄色预警信号”，预计3月19日06时30分至12时，我区大部分乡镇（街道）将出现能见度小于500米的雾，局地能见度小于200米。提请注意防范大雾天气可能造成的影响。]]></summary>
        <author>
            <name>国家预警信息发布中心</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[我为什么从WebStorm换到了VSCode？]]></title>
        <id>https://juejin.cn/post/7347668506244349992</id>
        <link href="https://juejin.cn/post/7347668506244349992"/>
        <updated>2024-03-18T16:13:34.000Z</updated>
        <summary type="html"><![CDATA[大家好，我是喜欢折腾，热爱分享的“一只韩非子”。
会编程的韩非子
Hanfz0712
问答群/知识交流群，一起交流技术难题与未来，让我们Geek起来！
因为是后端Boy，所以IDE一直用的都是IntelliJ IDEA。用过IDEA的都知道，在后端开发人员眼中那可是能够相比屠龙宝刀的神器。从代码提示到源码查看，从引用跳转到全局搜索那可谓是无所不能。

插件推荐
那么再开始使用的时候，就必然要上我们非常重要的插件了，很多人使用VSCode最重要的的一个因素也就是插件生态太丰富了，没有你找不到的，只有你想不到的。
1.Chinese (Simplified) (简体中文) Language
其实在使用IDEA的时候我是非常喜欢使用英文版的，对中文反而嗤之以鼻，那是因为很多专业的英文词一被翻译成中文反而没那个味了，有时甚至我都不知道这个中文的东东到底是个什么。所以还是比较喜欢原汁原味的。但是来到了VSCode，不好意思，真不太熟，不翻译下还真不知道是干嘛的，直接两级反转了。所以在一开始前期的学习还是有必要本地化一下的。这个插件也是微软官方出品的，应该不会有很奇怪的翻译，所以大家可以放心食用。

2.One Dark Pro
IDE好不好看决定了我们一半的生产力。鲁迅曾说过：不好看的IDE我不用~于是谨遵鲁迅先生的话，我势必要找一个好看的主题。又是经过一番检索，找到了One Dark Pro这个插件，里面的主题还真不错!我目前使用的是其中的One Dark Pro Flat.换一个美美的主题，感觉一天能写两倍的bug了呢。


3.vscode-icons
这一个插件是用来美化我们的文件图标的，而且让文件的类型更加容易得被辨识。比如，js文件会有一个js标识，vue组件前面会有一个官方的logo等，也是非常推荐的。

4.Git Graph
这个插件可是强推安装哈，是用来通过可视化界面，查看git的提交记录历史和查看git分支之间的关系的，非常有利于我们来梳理各个分支之间的关系。看一下是谁把代码合到了我的分支，让我的分支报错了，哈哈。

5. IntelliJ IDEA Key Bindings
如果你还留恋IDEA的快捷键，那么这个插件可以帮你回忆你们之间美好的时光。它可以将VSCode默认的快捷键修改为IDEA的，我想大多数人应该使用不对到的，但还是推荐下，可能还是有很多恋旧的好兄弟。

相信有了这些插件的强力加持，能够让我和你们在VSCode开发中游刃有余。插件安装好了，剩下的就是起航了。接下来我也会慢慢的去更多的使用VSCode，看下能不能将WebStorm给完全替代，兄弟们，祝我好运。

WebStorm：终究还是不爱了吗(╥╯^╰╥)
小韩：好兄弟，我会想你的。等我用尽力了力气还是走不进code的心，我会回来找你的。（好渣啊0.0）]]></summary>
        <author>
            <name>一只韩非子</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[[7073670907851440160#新人报道#] 来学习]]></title>
        <id>7347517295356887080</id>
        <link href="https://juejin.cn/pin/7347517295356887080"/>
        <updated>2024-03-18T11:38:03.000Z</updated>
        <summary type="html"><![CDATA[[7073670907851440160#新人报道#] 来学习]]></summary>
        <author>
            <name>挂羊头卖羊肉</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[#开源工具 ✨ MulSearch v0.2 MulSearch，一个快速指定搜索源的入口页，方便使用多个搜索引擎和平台的开发者 新版本做了一些调整，用 divider 做了分类，并引入...]]></title>
        <id>7347147911149436943</id>
        <link href="https://juejin.cn/pin/7347147911149436943"/>
        <updated>2024-03-18T05:52:06.000Z</updated>
        <summary type="html"><![CDATA[#开源工具 ✨ MulSearch v0.2
MulSearch，一个快速指定搜索源的入口页，方便使用多个搜索引擎和平台的开发者
新版本做了一些调整，用 divider 做了分类，并引入了一些垂直平台的搜索源
👉 体验地址：https://search.wukaipeng.com/]]></summary>
        <author>
            <name>吴楷鹏</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Lodash已过时，试试它吧！]]></title>
        <id>https://juejin.cn/post/7347279011653402659</id>
        <link href="https://juejin.cn/post/7347279011653402659"/>
        <updated>2024-03-18T02:44:06.000Z</updated>
        <summary type="html"><![CDATA[开篇之前，先提两个问题：
你知道 Radash 吗？
Radash 会取代 Lodash 吗？
认识 Radash
相信大家都知道Lodash, 这个 JavaScript 工具库从2012至今，已经存在长达12年的时间，它在github上的 star 数超过 58.6k， 在 npm 上每周的下载量已超过 5200 万。
最初，Lodash 的运行情况很好，帮助开发人员编写了简洁、可维护的 JavaScript 代码。然而，由于近两年没有针对最新 JavaScript 函数进行重大更新，开发人员在使用 Lodash 时开始面临一些挑战，在这样的背景下，Radash 应运而生，以其现代化的特性和对TypeScript的友好支持，逐渐成为开发者的新宠。
在本文中，我将详细讨论 Lodash 中的问题以及 Radash 如何解决这些问题，从而回答提出的问题：Radash 会取代 Lodash 吗？
Lodash 面临的问题
随着 JavaScript 语言的不断进化和新特性的引入，Lodash 的一些功能开始显得不再那么必要。
Lodash 函数过时了
随着ES6及后续版本的推出，JavaScript 引入了许多新的语言特性，如可选链(?.)和空值合并(??)，使得一些 Lodash 的函数显得多余。
在 ES6 之前，如果你想安全地访问对象的嵌套属性，可以使用 Lodash 的 _.get 函数来避免可能的 undefined 错误。例如：
// 假设我们有一个对象，我们想访问 `a.b.c` 属性 
const obj = {
    a: {
        b: {
            c: 'Hello' 
        } 
      } 
}; 
// 使用 Lodash 的 _.get 来安全地获取值 
const value = _.get(obj, …]]></summary>
        <author>
            <name>芝士加</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[纯 CSS 检测文本是否溢出]]></title>
        <id>https://juejin.cn/post/7347221074704777226</id>
        <link href="https://juejin.cn/post/7347221074704777226"/>
        <updated>2024-03-18T02:19:01.000Z</updated>
        <summary type="html"><![CDATA[theme: fancy
highlight: agate
本文为稀土掘金技术社区首发签约文章，30天内禁止转载，30天后未获授权禁止转载，侵权必究！
欢迎关注我的公众号：前端侦探
介绍一个CSS检测文本溢出的小技巧。
一直以来，CSS 都无法很好的检测出一段文本是否溢出。但这又是一个非常普遍的需求，比如多行文本展开，展开按钮只有在文本溢出的时候才出现

由于无法直接CSS判断，这使得不得不借助 JavaScript或者CSS奇技淫巧来实现，之前提到了不下于3种不同的思路来解决这个问题，在以下这些文章中都有提到
dom 获取不到？试试 CSS 动画监听元素渲染吧
尝试借助CSS @container实现多行文本展开收起
突发奇想！借助CSS自定义彩色字体来实现多行文本展开收起
CSS 实现多行文本“展开收起”
CSS 文本超出提示效果
有兴趣的可以回顾一下，还是挺有意思的
时代在进步，CSS也在不断推出新特性，现在，CSS终于可以完美的解决这个问题了，也就是可以准确无误地判断文本是否溢出了，一起看看吧
一、CSS 滚动驱动动画
要实现文本溢出检测，需要用到两个新特性
CSS 滚动驱动动画
CSS 样式查询
为什么是这两个呢？听我慢慢分析。
首先我们想一想，在 JS中是如何判断是否溢出的？很简单
dom.scrollHeight > dom.offsetHeight;

其实也就是表示这个容器是“可滚动”的，因为滚动高度超过了可视高度

回到 CSS 这里，有没有办法区分呢？答案就是CSS滚动驱动动画
关于 CSS 滚动驱动动画，可以先回顾这篇文章：CSS 滚动驱动动画终于正式支持了~ 
假设有这样一个布局，就两段文本
<div class="txt">
  欢迎关注前端侦探，这里有一些有趣的、你可能不知道的HTML、CSS、JS小技巧技巧。欢迎关注前端侦探，这里有一些有趣的…]]></summary>
        <author>
            <name>XboxYan</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[一行代码引发的离奇问题，众多大佬纷纷参与点评，最终Typescript之父出手解决]]></title>
        <id>https://juejin.cn/post/7347210988260147210</id>
        <link href="https://juejin.cn/post/7347210988260147210"/>
        <updated>2024-03-18T00:32:47.000Z</updated>
        <summary type="html"><![CDATA[highlight: github
theme: vuepress
故事的起因是这样的， 一个前端开发人员(也算是挺有名的，ariakit.org的作者， wrodPress的前维护者)在社交媒体上发了这么一条帖子。

短短几天就有了51.8万次的view。 简单的文案：又是使用 TypeScript 的一天.。表达了对Typescript的又爱又恨😂。在目前的前端市场上，Typescript已经成为标配，ts强大的类型检查机制给我们带来了非常多的好处(代码质量，强大的可维护性，代码即注释)，但是其槽点也很多， 很多奇奇怪怪的问题(相信不仅是我一个人这么觉得)，繁多的配置项组合，稍不注意就会引起页面爆红，代码量增多和代码组织也会引起一定的负担。但在这些并不能撼动Typescript 在目前前端社区中的地位，在开发项目中一般还是会选择typescript。
反应
话说回到这个帖子上，这个帖子发出来之后迅速引起发酵，被很多大佬转发和引用，下面的评论很多都是wait, what, why happen?类似的语气😂，有很多给出建议，比如换种写法， 重启下Typescript server试试，也有很多开发爱好者希望作者能提供一个例子来复现，他们也想看看是什么问题，看能不能尝试解决这个有趣的例子。
（ps: 在ts中有很多奇怪的东西，特别是在和编辑器配合的时候，有些时候不能判断出来是否是个bug？还是我们代码写的有问题？还是设计如此？还是编辑器的问题？还是版本兼容问题？仅代表个人看法）
复现例子
后来有大佬根据作者提供的信息复现出来了样板例子 ：
declare function hasOwnProperty<T extends AnyObject>(
  object: T,
  prop: keyof any,
): prop is keyof T;

type Effec…]]></summary>
        <author>
            <name>xinling_any</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[今天才知道，Web网页也能阻止息屏了]]></title>
        <id>https://www.zhangxinxu.com/wordpress/?p=11135</id>
        <link href="https://www.zhangxinxu.com/wordpress/2024/03/js-screen-wake-lock-api/"/>
        <updated>2024-03-17T15:35:45.000Z</updated>
        <summary type="html"><![CDATA[全新的Screen Wake Lock API，可以让网页无论放置多久，都不要担心熄屏，或出现屏保，Web如今越来越强了。]]></summary>
        <author>
            <name>张 鑫旭</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[发布了: 最近几次出门都是社交驱动，上次在苏州，这次去黄山见了老朋友，聊得意犹未尽，下一站在深圳和北京😄]]></title>
        <id>https://m.okjike.com/originalPosts/65f6c02bde5f287348606230</id>
        <link href="https://m.okjike.com/originalPosts/65f6c02bde5f287348606230"/>
        <updated>2024-03-17T10:04:27.000Z</updated>
        <summary type="html"><![CDATA[最近几次出门都是社交驱动，上次在苏州，这次去黄山见了老朋友，聊得意犹未尽，下一站在深圳和北京😄]]></summary>
        <author>
            <name>Barret李靖的即刻动态</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[重庆市万州区发布大雾黄色预警]]></title>
        <id>http://www.cneb.gov.cn/yjxx/huangsyj/20240317/t20240317_526630103.html</id>
        <link href="http://www.cneb.gov.cn/yjxx/huangsyj/20240317/t20240317_526630103.html"/>
        <updated>2024-03-17T08:38:00.000Z</updated>
        <summary type="html"><![CDATA[万州区气象台2024年3月17日16时30分发布“大雾黄色预警信号”，预计3月17日20时至18日10时，陈家坝街道、周家坝街道、五桥街道、新田镇等镇乡街可能出现能见度小于500米的雾，局地能见度小于200米。请以上各地注意防范大雾天气可能造成的影响。车辆驾驶及户外活动注意安全。机场、高速公路、水上交通等单位加强交通管理。相关部门和乡镇街道按照职责，做好大雾防范应对工作。]]></summary>
        <author>
            <name>国家预警信息发布中心</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[重庆市秀山土家族苗族自治县发布大雾橙色预警]]></title>
        <id>http://www.cneb.gov.cn/yjxx/csyj/20240317/t20240317_526629764.html</id>
        <link href="http://www.cneb.gov.cn/yjxx/csyj/20240317/t20240317_526629764.html"/>
        <updated>2024-03-17T00:42:00.000Z</updated>
        <summary type="html"><![CDATA[秀山县气象台2024年3月17日8时发布“大雾橙色预警信号”，预计17日8时至20时，岑溪乡、中平乡、涌洞镇、雅江镇、洪安镇、大溪乡、峨溶镇、石堤镇、里仁镇、膏田镇、中和街道、溶溪镇、官庄街道、溪口镇、龙池镇、妙泉镇、宋农镇、海洋乡、钟灵镇、梅江镇、清溪场街道、隘口镇、兰桥镇、平凯街道、龙凤坝镇、石耶镇、乌杨街道可能出现能见度小于200米的雾，局地能见度小于50米。请以上各地注意防范大雾天气可能造成的影响。]]></summary>
        <author>
            <name>国家预警信息发布中心</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[纯前端实现 PNG 图片压缩 | UPNG.js]]></title>
        <id>https://juejin.cn/post/7346510823772733494</id>
        <link href="https://juejin.cn/post/7346510823772733494"/>
        <updated>2024-03-16T13:02:32.000Z</updated>
        <summary type="html"><![CDATA[theme: smartblue
在线 Demo 体验地址 →: https://demos.sugarat.top/pages/png-compress/
jcode
前言
最近在迭代自己的 图床 应用，由于使用时间的累计，存储空间占用越来越大了，在做 Web 应用的时候会随手拿 tinypng 压缩一下图片。
想着给咱图床也加个压缩的功能，这样上传/访问也能省点 💰。

图片类型众多，常用的主要就是PNG/JPG/GIF。
个人使用频率最高的场景是截图上传，格式为PNG，就先拿 PNG 试手。调研了一圈开源里最流行的就是使用 UPNG.js 进行 PNG 的压缩。
官方对比 tinypng 介绍；
官方在线示例 Demo。
如何判断图片是 PNG
第一步当然是判断图片类型，不然 UPNG.js 就不能正常工作咯，通过文件后缀 .png 判断肯定是不靠谱的。
搜索了解了一下，可以使用 魔数 判断：一个PNG文件的前8个字节是固定的。
PNG 的前 8 个字节是（16进制表示）：89 50 4E 47 0D 0A 1A 0A。
我们可以拿工具看一下，我这里用 VS Code 插件 Hex Editor 查看一个 PNG 图片的 16 进制表示信息。

可以看到前八个字节和上面表示的一样。
于是可以根据这个特性判断，于是就有如下的判断代码。
async function isPNG(file: File) {
  // 提取前8个字节
  const arraybuffer = await file.slice(0, 8).arrayBuffer()

  // PNG 的前8字节16进制表示
  const signature = [0x89, 0x50, 0x4E, 0x47, 0x0D, 0x0A, 0x1A, 0x0A]
  // const signature =…]]></summary>
        <author>
            <name>粥里有勺糖</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[哈士奇的一周面经：腾讯某部门前端开发]]></title>
        <id>https://juejin.cn/post/7346524071183630355</id>
        <link href="https://juejin.cn/post/7346524071183630355"/>
        <updated>2024-03-16T05:24:08.000Z</updated>
        <summary type="html"><![CDATA[先写总结，这次面试寄了，而且哈士奇没有坚持过二十分钟。。。
说说自己整个面试的过程，首先哈士奇海投简历，本以为大厂会直接筛掉哈士奇的简历，没想到直接就给过了，还很快给哈士奇发邮件通知。

所以先走到了测评这一关，简直一言难尽
测评题
腾讯的测评题目分为三个部分
第一部分55题   逻辑题
第二部分35题   情景题
第三部分25题   IQ题
逻辑题
逻辑题主要是考察反驳能力，比如说应该如何对其他人说的话进行反驳
比如：
有人说“朋友的劝谏是行动的预防针”针对这段话你应该如何反驳
A.
B.
C.
D.
具体的忘记了，大致是这个样子
情景题
考情商  个人认为还会对于自身行为考察
假如你隔壁组的人碰到了一个你们组碰到的问题，这时候你们组的项目进行到了最后的阶段，这时候你会？
A. 写一个文档，给他们学习
B. 帮他们解决问题
C. 派人帮他们解决问题
D. 等项目解决了再帮他们解决
IQ题
纯考行测 比如几张图片选出最合适的  三个名词的规律找到最适合的名词  小学常考的两个管子放水，一个管子出水
最后的计算量还挺大，建议大家提前准备准备刷刷
总结
测试题的占比不会太高，基本上正常写都可以进入下一步的初试
初试
电话面  给我感觉腾讯是一个非常高效的部门，不需要自我介绍，直接开始拷打项目，问东西。
哈士奇大致经过了几个过程 计算机网络基础知识和项目阶段  因为项目难点少，直接在这块被毙了。
计算机网络基础知识
1.用户在浏览输入地址到页面渲染完成的过程
当用户在浏览器中输入地址并按下回车键时，浏览器会执行以下步骤来加载并渲染页面：
地址解析：浏览器解析输入的地址，如果输入的是一个 URL，浏览器会分解 URL，确定要访问的服务器和路径。
DNS 解析：浏览器向 DNS 服务器发送请求，获取输入域名对应的 IP 地址。
建立连接：浏览器使用 HTTP 协议向服务器发送请求，并…]]></summary>
        <author>
            <name>疯犬丨哈士奇</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[面试题：如何让 var [a, b] = {a: 1, b: 2} 解构赋值成功？]]></title>
        <id>https://juejin.cn/post/7346512120639340607</id>
        <link href="https://juejin.cn/post/7346512120639340607"/>
        <updated>2024-03-16T02:03:44.000Z</updated>
        <summary type="html"><![CDATA[前言
这是一道字节面试题，大家第一眼看到这个面试题的时候，是不是脑瓜子嗡嗡的？有一种熟悉又陌生的感觉？我当时也一样的😭😭😭
在 JavaScript 中，解构赋值语法的左侧是一个数组，而右侧则应该是一个具有迭代器接口的对象（如数组、Map、Set等）。因此，将对象 {a: 1, b: 2} 解构赋值给 [a, b] 会导致语法错误，可偏偏面试官要求我们让这个解构赋值表达式成立，真是有苦说不出的感受啊！！！
思路
错误思路
既然将一个对象解构赋值给数组，是一个语法错误，那我们直接把这个解构语法变为对象的解构赋值语法不就好了。直接改成var { a, b } = { a: 1, b: 2 }; 如果这样做的话，哈哈哈哈哈哈，恭喜你面试结束了。
所以我们得好好想清楚，这可是一个字节的面试题，它的考点可不是这么显而易见的。
正确解题思路
我们首先来看看报错是什么样的：
var [a, b] = {a: 1, b: 2}
TypeError: {(intermediate value)(intermediate value)} is not iterable
这个错误是个类型错误，并且是对象有问题，因为对象是一个不具备迭代器属性的数据结构。所以我们可以知道，这个面试题就是考验我们对于迭代器属性的认识，我们再来个场景加深下理解。
let arr = [1, 2, 3]
let obj = {
    a: 1,
    b: 2,
    c: 3
}
for(let item of arr){
    console.log(item)
}
for(let item of obj){
    console.log(item)
}

我们知道for of 只能遍历具有迭代器属性的，在遍历数组的时候会打印出1 2 3，遍历对象时会报这样的一个错误TypeError: obj is…]]></summary>
        <author>
            <name>Ywis</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[重庆市秀山土家族苗族自治县发布大雾橙色预警]]></title>
        <id>http://www.cneb.gov.cn/yjxx/csyj/20240315/t20240315_526628690.html</id>
        <link href="http://www.cneb.gov.cn/yjxx/csyj/20240315/t20240315_526628690.html"/>
        <updated>2024-03-15T15:17:00.000Z</updated>
        <summary type="html"><![CDATA[秀山县气象台2024年3月15日23时发布“大雾橙色预警信号”，预计3月15日23时至16日12时，平凯街道、膏田镇、龙凤坝镇、隘口镇、钟灵镇、清溪场街道、梅江镇、岑溪乡、官庄街道、涌洞镇、龙池镇、大溪乡、溶溪镇、溪口镇等乡镇街道的部分山区可能出现能见度小于200米的雾，局地能见度小于50米。请以上各地注意防范大雾天气可能造成的影响。]]></summary>
        <author>
            <name>国家预警信息发布中心</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[技术资讯：Volar正式更名为Vue-Official]]></title>
        <id>https://juejin.cn/post/7346481513541484579</id>
        <link href="https://juejin.cn/post/7346481513541484579"/>
        <updated>2024-03-15T14:42:01.000Z</updated>
        <summary type="html"><![CDATA[大家好，我是大澈！
本文约700+字，整篇阅读大约需要1分钟。
关注微信公众号：“程序员大澈”，免费加入问答群，一起交流技术难题与未来！
现在关注公众号，免费送你 ”前后端入行大礼包“ ，包含了：前后端面试题、面试技巧、简历模版、前后端学习路线图、前后端全技术栈学习笔记。
1. 资讯速览
因为个人开发使用 IDEA 比较多，而 VSCode 相对用的少点了。
但就在前两天，我打开 VSCode 后，系统给我弹出来这么一个消息。

关闭消息之后，紧接着又给我自动打开一个叫 Vue-Official 的插件主页。当时我看到还有点懵，想着这是个啥玩意，我也没记得自己安装过呀。

于是，我打开所有插件一瞧，才发现我们Vue3旧语言工具 Volar 退了，一个更加强大的Volar升级版，Vue-Official 来了！
Volar 正式升级更名为 Vue-Official ！

2. 资讯详细
不多说废话，先简单列一下我们用得到的 Vue-Official 新特性，最后做小结。
2.1 Vue-Official新特性
支持通过鼠标拖拽来导入组件，告别手动引入！
操作步骤：按住鼠标左键，把组件拖拽到想要引入的地方，VSCode 会提示按住 shift 放入编辑器中，此时我们按 shift 并放开鼠标左键，即可自动导入组件。

然后就是，全面支持 Vue 3.4 新语法特性。
例如：Vue3.4 中增加了属性同名简写的的写法，之前这么用的话，Volar 会报错，现在在 Vue-Official 中得到支持。
<!-- 原写法 -->
<List :data="data" />
<!-- 新写法 -->
<List :data />

2.2 小结
Vue3旧语言工具 Volar 退了，一个更加强大的Volar升级版，Vue-Official 来了！
Volar 正式升级更名为 Vue-Official ！
看到这里的朋友们，赶快去把其它Volar伴生插件卸载掉，把新版用起来吧！
结语
我是大澈，一个喜欢交朋友、喜欢分享、喜欢搞钱的90后小伙。
文章主分享前后端功能问题实现、次分享技术资讯、实用干货。
遇到技术难题，在问答群里与众多同行朋友一起讨论成长。
关注微信公众号：“程序员大澈”，免费加入问答群，一起交流技术难题与未来！
现在关注公众号，免费送你 ”前后端入行大礼包“ ，包含了：前后端面试题、面试技巧、简历模版、前后端学习路线图、前后端全技术栈学习笔记。]]></summary>
        <author>
            <name>程序员大澈</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[全栈项目？那你说说你的token怎么实现的吧]]></title>
        <id>https://juejin.cn/post/7346430299490189348</id>
        <link href="https://juejin.cn/post/7346430299490189348"/>
        <updated>2024-03-15T11:07:43.000Z</updated>
        <summary type="html"><![CDATA[theme: vuepress
highlight: atelier-dune-dark
前言
经常我们会被面试官问，账号密码被修改了怎么办，这就涉及到token了。假设我在淘宝网站登录了账号进入首页，然后我在另一个设备上同样登录该账号，并且将密码修改，原设备刷新数据会被退出登录，这个过程的实现就需要借助token。token翻译过来是令牌的意思
token的实现一定是需要你有登录页面，其他页面，以及后端，本文有点长，因为是手把手教，小白可以放心食用
准备工作
前端简单写两个页面，一个登录页，一个首页
前端
npm create vite@latest client -- --template vue
cd client
npm i 
npm i vue-router@4 
npm i vant  // 安装vant
npm i axios 

路由
import { createWebHistory, createRouter } from 'vue-router'

const routes = [
    {
        path: '/login',
        component: () => import('../views/Login.vue')
    },
    {
        path: '/home',
        component: () => import('../views/Home.vue') 
    }
]

const router = createRouter({
    history: createWebHistory(),
    routes: routes
})

export default router

登录页
借助vantUI，用他的按钮和输入框
自行引入样式~
<template>
    <di…]]></summary>
        <author>
            <name>Dolphin_海豚</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[用node帮老婆做excel工资表]]></title>
        <id>https://juejin.cn/post/7346421986607087635</id>
        <link href="https://juejin.cn/post/7346421986607087635"/>
        <updated>2024-03-15T09:34:24.000Z</updated>
        <summary type="html"><![CDATA[我是天元，立志做1000个有趣的项目的前端。如果你喜欢的话，请点赞，收藏，转发。评论领取零花钱+100勋章
背景
我老婆从事HR的工作，公司有很多连锁店，她需要将所有的门店的工资汇总计算，然后再拆分给各门店请确认，最后再提供给财务发工资。
随着门店数量渐渐增多，渐渐的我老婆已经不堪重负，每天加班都做不完，严重影响夫妻感情生活。
最终花费了2天的时间，完成了整个node程序，她只需要传入工资表，相应的各种表格在10s内自动输出。目前已正式交付，得到了每月零花钱提高100元的重大成果。
整体需求
表格的导入和识别
表格的计算（计算公式要代入），表格样式正确
最终结果按照门店拆分为工资表
需求示例（删减版）

工资表中字段为门店，姓名，基本工资，补发补扣，最终工资（基本工资+补发补扣）。最后一行为总计
工资表

基础工资

补发补扣

技术选型
这次的主力库为exceljs，官方文档介绍如下
读取，操作并写入电子表格数据和样式到 XLSX 和 JSON 文件。
一个 Excel 电子表格文件逆向工程项目
选择exceljs是因为它支持完整的excel的样式及公式。
安装及目录结构
优先安装exceljs
npm init
yarn add exceljs

创建input,out,src三个文件夹，src放入index.js

package.json增加start脚本
"scripts": {
    "start": "node src/index.js"
  },

代码相关
导入
通过new Excel.Workbook();创建一个工作簿，通过workbook.xlsx.readFile来导入文件, 注意这是个promise
const ExcelJS = require("exceljs");
const path = require("path");
const i…]]></summary>
        <author>
            <name>天元reborn</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[发布了: 两个多月前内推了一个简历，点进去一看，状态还是面试中，时长 77 天 22 小时，真替这家公司担忧。]]></title>
        <id>https://m.okjike.com/originalPosts/65f3e2d236246663248d3019</id>
        <link href="https://m.okjike.com/originalPosts/65f3e2d236246663248d3019"/>
        <updated>2024-03-15T05:55:30.000Z</updated>
        <summary type="html"><![CDATA[两个多月前内推了一个简历，点进去一看，状态还是面试中，时长 77 天 22 小时，真替这家公司担忧。]]></summary>
        <author>
            <name>Barret李靖的即刻动态</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[发布了: 手机丢了，星巴克赊账成就达成]]></title>
        <id>https://m.okjike.com/originalPosts/65f39d1537f7165b21dad411</id>
        <link href="https://m.okjike.com/originalPosts/65f39d1537f7165b21dad411"/>
        <updated>2024-03-15T00:57:57.000Z</updated>
        <summary type="html"><![CDATA[手机丢了，星巴克赊账成就达成]]></summary>
        <author>
            <name>Barret李靖的即刻动态</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[科技爱好者周刊（第 293 期）：一周是一年的2%]]></title>
        <id>http://www.ruanyifeng.com/blog/2024/03/weekly-issue-293.html</id>
        <link href="http://www.ruanyifeng.com/blog/2024/03/weekly-issue-293.html"/>
        <updated>2024-03-15T00:13:02.000Z</updated>
        <summary type="html"><![CDATA[这里记录每周值得分享的科技内容，周五发布。
本杂志开源，欢迎投稿。另有《谁在招人》服务，发布程序员招聘信息。合作请邮件联系（yifeng.ruan@gmail.com）。
封面图

安徽芜湖轻轨，为了穿越人行天桥和高架，有一段设计成了波峰波谷，乘坐时会有一点过山车的感觉。（via）
一周是一年的2%
纳特·弗里德曼（Nat Friedman）曾经是 GitHub 的 CEO，现在是一名风险投资家。

他的个人网站首页，写着一些自己的信条。其中有一条，让我很震动。
他写道："一周是一年的2%。"
我一直觉得，每周七天是很短的时间，尤其是发布周刊以后，更是过得飞快。
但是，他的这句话让我意识到，每周其实是一年当中很重要的组成部分。虚度一周就是虚度一年的2%。
你没有几周可以虚度的。只要多浪费几周，这一年很快过去。
反过来，过好这一周，那么这一年的2%就有价值了。只要这样多过几周，一年就会变得很充实，有拿得出手的成果。
我坚持写周刊，每周记录一点东西，整理一些思考，现在想起来，其实就是在督促自己过好这一年的2%。
维苏威古卷
公元79年10月24日，意大利的维苏威火山爆发，一天之内就毁灭了两万多人的庞贝古城。
火山灰掩盖了整座城市，其中有一栋房子存放了各种书籍。直到18世纪，这栋房子才重新被发现，下面是考古学家的建筑复原图。

房子里面的1800多卷纸莎草古书，都已经完全碳化。


考古学家试图展开这些烧焦的古书，但是纸张一碰就碎。

每一页的碎片就像下面这样。

没有人能从这些烧焦的古书上，读出一个字。
2019年，一位美国科学家提出了一种新方法，使用短红外高光谱成像技术，对这些古卷进行 3D 扫描，然后虚拟建模，在不接触古卷的情况下，就可以展开或压平每一页，从而复现上面的笔迹。


下面是扫描后的页面结果。

问题是上面的笔迹还是很模糊，无法确定是哪一个字母，更不要说读出句子…]]></summary>
        <author>
            <name>阮一峰的网络日志</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[idea 哪些好用得插件]]></title>
        <id>7345757062107922484</id>
        <link href="https://juejin.cn/pin/7345757062107922484"/>
        <updated>2024-03-14T01:00:11.000Z</updated>
        <summary type="html"><![CDATA[idea 哪些好用得插件]]></summary>
        <author>
            <name>似懂非懂I</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[#开源工具 如果平时有使用多个搜索引擎的习惯，比如 Google、Bing、百度等，切换起来比较麻烦，可以使用这个轻量网站，功能专一，输入搜索关键词，选择想要的搜...]]></title>
        <id>7345726691510861860</id>
        <link href="https://juejin.cn/pin/7345726691510861860"/>
        <updated>2024-03-13T13:20:34.000Z</updated>
        <summary type="html"><![CDATA[#开源工具 如果平时有使用多个搜索引擎的习惯，比如 Google、Bing、百度等，切换起来比较麻烦，可以使用这个轻量网站，功能专一，输入搜索关键词，选择想要的搜索引擎去搜索即可
👉 search.wukaipeng.com]]></summary>
        <author>
            <name>吴楷鹏</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[xdm，在线找一款vscode插件，能在呼出代码提示后，能在每一个后面标明是property或者函数function的，如下图所示，以前不知道在哪个视频里别人的vscode有见过这...]]></title>
        <id>7345634485780545562</id>
        <link href="https://juejin.cn/pin/7345634485780545562"/>
        <updated>2024-03-13T07:22:02.000Z</updated>
        <summary type="html"><![CDATA[xdm，在线找一款vscode插件，能在呼出代码提示后，能在每一个后面标明是property或者函数function的，如下图所示，以前不知道在哪个视频里别人的vscode有见过这种效果，救救孩子]]></summary>
        <author>
            <name>付小晨</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[wasm可以被逆向么]]></title>
        <id>https://juejin.cn/post/7345423755948785718</id>
        <link href="https://juejin.cn/post/7345423755948785718"/>
        <updated>2024-03-13T05:56:31.000Z</updated>
        <summary type="html"><![CDATA[theme: channing-cyan
首先声明这篇文章不是讲如何逆向 wasm 文件，获取其内部逻辑，这个标题真的就是一个问题，想要问问是否可以逆向
编写一个 wasm
下面先演示用 rust 编写构建一个 wasm 的过程。rust 环境的安装，cargo 是什么命令就不解释了，官方网站有安装使用说明
首先需要创建一个工程
$ cargo new --lib greet-wasm 

进入工程目录添加依赖项
[lib] 
crate-type = ["cdylib"]

[dependencies] 
wasm-bindgen = "0.2" 
js-sys = "0.3.61"  

清空 src/lib.rs 文件中的内容，输入以下代码
extern crate wasm_bindgen;  
use wasm_bindgen::prelude::*;  

#[wasm_bindgen] 
pub fn hello(input: &str) -> JsValue {
  JsValue::from_str(&format!("Hello {}!", input)) 
} 

执行打包命令
$ wasm-pack build  --target web 

经过打包后，将生成 pkg 目录, 此时已经可以将目录发布到 npm 仓库，供项目使用了，此处本地引用，就不发布了
在网页中引用wasm
新建 html 文件，并引用 hello 方法
<!DOCTYPE html>
<html lang="en"> 
  <head>   
    <meta charset="UTF-8">   
    <meta http-equiv="X-UA-Compatible" content="IE=edge">   
    <meta name="viewport" content="width=device-width, initial-scale=1.0"> 
    <title>Document</title> 
  </head> 
  <body>   
    <script type="module">     
      import init, {hello} from './greet-wasm/pkg/greet_wasm.js';
      async function run() {       
        await init();       
        console.log(hello('world'));     
      }     
      run(); 
    </script> 
  </body> 
</html> 

使用任何静态资源服务器打开 html 文件，控制台将会成功打印 Hello world!， 到此已成功调用 wasm 内方法并获取到返回值
逆向 wasm
如果你尝试去打印一个 wasm 暴露出来的方法，将会看到 [native code] ，wasm 直接暴露的方法被认为是原生的方法，不会打印原始代码。毕竟原始代码也不是 js 写的。如果尝试在控制直接查看 wasm 文件的内容，看到是下面的内容，一般人肯定是看不懂的

生成函数签名
所以我在想如果把项目的参数签名逻辑放在 wasm 中去实现，生成签名的过程中使用的 salt 也放在 wasm 中，这样是不是可以避免别人写脚本刷接口的尴尬了。请参考这个站点中的 demo，类似于在浏览器网络面板中看到的每个接口的入参及生成好签名。
那下面的问题就是，这样的网站发布上线后，能否获取网站的验签逻辑，然后修改参数生成签名然后调用接口，以达到一些不可告人的小心思呢。如果你曾经干成过这事，能不能留下你的方法呢。如果你需要上面站点中的 wasm，也请从 demo 站点的控制面板中获取链接并下载]]></summary>
        <author>
            <name>柚子816</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[https://developer.aliyun.com/topic/lingma/activities/202403?taskCode=14508&recordId=f024db3e41b11bd3fd40ebd113787850#/?utm_content=m_fission_1 「通义...]]></title>
        <id>7345645720042962959</id>
        <link href="https://juejin.cn/pin/7345645720042962959"/>
        <updated>2024-03-13T03:26:53.000Z</updated>
        <summary type="html"><![CDATA[https://developer.aliyun.com/topic/lingma/activities/202403?taskCode=14508&recordId=f024db3e41b11bd3fd40ebd113787850#/?utm_content=m_fission_1  「通义灵码 · 体验 AI 编码，开 AI 盲盒」]]></summary>
        <author>
            <name>Zakary</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[注意！Electron无法获取设备ID了！]]></title>
        <id>https://juejin.cn/post/7345379924168196137</id>
        <link href="https://juejin.cn/post/7345379924168196137"/>
        <updated>2024-03-13T03:07:11.000Z</updated>
        <summary type="html"><![CDATA[大家好，我是杨成功。
在桌面应用开发中，常常需要获取设备唯一 ID 来表示当前客户端的唯一性。一般的设备 ID 需要满足两个条件：
基于硬件和系统配置生成，确保设备的唯一性。
只要不重装系统，设备 ID 多次获取都是唯一的。
node-machine-id 是一个常用的 Node.js 模块，它能够在 Electron 中获取机器的唯一标识。
我们的产品就是使用该模块，用法也很简单：
import { machineIdSync } from 'node-machine-id';
let id = machineIdSync();

但是昨天出现了问题，排查结果是多台设备获取的 ID 竟然是一样的，造成了一些设备的数据被篡改，我从 issues 中找到了一些端倪。

也就是在 Window Ghost 系统中会出现问题（啥是 Window Ghost ？）。
Window 中还经常遇到权限问题，而且这个 ID 总归不可控，所以还是用自定义的方式实现吧。
自定义设置设备 ID
自定义的设备 ID 首先需要唯一，其次在安装和卸载应用时设备 ID 不变。
满足这两个要求，最佳的方案就是将自己生成的设备 ID 存储在用户目录下。
假设当前用户叫张三，他的用户目录：
Window：C:\Users\张三\
MacOS：/Users/张三/
很多应用程序都把配置写到用户目录下，且该目录一般不会遇到权限问题。
（1）使用 uuid 生成设备 ID：
import { v4 as uuidv4 } from 'uuid';
const device_id = uuidv4();

（2）在主进程中获取到用户目录，非常简单：
import { app } from 'electron';
const user_path = app.getPath('home'); // 自动获取 Win 或 Mac 的用户目录

（3）在用户目录下创建 .elappid 文件，存放生成的设备 ID：
import { join } from 'node:path';
import fs from 'node:fs';
// 获取配置文件地址
let appid_path = join(user_path, '.elappid');
// 判断文件是否存在，不存在就先创建，并写入设备ID
if (!fs.existsSync(appid_path)) {
  fs.writeFileSync(appid_path, device_id, 'utf8');
}

（4）读取设备 ID，并发送给渲染进程：
let appid = fs.readFileSync(appid_path, 'utf8');
win.webContents.send('susr-config', { appid });

写一个进程间交互的方法，就能拿到设备 ID 了。
什么时候获取设备 ID
正常情况下，我们希望用户打开应用的时候，主动获取设备 ID 并发给渲染进程。
然而经过测试，在创建浏览器窗口的同时立即获取设备 ID 并通知渲染进程，在正式环境中，渲染进程往往接受不到消息。
这是因为创建窗口时，页面还没有初始化完成，自然接收不到消息。
保险的方法就是在页面加载完成后再获取设备 ID，方法如下：
win = new BrowserWindow({...})

// 页面加载完成后触发：
win.webContents.on("did-finish-load", () => {
  console.log('在这里获取设备ID吧')
})

大功告成，你也试试吧！
本文来自公众号 程序员成功，关注查看更多]]></summary>
        <author>
            <name>杨成功</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Vue3 动态组件？！原来是这样啊！]]></title>
        <id>https://juejin.cn/post/7345297230201258024</id>
        <link href="https://juejin.cn/post/7345297230201258024"/>
        <updated>2024-03-12T17:18:12.000Z</updated>
        <summary type="html"><![CDATA[theme: fancy
本篇文章主要以理解Vue3动态组件，及其相关应用与问题解析。
什么是 Vue3 动态组件？
简单来说，这里的动态，即：能够根据组件的呈现条件，来调整好自己需要呈现的组件，以此来满足对需求的实现。
注：和动态样式一样，通过用户的操作来确定是什么类型的组件。
基本使用
在 Vue3 中，使用动态组件非常简单，我们只需要在模板中使用<component>标签，并通过设置组件的is属性来指定要渲染的组件。例如：
<component :is="currentComponent"></component>

其中，currentComponent是一个变量，它的值可以是以下 2 种：
已注册的组件名，或 HTML 标签名称
导入的组件对象
以下是示例：
<script>
import { Transition, TransitionGroup } from 'vue'

export default {
  components: {
    Transition,
    TransitionGroup
  }
}
</script>

<template>
  <component :is="isGroup ? 'TransitionGroup' : 'Transition'">
    ...
  </component>
</template>

在这个例子中，我们可以看到，component 所呈现的组件，是由isGroup来决定的。
注意：
如果将组件本身传递给 is 而不是其名称，则不需要注册，例如在 <script setup> 中。
如果在 <component> 标签上使用 v-model，模板编译器会将其扩展为 modelValue prop 和 update:modelValue 事件监听器，就像对任何其他组件一样。但是，这与原生 H…]]></summary>
        <author>
            <name>ice_dk</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[jym，有没有好用的AI代码提示工具推荐]]></title>
        <id>7345105899151687692</id>
        <link href="https://juejin.cn/pin/7345105899151687692"/>
        <updated>2024-03-12T01:42:01.000Z</updated>
        <summary type="html"><![CDATA[jym，有没有好用的AI代码提示工具推荐]]></summary>
        <author>
            <name>一只小芒果</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[科技爱好者周刊（第 292 期）：所有代码都是技术债]]></title>
        <id>http://www.ruanyifeng.com/blog/2024/03/weekly-issue-292.html</id>
        <link href="http://www.ruanyifeng.com/blog/2024/03/weekly-issue-292.html"/>
        <updated>2024-03-08T00:24:48.000Z</updated>
        <summary type="html"><![CDATA[这里记录每周值得分享的科技内容，周五发布。
本杂志开源，欢迎投稿。另有《谁在招人》服务，发布程序员招聘信息。合作请邮件联系（yifeng.ruan@gmail.com）。
封面图

意大利佛罗伦萨新机场，宣布了设计方案。候机楼顶部将有一个7.7公顷的葡萄种植园，用来酿造当地著名的葡萄酒。（via）
所有代码都是技术债
代码是公司的资产，公司总是鼓励大家多写代码。但是，很多人（尤其是管理层）没有意识到，代码也是负债。
代码越多，债越多，这就是程序员常说的"技术债"。

今天我想谈谈，什么是"技术债"？为什么你拥有的代码太多，不是一件好事。
"技术债"（technical debt）源自著名程序员沃德·坎宁安（Ward Cunningham）的一篇文章。他写了一句话："交付代码就像负债累累。"

你的代码一旦进入生产环境，就像背上一笔债务，将来需要不断支付利息，除非代码不再使用。
这个比喻获得了共鸣，人们把代码带来的负担，称为"技术债"。
为什么代码好比负债累累？这有两个原因。
第一个原因是，由于各种限制，代码的实现有问题，包含了 Bug，或者选择了有问题的组件，后期需要修改或重写。
第二个原因是，即使代码是完美的，但由于技术进步，它会逐渐腐化过时，后期需要不断维护和更新，这通常比原始开发成本更高。
这意味着，无论多么小心，上线的代码总是有"技术债"。 可以这样说，所有的代码都是技术债。

"技术债"的可怕之处，在于你必须按时偿还，如果拖着不还，它就会像雪球一样越滚越多，维护成本越来越高，直到再也无法维护，只能放弃这段代码。
既然所有代码都是技术债，程序员写代码时，就必须考虑到它的长期成本，尽量减轻自己或别人日后的负担（利息）。
一个基本的事实是 代码越少，技术债越小；没有代码，就没有技术债。从这个角度看，软件开发的正确做法是下面两点。
（1）冗余的代码都要删除。
（2）只实现…]]></summary>
        <author>
            <name>阮一峰的网络日志</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Clash Verge系列使用最佳实践]]></title>
        <id>https://lainbo.com/article/clash-config</id>
        <link href="https://lainbo.com/article/clash-config"/>
        <updated>2024-03-02T04:39:02.000Z</updated>
        <summary type="html"><![CDATA[Clash确实是开箱即用，但开箱时并不是一个优秀的状态。当我将所有服务迁移到国外服务商时，我意识到在短时间内离不开Clash了。为了防止出现问题，我研究了一些Clash相关的东西。现在是时候做一个总结了。]]></summary>
        <author>
            <name>Lainbo's Blog</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[科技爱好者周刊（第 291 期）：AI 没有护城河]]></title>
        <id>http://www.ruanyifeng.com/blog/2024/03/weekly-issue-291.html</id>
        <link href="http://www.ruanyifeng.com/blog/2024/03/weekly-issue-291.html"/>
        <updated>2024-03-01T00:25:43.000Z</updated>
        <summary type="html"><![CDATA[这里记录每周值得分享的科技内容，周五发布。
本杂志开源，欢迎投稿。另有《谁在招人》服务，发布程序员招聘信息。合作请邮件联系（yifeng.ruan@gmail.com）。
封面图

2022年完工的宁波惠贞高级中学，将学校与公园融为一体，在体育场看台上方，设计了一个几层楼高的开放式空间。（via）
AI 没有护城河
上周，魅族手机突然宣布，停止传统的智能手机新项目，All in AI。

魅族董事长沈子瑜公开说，"给魅族的智能手机时代一个完美的句号"，以后推出的将全部是 AI 设备。
看上去，魅族觉得，AI 比手机更有前途，所以决定停止老本行，改做 AI 设备。

（图片说明：最新的"魅族 21 PRO"手机，大概没有下一代了。）
最近，AI 如日中天，动心的企业恐怕不在少数，大家都想趁早加入，分一杯羹。
但是，我想泼一点冷水。AI 更有前途是不假，但是改做 AI 真的更容易活下去吗？
去年上半年，一份谷歌内部报告泄漏，据说是某个研究员写给谷歌高管的，看上去可信度很高。
当时，谷歌内部正在讨论，如何应对 OpenAI 公司的 ChatGPT。这个研究员提出自己的看法，题目就叫做《AI 没有护城河》（中文译文）。

他的核心观点是，即使谷歌全力投入，可能也赢不了这场 AI 竞赛。不仅谷歌赢不了，OpenAI 也赢不了。
原因倒不是谷歌的能力不行，而是 AI 行业有一些特点，导致这是一个完全竞争行业，"没有护城河"，想要获得领先优势和垄断利润，极其困难。
（1）生成式 AI 的核心技术是开源的，任何人都可以获取。
某些公司可能有独家技术，但不是关键部分。AI 的架构和原理都是公开的，不同的只是各家的实现。
网上有 AI 的开源模型，功能越来越强。只要按照教程操作，即使是家用电脑，也能很快架设一个可用的 AI 服务。
（2）AI 模型的替代性很强。
各公司的模型有强有弱，但是核心…]]></summary>
        <author>
            <name>阮一峰的网络日志</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[不改变音调情况下Audio音频的倍速合成JS实现]]></title>
        <id>https://www.zhangxinxu.com/wordpress/?p=11124</id>
        <link href="https://www.zhangxinxu.com/wordpress/2024/02/js-audioencoder-backplayrate-audiobuffer/"/>
        <updated>2024-02-29T14:22:22.000Z</updated>
        <summary type="html"><![CDATA[音视频合成的时候，有倍速合成的需求，起初，我以为这只是个手到擒来的小需求，细究之下发现问题并不简单……]]></summary>
        <author>
            <name>张 鑫旭</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[发布了: 任何一件事，都存在一个观察角度，使得该问题变得异常简单易解。]]></title>
        <id>https://m.okjike.com/originalPosts/65dc676c6d9f1906319a6a34</id>
        <link href="https://m.okjike.com/originalPosts/65dc676c6d9f1906319a6a34"/>
        <updated>2024-02-26T10:26:52.000Z</updated>
        <summary type="html"><![CDATA[任何一件事，都存在一个观察角度，使得该问题变得异常简单易解。]]></summary>
        <author>
            <name>李继刚的即刻动态</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[科技爱好者周刊（第 290 期）：苹果头盔的最大问题]]></title>
        <id>http://www.ruanyifeng.com/blog/2024/02/weekly-issue-290.html</id>
        <link href="http://www.ruanyifeng.com/blog/2024/02/weekly-issue-290.html"/>
        <updated>2024-02-23T00:11:44.000Z</updated>
        <summary type="html"><![CDATA[这里记录每周值得分享的科技内容，周五发布。
本杂志开源，欢迎投稿。另有《谁在招人》服务，发布程序员招聘信息。合作请邮件联系（yifeng.ruan@gmail.com）。
封面图

上图是国际野生动物摄影师比赛（2023年度）的第一名作品，一只小北极熊在挪威斯瓦尔巴群岛附近漂浮的冰块上，用爪子挖出了一张床，爬上去睡着了。（via）
苹果头盔的最大问题
春节前，苹果公司的 Apple Vision Pro 上架销售了。
这是近几年最创新的硬件设备，首批20万台一抢而空。

它只在美国销售，还没有官方的中文名。为了行文方便，我暂且就叫它"苹果头盔"吧。
虽然这么叫，但是苹果对它的定位可不是 VR 头盔，而是"空间计算机"（spatial computer）。
这个名称大有奥妙，表明了苹果公司对它的长远规划：这是一台通用计算机，跟笔记本和手机一样，属于消费级计算设备。
在苹果眼中，这三者----Mac、iPhone、苹果头盔----能做的事情是一样的，只是使用场合不同。Mac 是桌面计算机，iPhone 是便携计算机，苹果头盔是穿戴计算机。
iFixit 网站拆解了苹果头盔，证实了 CPU 是 M2 芯片，跟 MacBook 笔记本相同。因此理论上，MacBook 可以运行的程序，苹果头盔都能运行。

问题就来了，你觉得，苹果头盔能当作通用计算机使用吗？
一些人非常看好，认为它的虚拟空间感前所未有，让实体屏幕变成了虚拟屏幕，将来完全可以戴着它办公。另一些人则觉得，它有内在的缺陷，无法用来办公。
著名的 IT 分析师 Ben Thompson 写了自己的使用感受。我觉得，他分析得比较深入，分享给大家。
他说，自己戴上头盔的第一反应是，这玩意太棒了，看视频无与伦比！他的妻子惊呼："有了它，谁还要去电影院？"
但是，当他打算戴着头盔写文章时，就发现存在一个最大问题，使其无法用于任何严肃…]]></summary>
        <author>
            <name>阮一峰的网络日志</name>
        </author>
    </entry>
</feed>